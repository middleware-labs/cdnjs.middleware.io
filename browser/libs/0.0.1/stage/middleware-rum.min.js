(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,(function(r){var n=e[i][1][r];return o(n||r)}),p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";module.exports=require("./packages/init")},{"./packages/init":682}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ContextAPI=void 0;const NoopContextManager_1=require("../context/NoopContextManager");const global_utils_1=require("../internal/global-utils");const diag_1=require("./diag");const API_NAME="context";const NOOP_CONTEXT_MANAGER=new NoopContextManager_1.NoopContextManager;class ContextAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new ContextAPI}return this._instance}setGlobalContextManager(contextManager){return(0,global_utils_1.registerGlobal)(API_NAME,contextManager,diag_1.DiagAPI.instance())}active(){return this._getContextManager().active()}with(context,fn,thisArg,...args){return this._getContextManager().with(context,fn,thisArg,...args)}bind(context,target){return this._getContextManager().bind(context,target)}_getContextManager(){return(0,global_utils_1.getGlobal)(API_NAME)||NOOP_CONTEXT_MANAGER}disable(){this._getContextManager().disable();(0,global_utils_1.unregisterGlobal)(API_NAME,diag_1.DiagAPI.instance())}}exports.ContextAPI=ContextAPI},{"../context/NoopContextManager":12,"../internal/global-utils":20,"./diag":3}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DiagAPI=void 0;const ComponentLogger_1=require("../diag/ComponentLogger");const logLevelLogger_1=require("../diag/internal/logLevelLogger");const types_1=require("../diag/types");const global_utils_1=require("../internal/global-utils");const API_NAME="diag";class DiagAPI{constructor(){function _logProxy(funcName){return function(...args){const logger=(0,global_utils_1.getGlobal)("diag");if(!logger)return;return logger[funcName](...args)}}const self=this;const setLogger=(logger,optionsOrLogLevel={logLevel:types_1.DiagLogLevel.INFO})=>{var _a,_b,_c;if(logger===self){const err=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");self.error((_a=err.stack)!==null&&_a!==void 0?_a:err.message);return false}if(typeof optionsOrLogLevel==="number"){optionsOrLogLevel={logLevel:optionsOrLogLevel}}const oldLogger=(0,global_utils_1.getGlobal)("diag");const newLogger=(0,logLevelLogger_1.createLogLevelDiagLogger)((_b=optionsOrLogLevel.logLevel)!==null&&_b!==void 0?_b:types_1.DiagLogLevel.INFO,logger);if(oldLogger&&!optionsOrLogLevel.suppressOverrideMessage){const stack=(_c=(new Error).stack)!==null&&_c!==void 0?_c:"<failed to generate stacktrace>";oldLogger.warn(`Current logger will be overwritten from ${stack}`);newLogger.warn(`Current logger will overwrite one already registered from ${stack}`)}return(0,global_utils_1.registerGlobal)("diag",newLogger,self,true)};self.setLogger=setLogger;self.disable=()=>{(0,global_utils_1.unregisterGlobal)(API_NAME,self)};self.createComponentLogger=options=>new ComponentLogger_1.DiagComponentLogger(options);self.verbose=_logProxy("verbose");self.debug=_logProxy("debug");self.info=_logProxy("info");self.warn=_logProxy("warn");self.error=_logProxy("error")}static instance(){if(!this._instance){this._instance=new DiagAPI}return this._instance}}exports.DiagAPI=DiagAPI},{"../diag/ComponentLogger":15,"../diag/internal/logLevelLogger":17,"../diag/types":18,"../internal/global-utils":20}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricsAPI=void 0;const NoopMeterProvider_1=require("../metrics/NoopMeterProvider");const global_utils_1=require("../internal/global-utils");const diag_1=require("./diag");const API_NAME="metrics";class MetricsAPI{constructor(){}static getInstance(){if(!this._instance){this._instance=new MetricsAPI}return this._instance}setGlobalMeterProvider(provider){return(0,global_utils_1.registerGlobal)(API_NAME,provider,diag_1.DiagAPI.instance())}getMeterProvider(){return(0,global_utils_1.getGlobal)(API_NAME)||NoopMeterProvider_1.NOOP_METER_PROVIDER}getMeter(name,version,options){return this.getMeterProvider().getMeter(name,version,options)}disable(){(0,global_utils_1.unregisterGlobal)(API_NAME,diag_1.DiagAPI.instance())}}exports.MetricsAPI=MetricsAPI},{"../internal/global-utils":20,"../metrics/NoopMeterProvider":25,"./diag":3}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PropagationAPI=void 0;const global_utils_1=require("../internal/global-utils");const NoopTextMapPropagator_1=require("../propagation/NoopTextMapPropagator");const TextMapPropagator_1=require("../propagation/TextMapPropagator");const context_helpers_1=require("../baggage/context-helpers");const utils_1=require("../baggage/utils");const diag_1=require("./diag");const API_NAME="propagation";const NOOP_TEXT_MAP_PROPAGATOR=new NoopTextMapPropagator_1.NoopTextMapPropagator;class PropagationAPI{constructor(){this.createBaggage=utils_1.createBaggage;this.getBaggage=context_helpers_1.getBaggage;this.setBaggage=context_helpers_1.setBaggage;this.deleteBaggage=context_helpers_1.deleteBaggage}static getInstance(){if(!this._instance){this._instance=new PropagationAPI}return this._instance}setGlobalPropagator(propagator){return(0,global_utils_1.registerGlobal)(API_NAME,propagator,diag_1.DiagAPI.instance())}inject(context,carrier,setter=TextMapPropagator_1.defaultTextMapSetter){return this._getGlobalPropagator().inject(context,carrier,setter)}extract(context,carrier,getter=TextMapPropagator_1.defaultTextMapGetter){return this._getGlobalPropagator().extract(context,carrier,getter)}fields(){return this._getGlobalPropagator().fields()}disable(){(0,global_utils_1.unregisterGlobal)(API_NAME,diag_1.DiagAPI.instance())}_getGlobalPropagator(){return(0,global_utils_1.getGlobal)(API_NAME)||NOOP_TEXT_MAP_PROPAGATOR}}exports.PropagationAPI=PropagationAPI},{"../baggage/context-helpers":7,"../baggage/utils":10,"../internal/global-utils":20,"../propagation/NoopTextMapPropagator":29,"../propagation/TextMapPropagator":30,"./diag":3}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceAPI=void 0;const global_utils_1=require("../internal/global-utils");const ProxyTracerProvider_1=require("../trace/ProxyTracerProvider");const spancontext_utils_1=require("../trace/spancontext-utils");const context_utils_1=require("../trace/context-utils");const diag_1=require("./diag");const API_NAME="trace";class TraceAPI{constructor(){this._proxyTracerProvider=new ProxyTracerProvider_1.ProxyTracerProvider;this.wrapSpanContext=spancontext_utils_1.wrapSpanContext;this.isSpanContextValid=spancontext_utils_1.isSpanContextValid;this.deleteSpan=context_utils_1.deleteSpan;this.getSpan=context_utils_1.getSpan;this.getActiveSpan=context_utils_1.getActiveSpan;this.getSpanContext=context_utils_1.getSpanContext;this.setSpan=context_utils_1.setSpan;this.setSpanContext=context_utils_1.setSpanContext}static getInstance(){if(!this._instance){this._instance=new TraceAPI}return this._instance}setGlobalTracerProvider(provider){const success=(0,global_utils_1.registerGlobal)(API_NAME,this._proxyTracerProvider,diag_1.DiagAPI.instance());if(success){this._proxyTracerProvider.setDelegate(provider)}return success}getTracerProvider(){return(0,global_utils_1.getGlobal)(API_NAME)||this._proxyTracerProvider}getTracer(name,version){return this.getTracerProvider().getTracer(name,version)}disable(){(0,global_utils_1.unregisterGlobal)(API_NAME,diag_1.DiagAPI.instance());this._proxyTracerProvider=new ProxyTracerProvider_1.ProxyTracerProvider}}exports.TraceAPI=TraceAPI},{"../internal/global-utils":20,"../trace/ProxyTracerProvider":36,"../trace/context-utils":38,"../trace/spancontext-utils":44,"./diag":3}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.deleteBaggage=exports.setBaggage=exports.getBaggage=void 0;const context_1=require("../context/context");const BAGGAGE_KEY=(0,context_1.createContextKey)("OpenTelemetry Baggage Key");function getBaggage(context){return context.getValue(BAGGAGE_KEY)||undefined}exports.getBaggage=getBaggage;function setBaggage(context,baggage){return context.setValue(BAGGAGE_KEY,baggage)}exports.setBaggage=setBaggage;function deleteBaggage(context){return context.deleteValue(BAGGAGE_KEY)}exports.deleteBaggage=deleteBaggage},{"../context/context":13}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BaggageImpl=void 0;class BaggageImpl{constructor(entries){this._entries=entries?new Map(entries):new Map}getEntry(key){const entry=this._entries.get(key);if(!entry){return undefined}return Object.assign({},entry)}getAllEntries(){return Array.from(this._entries.entries()).map((([k,v])=>[k,v]))}setEntry(key,entry){const newBaggage=new BaggageImpl(this._entries);newBaggage._entries.set(key,entry);return newBaggage}removeEntry(key){const newBaggage=new BaggageImpl(this._entries);newBaggage._entries.delete(key);return newBaggage}removeEntries(...keys){const newBaggage=new BaggageImpl(this._entries);for(const key of keys){newBaggage._entries.delete(key)}return newBaggage}clear(){return new BaggageImpl}}exports.BaggageImpl=BaggageImpl},{}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.baggageEntryMetadataSymbol=void 0;exports.baggageEntryMetadataSymbol=Symbol("BaggageEntryMetadata")},{}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.baggageEntryMetadataFromString=exports.createBaggage=void 0;const diag_1=require("../api/diag");const baggage_impl_1=require("./internal/baggage-impl");const symbol_1=require("./internal/symbol");const diag=diag_1.DiagAPI.instance();function createBaggage(entries={}){return new baggage_impl_1.BaggageImpl(new Map(Object.entries(entries)))}exports.createBaggage=createBaggage;function baggageEntryMetadataFromString(str){if(typeof str!=="string"){diag.error(`Cannot create baggage metadata from unknown type: ${typeof str}`);str=""}return{__TYPE__:symbol_1.baggageEntryMetadataSymbol,toString(){return str}}}exports.baggageEntryMetadataFromString=baggageEntryMetadataFromString},{"../api/diag":3,"./internal/baggage-impl":8,"./internal/symbol":9}],11:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.context=void 0;const context_1=require("./api/context");exports.context=context_1.ContextAPI.getInstance()},{"./api/context":2}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NoopContextManager=void 0;const context_1=require("./context");class NoopContextManager{active(){return context_1.ROOT_CONTEXT}with(_context,fn,thisArg,...args){return fn.call(thisArg,...args)}bind(_context,target){return target}enable(){return this}disable(){return this}}exports.NoopContextManager=NoopContextManager},{"./context":13}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ROOT_CONTEXT=exports.createContextKey=void 0;function createContextKey(description){return Symbol.for(description)}exports.createContextKey=createContextKey;class BaseContext{constructor(parentContext){const self=this;self._currentContext=parentContext?new Map(parentContext):new Map;self.getValue=key=>self._currentContext.get(key);self.setValue=(key,value)=>{const context=new BaseContext(self._currentContext);context._currentContext.set(key,value);return context};self.deleteValue=key=>{const context=new BaseContext(self._currentContext);context._currentContext.delete(key);return context}}}exports.ROOT_CONTEXT=new BaseContext},{}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.diag=void 0;const diag_1=require("./api/diag");exports.diag=diag_1.DiagAPI.instance()},{"./api/diag":3}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DiagComponentLogger=void 0;const global_utils_1=require("../internal/global-utils");class DiagComponentLogger{constructor(props){this._namespace=props.namespace||"DiagComponentLogger"}debug(...args){return logProxy("debug",this._namespace,args)}error(...args){return logProxy("error",this._namespace,args)}info(...args){return logProxy("info",this._namespace,args)}warn(...args){return logProxy("warn",this._namespace,args)}verbose(...args){return logProxy("verbose",this._namespace,args)}}exports.DiagComponentLogger=DiagComponentLogger;function logProxy(funcName,namespace,args){const logger=(0,global_utils_1.getGlobal)("diag");if(!logger){return}args.unshift(namespace);return logger[funcName](...args)}},{"../internal/global-utils":20}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DiagConsoleLogger=void 0;const consoleMap=[{n:"error",c:"error"},{n:"warn",c:"warn"},{n:"info",c:"info"},{n:"debug",c:"debug"},{n:"verbose",c:"trace"}];class DiagConsoleLogger{constructor(){function _consoleFunc(funcName){return function(...args){if(console){let theFunc=console[funcName];if(typeof theFunc!=="function"){theFunc=console.log}if(typeof theFunc==="function"){return theFunc.apply(console,args)}}}}for(let i=0;i<consoleMap.length;i++){this[consoleMap[i].n]=_consoleFunc(consoleMap[i].c)}}}exports.DiagConsoleLogger=DiagConsoleLogger},{}],17:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createLogLevelDiagLogger=void 0;const types_1=require("../types");function createLogLevelDiagLogger(maxLevel,logger){if(maxLevel<types_1.DiagLogLevel.NONE){maxLevel=types_1.DiagLogLevel.NONE}else if(maxLevel>types_1.DiagLogLevel.ALL){maxLevel=types_1.DiagLogLevel.ALL}logger=logger||{};function _filterFunc(funcName,theLevel){const theFunc=logger[funcName];if(typeof theFunc==="function"&&maxLevel>=theLevel){return theFunc.bind(logger)}return function(){}}return{error:_filterFunc("error",types_1.DiagLogLevel.ERROR),warn:_filterFunc("warn",types_1.DiagLogLevel.WARN),info:_filterFunc("info",types_1.DiagLogLevel.INFO),debug:_filterFunc("debug",types_1.DiagLogLevel.DEBUG),verbose:_filterFunc("verbose",types_1.DiagLogLevel.VERBOSE)}}exports.createLogLevelDiagLogger=createLogLevelDiagLogger},{"../types":18}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DiagLogLevel=void 0;var DiagLogLevel;(function(DiagLogLevel){DiagLogLevel[DiagLogLevel["NONE"]=0]="NONE";DiagLogLevel[DiagLogLevel["ERROR"]=30]="ERROR";DiagLogLevel[DiagLogLevel["WARN"]=50]="WARN";DiagLogLevel[DiagLogLevel["INFO"]=60]="INFO";DiagLogLevel[DiagLogLevel["DEBUG"]=70]="DEBUG";DiagLogLevel[DiagLogLevel["VERBOSE"]=80]="VERBOSE";DiagLogLevel[DiagLogLevel["ALL"]=9999]="ALL"})(DiagLogLevel=exports.DiagLogLevel||(exports.DiagLogLevel={}))},{}],19:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.trace=exports.propagation=exports.metrics=exports.diag=exports.context=exports.INVALID_SPAN_CONTEXT=exports.INVALID_TRACEID=exports.INVALID_SPANID=exports.isValidSpanId=exports.isValidTraceId=exports.isSpanContextValid=exports.createTraceState=exports.TraceFlags=exports.SpanStatusCode=exports.SpanKind=exports.SamplingDecision=exports.ProxyTracerProvider=exports.ProxyTracer=exports.defaultTextMapSetter=exports.defaultTextMapGetter=exports.ValueType=exports.createNoopMeter=exports.DiagLogLevel=exports.DiagConsoleLogger=exports.ROOT_CONTEXT=exports.createContextKey=exports.baggageEntryMetadataFromString=void 0;var utils_1=require("./baggage/utils");Object.defineProperty(exports,"baggageEntryMetadataFromString",{enumerable:true,get:function(){return utils_1.baggageEntryMetadataFromString}});var context_1=require("./context/context");Object.defineProperty(exports,"createContextKey",{enumerable:true,get:function(){return context_1.createContextKey}});Object.defineProperty(exports,"ROOT_CONTEXT",{enumerable:true,get:function(){return context_1.ROOT_CONTEXT}});var consoleLogger_1=require("./diag/consoleLogger");Object.defineProperty(exports,"DiagConsoleLogger",{enumerable:true,get:function(){return consoleLogger_1.DiagConsoleLogger}});var types_1=require("./diag/types");Object.defineProperty(exports,"DiagLogLevel",{enumerable:true,get:function(){return types_1.DiagLogLevel}});var NoopMeter_1=require("./metrics/NoopMeter");Object.defineProperty(exports,"createNoopMeter",{enumerable:true,get:function(){return NoopMeter_1.createNoopMeter}});var Metric_1=require("./metrics/Metric");Object.defineProperty(exports,"ValueType",{enumerable:true,get:function(){return Metric_1.ValueType}});var TextMapPropagator_1=require("./propagation/TextMapPropagator");Object.defineProperty(exports,"defaultTextMapGetter",{enumerable:true,get:function(){return TextMapPropagator_1.defaultTextMapGetter}});Object.defineProperty(exports,"defaultTextMapSetter",{enumerable:true,get:function(){return TextMapPropagator_1.defaultTextMapSetter}});var ProxyTracer_1=require("./trace/ProxyTracer");Object.defineProperty(exports,"ProxyTracer",{enumerable:true,get:function(){return ProxyTracer_1.ProxyTracer}});var ProxyTracerProvider_1=require("./trace/ProxyTracerProvider");Object.defineProperty(exports,"ProxyTracerProvider",{enumerable:true,get:function(){return ProxyTracerProvider_1.ProxyTracerProvider}});var SamplingResult_1=require("./trace/SamplingResult");Object.defineProperty(exports,"SamplingDecision",{enumerable:true,get:function(){return SamplingResult_1.SamplingDecision}});var span_kind_1=require("./trace/span_kind");Object.defineProperty(exports,"SpanKind",{enumerable:true,get:function(){return span_kind_1.SpanKind}});var status_1=require("./trace/status");Object.defineProperty(exports,"SpanStatusCode",{enumerable:true,get:function(){return status_1.SpanStatusCode}});var trace_flags_1=require("./trace/trace_flags");Object.defineProperty(exports,"TraceFlags",{enumerable:true,get:function(){return trace_flags_1.TraceFlags}});var utils_2=require("./trace/internal/utils");Object.defineProperty(exports,"createTraceState",{enumerable:true,get:function(){return utils_2.createTraceState}});var spancontext_utils_1=require("./trace/spancontext-utils");Object.defineProperty(exports,"isSpanContextValid",{enumerable:true,get:function(){return spancontext_utils_1.isSpanContextValid}});Object.defineProperty(exports,"isValidTraceId",{enumerable:true,get:function(){return spancontext_utils_1.isValidTraceId}});Object.defineProperty(exports,"isValidSpanId",{enumerable:true,get:function(){return spancontext_utils_1.isValidSpanId}});var invalid_span_constants_1=require("./trace/invalid-span-constants");Object.defineProperty(exports,"INVALID_SPANID",{enumerable:true,get:function(){return invalid_span_constants_1.INVALID_SPANID}});Object.defineProperty(exports,"INVALID_TRACEID",{enumerable:true,get:function(){return invalid_span_constants_1.INVALID_TRACEID}});Object.defineProperty(exports,"INVALID_SPAN_CONTEXT",{enumerable:true,get:function(){return invalid_span_constants_1.INVALID_SPAN_CONTEXT}});const context_api_1=require("./context-api");Object.defineProperty(exports,"context",{enumerable:true,get:function(){return context_api_1.context}});const diag_api_1=require("./diag-api");Object.defineProperty(exports,"diag",{enumerable:true,get:function(){return diag_api_1.diag}});const metrics_api_1=require("./metrics-api");Object.defineProperty(exports,"metrics",{enumerable:true,get:function(){return metrics_api_1.metrics}});const propagation_api_1=require("./propagation-api");Object.defineProperty(exports,"propagation",{enumerable:true,get:function(){return propagation_api_1.propagation}});const trace_api_1=require("./trace-api");Object.defineProperty(exports,"trace",{enumerable:true,get:function(){return trace_api_1.trace}});exports.default={context:context_api_1.context,diag:diag_api_1.diag,metrics:metrics_api_1.metrics,propagation:propagation_api_1.propagation,trace:trace_api_1.trace}},{"./baggage/utils":10,"./context-api":11,"./context/context":13,"./diag-api":14,"./diag/consoleLogger":16,"./diag/types":18,"./metrics-api":22,"./metrics/Metric":23,"./metrics/NoopMeter":24,"./propagation-api":28,"./propagation/TextMapPropagator":30,"./trace-api":31,"./trace/ProxyTracer":35,"./trace/ProxyTracerProvider":36,"./trace/SamplingResult":37,"./trace/internal/utils":41,"./trace/invalid-span-constants":42,"./trace/span_kind":43,"./trace/spancontext-utils":44,"./trace/status":45,"./trace/trace_flags":46}],20:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.unregisterGlobal=exports.getGlobal=exports.registerGlobal=void 0;const platform_1=require("../platform");const version_1=require("../version");const semver_1=require("./semver");const major=version_1.VERSION.split(".")[0];const GLOBAL_OPENTELEMETRY_API_KEY=Symbol.for(`opentelemetry.js.api.${major}`);const _global=platform_1._globalThis;function registerGlobal(type,instance,diag,allowOverride=false){var _a;const api=_global[GLOBAL_OPENTELEMETRY_API_KEY]=(_a=_global[GLOBAL_OPENTELEMETRY_API_KEY])!==null&&_a!==void 0?_a:{version:version_1.VERSION};if(!allowOverride&&api[type]){const err=new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${type}`);diag.error(err.stack||err.message);return false}if(api.version!==version_1.VERSION){const err=new Error("@opentelemetry/api: All API registration versions must match");diag.error(err.stack||err.message);return false}api[type]=instance;diag.debug(`@opentelemetry/api: Registered a global for ${type} v${version_1.VERSION}.`);return true}exports.registerGlobal=registerGlobal;function getGlobal(type){var _a,_b;const globalVersion=(_a=_global[GLOBAL_OPENTELEMETRY_API_KEY])===null||_a===void 0?void 0:_a.version;if(!globalVersion||!(0,semver_1.isCompatible)(globalVersion)){return}return(_b=_global[GLOBAL_OPENTELEMETRY_API_KEY])===null||_b===void 0?void 0:_b[type]}exports.getGlobal=getGlobal;function unregisterGlobal(type,diag){diag.debug(`@opentelemetry/api: Unregistering a global for ${type} v${version_1.VERSION}.`);const api=_global[GLOBAL_OPENTELEMETRY_API_KEY];if(api){delete api[type]}}exports.unregisterGlobal=unregisterGlobal},{"../platform":27,"../version":47,"./semver":21}],21:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isCompatible=exports._makeCompatibilityCheck=void 0;const version_1=require("../version");const re=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;function _makeCompatibilityCheck(ownVersion){const acceptedVersions=new Set([ownVersion]);const rejectedVersions=new Set;const myVersionMatch=ownVersion.match(re);if(!myVersionMatch){return()=>false}const ownVersionParsed={major:+myVersionMatch[1],minor:+myVersionMatch[2],patch:+myVersionMatch[3],prerelease:myVersionMatch[4]};if(ownVersionParsed.prerelease!=null){return function isExactmatch(globalVersion){return globalVersion===ownVersion}}function _reject(v){rejectedVersions.add(v);return false}function _accept(v){acceptedVersions.add(v);return true}return function isCompatible(globalVersion){if(acceptedVersions.has(globalVersion)){return true}if(rejectedVersions.has(globalVersion)){return false}const globalVersionMatch=globalVersion.match(re);if(!globalVersionMatch){return _reject(globalVersion)}const globalVersionParsed={major:+globalVersionMatch[1],minor:+globalVersionMatch[2],patch:+globalVersionMatch[3],prerelease:globalVersionMatch[4]};if(globalVersionParsed.prerelease!=null){return _reject(globalVersion)}if(ownVersionParsed.major!==globalVersionParsed.major){return _reject(globalVersion)}if(ownVersionParsed.major===0){if(ownVersionParsed.minor===globalVersionParsed.minor&&ownVersionParsed.patch<=globalVersionParsed.patch){return _accept(globalVersion)}return _reject(globalVersion)}if(ownVersionParsed.minor<=globalVersionParsed.minor){return _accept(globalVersion)}return _reject(globalVersion)}}exports._makeCompatibilityCheck=_makeCompatibilityCheck;exports.isCompatible=_makeCompatibilityCheck(version_1.VERSION)},{"../version":47}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.metrics=void 0;const metrics_1=require("./api/metrics");exports.metrics=metrics_1.MetricsAPI.getInstance()},{"./api/metrics":4}],23:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ValueType=void 0;var ValueType;(function(ValueType){ValueType[ValueType["INT"]=0]="INT";ValueType[ValueType["DOUBLE"]=1]="DOUBLE"})(ValueType=exports.ValueType||(exports.ValueType={}))},{}],24:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createNoopMeter=exports.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=exports.NOOP_OBSERVABLE_GAUGE_METRIC=exports.NOOP_OBSERVABLE_COUNTER_METRIC=exports.NOOP_UP_DOWN_COUNTER_METRIC=exports.NOOP_HISTOGRAM_METRIC=exports.NOOP_COUNTER_METRIC=exports.NOOP_METER=exports.NoopObservableUpDownCounterMetric=exports.NoopObservableGaugeMetric=exports.NoopObservableCounterMetric=exports.NoopObservableMetric=exports.NoopHistogramMetric=exports.NoopUpDownCounterMetric=exports.NoopCounterMetric=exports.NoopMetric=exports.NoopMeter=void 0;class NoopMeter{constructor(){}createHistogram(_name,_options){return exports.NOOP_HISTOGRAM_METRIC}createCounter(_name,_options){return exports.NOOP_COUNTER_METRIC}createUpDownCounter(_name,_options){return exports.NOOP_UP_DOWN_COUNTER_METRIC}createObservableGauge(_name,_options){return exports.NOOP_OBSERVABLE_GAUGE_METRIC}createObservableCounter(_name,_options){return exports.NOOP_OBSERVABLE_COUNTER_METRIC}createObservableUpDownCounter(_name,_options){return exports.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC}addBatchObservableCallback(_callback,_observables){}removeBatchObservableCallback(_callback){}}exports.NoopMeter=NoopMeter;class NoopMetric{}exports.NoopMetric=NoopMetric;class NoopCounterMetric extends NoopMetric{add(_value,_attributes){}}exports.NoopCounterMetric=NoopCounterMetric;class NoopUpDownCounterMetric extends NoopMetric{add(_value,_attributes){}}exports.NoopUpDownCounterMetric=NoopUpDownCounterMetric;class NoopHistogramMetric extends NoopMetric{record(_value,_attributes){}}exports.NoopHistogramMetric=NoopHistogramMetric;class NoopObservableMetric{addCallback(_callback){}removeCallback(_callback){}}exports.NoopObservableMetric=NoopObservableMetric;class NoopObservableCounterMetric extends NoopObservableMetric{}exports.NoopObservableCounterMetric=NoopObservableCounterMetric;class NoopObservableGaugeMetric extends NoopObservableMetric{}exports.NoopObservableGaugeMetric=NoopObservableGaugeMetric;class NoopObservableUpDownCounterMetric extends NoopObservableMetric{}exports.NoopObservableUpDownCounterMetric=NoopObservableUpDownCounterMetric;exports.NOOP_METER=new NoopMeter;exports.NOOP_COUNTER_METRIC=new NoopCounterMetric;exports.NOOP_HISTOGRAM_METRIC=new NoopHistogramMetric;exports.NOOP_UP_DOWN_COUNTER_METRIC=new NoopUpDownCounterMetric;exports.NOOP_OBSERVABLE_COUNTER_METRIC=new NoopObservableCounterMetric;exports.NOOP_OBSERVABLE_GAUGE_METRIC=new NoopObservableGaugeMetric;exports.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC=new NoopObservableUpDownCounterMetric;function createNoopMeter(){return exports.NOOP_METER}exports.createNoopMeter=createNoopMeter},{}],25:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NOOP_METER_PROVIDER=exports.NoopMeterProvider=void 0;const NoopMeter_1=require("./NoopMeter");class NoopMeterProvider{getMeter(_name,_version,_options){return NoopMeter_1.NOOP_METER}}exports.NoopMeterProvider=NoopMeterProvider;exports.NOOP_METER_PROVIDER=new NoopMeterProvider},{"./NoopMeter":24}],26:[function(require,module,exports){(function(global){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._globalThis=void 0;exports._globalThis=typeof globalThis==="object"?globalThis:typeof self==="object"?self:typeof window==="object"?window:typeof global==="object"?global:{}}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],27:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./globalThis"),exports)},{"./globalThis":26}],28:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.propagation=void 0;const propagation_1=require("./api/propagation");exports.propagation=propagation_1.PropagationAPI.getInstance()},{"./api/propagation":5}],29:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NoopTextMapPropagator=void 0;class NoopTextMapPropagator{inject(_context,_carrier){}extract(context,_carrier){return context}fields(){return[]}}exports.NoopTextMapPropagator=NoopTextMapPropagator},{}],30:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.defaultTextMapSetter=exports.defaultTextMapGetter=void 0;exports.defaultTextMapGetter={get(carrier,key){if(carrier==null){return undefined}return carrier[key]},keys(carrier){if(carrier==null){return[]}return Object.keys(carrier)}};exports.defaultTextMapSetter={set(carrier,key,value){if(carrier==null){return}carrier[key]=value}}},{}],31:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.trace=void 0;const trace_1=require("./api/trace");exports.trace=trace_1.TraceAPI.getInstance()},{"./api/trace":6}],32:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NonRecordingSpan=void 0;const invalid_span_constants_1=require("./invalid-span-constants");class NonRecordingSpan{constructor(_spanContext=invalid_span_constants_1.INVALID_SPAN_CONTEXT){this._spanContext=_spanContext}spanContext(){return this._spanContext}setAttribute(_key,_value){return this}setAttributes(_attributes){return this}addEvent(_name,_attributes){return this}setStatus(_status){return this}updateName(_name){return this}end(_endTime){}isRecording(){return false}recordException(_exception,_time){}}exports.NonRecordingSpan=NonRecordingSpan},{"./invalid-span-constants":42}],33:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NoopTracer=void 0;const context_1=require("../api/context");const context_utils_1=require("../trace/context-utils");const NonRecordingSpan_1=require("./NonRecordingSpan");const spancontext_utils_1=require("./spancontext-utils");const contextApi=context_1.ContextAPI.getInstance();class NoopTracer{startSpan(name,options,context){const root=Boolean(options===null||options===void 0?void 0:options.root);if(root){return new NonRecordingSpan_1.NonRecordingSpan}const parentFromContext=context&&(0,context_utils_1.getSpanContext)(context);if(isSpanContext(parentFromContext)&&(0,spancontext_utils_1.isSpanContextValid)(parentFromContext)){return new NonRecordingSpan_1.NonRecordingSpan(parentFromContext)}else{return new NonRecordingSpan_1.NonRecordingSpan}}startActiveSpan(name,arg2,arg3,arg4){let opts;let ctx;let fn;if(arguments.length<2){return}else if(arguments.length===2){fn=arg2}else if(arguments.length===3){opts=arg2;fn=arg3}else{opts=arg2;ctx=arg3;fn=arg4}const parentContext=ctx!==null&&ctx!==void 0?ctx:contextApi.active();const span=this.startSpan(name,opts,parentContext);const contextWithSpanSet=(0,context_utils_1.setSpan)(parentContext,span);return contextApi.with(contextWithSpanSet,fn,undefined,span)}}exports.NoopTracer=NoopTracer;function isSpanContext(spanContext){return typeof spanContext==="object"&&typeof spanContext["spanId"]==="string"&&typeof spanContext["traceId"]==="string"&&typeof spanContext["traceFlags"]==="number"}},{"../api/context":2,"../trace/context-utils":38,"./NonRecordingSpan":32,"./spancontext-utils":44}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NoopTracerProvider=void 0;const NoopTracer_1=require("./NoopTracer");class NoopTracerProvider{getTracer(_name,_version,_options){return new NoopTracer_1.NoopTracer}}exports.NoopTracerProvider=NoopTracerProvider},{"./NoopTracer":33}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ProxyTracer=void 0;const NoopTracer_1=require("./NoopTracer");const NOOP_TRACER=new NoopTracer_1.NoopTracer;class ProxyTracer{constructor(_provider,name,version,options){this._provider=_provider;this.name=name;this.version=version;this.options=options}startSpan(name,options,context){return this._getTracer().startSpan(name,options,context)}startActiveSpan(_name,_options,_context,_fn){const tracer=this._getTracer();return Reflect.apply(tracer.startActiveSpan,tracer,arguments)}_getTracer(){if(this._delegate){return this._delegate}const tracer=this._provider.getDelegateTracer(this.name,this.version,this.options);if(!tracer){return NOOP_TRACER}this._delegate=tracer;return this._delegate}}exports.ProxyTracer=ProxyTracer},{"./NoopTracer":33}],36:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ProxyTracerProvider=void 0;const ProxyTracer_1=require("./ProxyTracer");const NoopTracerProvider_1=require("./NoopTracerProvider");const NOOP_TRACER_PROVIDER=new NoopTracerProvider_1.NoopTracerProvider;class ProxyTracerProvider{getTracer(name,version,options){var _a;return(_a=this.getDelegateTracer(name,version,options))!==null&&_a!==void 0?_a:new ProxyTracer_1.ProxyTracer(this,name,version,options)}getDelegate(){var _a;return(_a=this._delegate)!==null&&_a!==void 0?_a:NOOP_TRACER_PROVIDER}setDelegate(delegate){this._delegate=delegate}getDelegateTracer(name,version,options){var _a;return(_a=this._delegate)===null||_a===void 0?void 0:_a.getTracer(name,version,options)}}exports.ProxyTracerProvider=ProxyTracerProvider},{"./NoopTracerProvider":34,"./ProxyTracer":35}],37:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SamplingDecision=void 0;var SamplingDecision;(function(SamplingDecision){SamplingDecision[SamplingDecision["NOT_RECORD"]=0]="NOT_RECORD";SamplingDecision[SamplingDecision["RECORD"]=1]="RECORD";SamplingDecision[SamplingDecision["RECORD_AND_SAMPLED"]=2]="RECORD_AND_SAMPLED"})(SamplingDecision=exports.SamplingDecision||(exports.SamplingDecision={}))},{}],38:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getSpanContext=exports.setSpanContext=exports.deleteSpan=exports.setSpan=exports.getActiveSpan=exports.getSpan=void 0;const context_1=require("../context/context");const NonRecordingSpan_1=require("./NonRecordingSpan");const context_2=require("../api/context");const SPAN_KEY=(0,context_1.createContextKey)("OpenTelemetry Context Key SPAN");function getSpan(context){return context.getValue(SPAN_KEY)||undefined}exports.getSpan=getSpan;function getActiveSpan(){return getSpan(context_2.ContextAPI.getInstance().active())}exports.getActiveSpan=getActiveSpan;function setSpan(context,span){return context.setValue(SPAN_KEY,span)}exports.setSpan=setSpan;function deleteSpan(context){return context.deleteValue(SPAN_KEY)}exports.deleteSpan=deleteSpan;function setSpanContext(context,spanContext){return setSpan(context,new NonRecordingSpan_1.NonRecordingSpan(spanContext))}exports.setSpanContext=setSpanContext;function getSpanContext(context){var _a;return(_a=getSpan(context))===null||_a===void 0?void 0:_a.spanContext()}exports.getSpanContext=getSpanContext},{"../api/context":2,"../context/context":13,"./NonRecordingSpan":32}],39:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceStateImpl=void 0;const tracestate_validators_1=require("./tracestate-validators");const MAX_TRACE_STATE_ITEMS=32;const MAX_TRACE_STATE_LEN=512;const LIST_MEMBERS_SEPARATOR=",";const LIST_MEMBER_KEY_VALUE_SPLITTER="=";class TraceStateImpl{constructor(rawTraceState){this._internalState=new Map;if(rawTraceState)this._parse(rawTraceState)}set(key,value){const traceState=this._clone();if(traceState._internalState.has(key)){traceState._internalState.delete(key)}traceState._internalState.set(key,value);return traceState}unset(key){const traceState=this._clone();traceState._internalState.delete(key);return traceState}get(key){return this._internalState.get(key)}serialize(){return this._keys().reduce(((agg,key)=>{agg.push(key+LIST_MEMBER_KEY_VALUE_SPLITTER+this.get(key));return agg}),[]).join(LIST_MEMBERS_SEPARATOR)}_parse(rawTraceState){if(rawTraceState.length>MAX_TRACE_STATE_LEN)return;this._internalState=rawTraceState.split(LIST_MEMBERS_SEPARATOR).reverse().reduce(((agg,part)=>{const listMember=part.trim();const i=listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);if(i!==-1){const key=listMember.slice(0,i);const value=listMember.slice(i+1,part.length);if((0,tracestate_validators_1.validateKey)(key)&&(0,tracestate_validators_1.validateValue)(value)){agg.set(key,value)}else{}}return agg}),new Map);if(this._internalState.size>MAX_TRACE_STATE_ITEMS){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,MAX_TRACE_STATE_ITEMS))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const traceState=new TraceStateImpl;traceState._internalState=new Map(this._internalState);return traceState}}exports.TraceStateImpl=TraceStateImpl},{"./tracestate-validators":40}],40:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.validateValue=exports.validateKey=void 0;const VALID_KEY_CHAR_RANGE="[_0-9a-z-*/]";const VALID_KEY=`[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;const VALID_VENDOR_KEY=`[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;const VALID_KEY_REGEX=new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);const VALID_VALUE_BASE_REGEX=/^[ -~]{0,255}[!-~]$/;const INVALID_VALUE_COMMA_EQUAL_REGEX=/,|=/;function validateKey(key){return VALID_KEY_REGEX.test(key)}exports.validateKey=validateKey;function validateValue(value){return VALID_VALUE_BASE_REGEX.test(value)&&!INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)}exports.validateValue=validateValue},{}],41:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createTraceState=void 0;const tracestate_impl_1=require("./tracestate-impl");function createTraceState(rawTraceState){return new tracestate_impl_1.TraceStateImpl(rawTraceState)}exports.createTraceState=createTraceState},{"./tracestate-impl":39}],42:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.INVALID_SPAN_CONTEXT=exports.INVALID_TRACEID=exports.INVALID_SPANID=void 0;const trace_flags_1=require("./trace_flags");exports.INVALID_SPANID="0000000000000000";exports.INVALID_TRACEID="00000000000000000000000000000000";exports.INVALID_SPAN_CONTEXT={traceId:exports.INVALID_TRACEID,spanId:exports.INVALID_SPANID,traceFlags:trace_flags_1.TraceFlags.NONE}},{"./trace_flags":46}],43:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SpanKind=void 0;var SpanKind;(function(SpanKind){SpanKind[SpanKind["INTERNAL"]=0]="INTERNAL";SpanKind[SpanKind["SERVER"]=1]="SERVER";SpanKind[SpanKind["CLIENT"]=2]="CLIENT";SpanKind[SpanKind["PRODUCER"]=3]="PRODUCER";SpanKind[SpanKind["CONSUMER"]=4]="CONSUMER"})(SpanKind=exports.SpanKind||(exports.SpanKind={}))},{}],44:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.wrapSpanContext=exports.isSpanContextValid=exports.isValidSpanId=exports.isValidTraceId=void 0;const invalid_span_constants_1=require("./invalid-span-constants");const NonRecordingSpan_1=require("./NonRecordingSpan");const VALID_TRACEID_REGEX=/^([0-9a-f]{32})$/i;const VALID_SPANID_REGEX=/^[0-9a-f]{16}$/i;function isValidTraceId(traceId){return VALID_TRACEID_REGEX.test(traceId)&&traceId!==invalid_span_constants_1.INVALID_TRACEID}exports.isValidTraceId=isValidTraceId;function isValidSpanId(spanId){return VALID_SPANID_REGEX.test(spanId)&&spanId!==invalid_span_constants_1.INVALID_SPANID}exports.isValidSpanId=isValidSpanId;function isSpanContextValid(spanContext){return isValidTraceId(spanContext.traceId)&&isValidSpanId(spanContext.spanId)}exports.isSpanContextValid=isSpanContextValid;function wrapSpanContext(spanContext){return new NonRecordingSpan_1.NonRecordingSpan(spanContext)}exports.wrapSpanContext=wrapSpanContext},{"./NonRecordingSpan":32,"./invalid-span-constants":42}],45:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SpanStatusCode=void 0;var SpanStatusCode;(function(SpanStatusCode){SpanStatusCode[SpanStatusCode["UNSET"]=0]="UNSET";SpanStatusCode[SpanStatusCode["OK"]=1]="OK";SpanStatusCode[SpanStatusCode["ERROR"]=2]="ERROR"})(SpanStatusCode=exports.SpanStatusCode||(exports.SpanStatusCode={}))},{}],46:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceFlags=void 0;var TraceFlags;(function(TraceFlags){TraceFlags[TraceFlags["NONE"]=0]="NONE";TraceFlags[TraceFlags["SAMPLED"]=1]="SAMPLED"})(TraceFlags=exports.TraceFlags||(exports.TraceFlags={}))},{}],47:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.3.0"},{}],48:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ZoneContextManager=void 0;const api_1=require("@opentelemetry/api");const util_1=require("./util");const ZONE_CONTEXT_KEY="OT_ZONE_CONTEXT";class ZoneContextManager{constructor(){this._enabled=false;this._zoneCounter=0}_activeContextFromZone(activeZone){return activeZone&&activeZone.get(ZONE_CONTEXT_KEY)||api_1.ROOT_CONTEXT}_bindFunction(context,target){const manager=this;const contextWrapper=function(...args){return manager.with(context,(()=>target.apply(this,args)))};Object.defineProperty(contextWrapper,"length",{enumerable:false,configurable:true,writable:false,value:target.length});return contextWrapper}_bindListener(context,obj){const target=obj;if(target.__ot_listeners!==undefined){return obj}target.__ot_listeners={};if(typeof target.addEventListener==="function"){target.addEventListener=this._patchAddEventListener(target,target.addEventListener,context)}if(typeof target.removeEventListener==="function"){target.removeEventListener=this._patchRemoveEventListener(target,target.removeEventListener)}return obj}_createZoneName(){this._zoneCounter++;const random=Math.random();return`${this._zoneCounter}-${random}`}_createZone(zoneName,context){return Zone.current.fork({name:zoneName,properties:{[ZONE_CONTEXT_KEY]:context}})}_getActiveZone(){return Zone.current}_patchAddEventListener(target,original,context){const contextManager=this;return function(event,listener,opts){if(target.__ot_listeners===undefined){target.__ot_listeners={}}let listeners=target.__ot_listeners[event];if(listeners===undefined){listeners=new WeakMap;target.__ot_listeners[event]=listeners}const patchedListener=contextManager.bind(context,listener);listeners.set(listener,patchedListener);return original.call(this,event,patchedListener,opts)}}_patchRemoveEventListener(target,original){return function(event,listener){if(target.__ot_listeners===undefined||target.__ot_listeners[event]===undefined){return original.call(this,event,listener)}const events=target.__ot_listeners[event];const patchedListener=events.get(listener);events.delete(listener);return original.call(this,event,patchedListener||listener)}}active(){if(!this._enabled){return api_1.ROOT_CONTEXT}const activeZone=this._getActiveZone();const active=this._activeContextFromZone(activeZone);if(active){return active}return api_1.ROOT_CONTEXT}bind(context,target){if(context===undefined){context=this.active()}if(typeof target==="function"){return this._bindFunction(context,target)}else if((0,util_1.isListenerObject)(target)){this._bindListener(context,target)}return target}disable(){this._enabled=false;return this}enable(){this._enabled=true;return this}with(context,fn,thisArg,...args){const zoneName=this._createZoneName();const newZone=this._createZone(zoneName,context);return newZone.run(fn,thisArg,args)}}exports.ZoneContextManager=ZoneContextManager},{"./util":51,"@opentelemetry/api":19}],49:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./ZoneContextManager"),exports);__exportStar(require("./types"),exports)},{"./ZoneContextManager":48,"./types":50}],50:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],51:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isListenerObject=void 0;function isListenerObject(obj={}){return typeof obj.addEventListener==="function"&&typeof obj.removeEventListener==="function"}exports.isListenerObject=isListenerObject},{}],52:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("@opentelemetry/context-zone-peer-dep"),exports);require("zone.js")},{"@opentelemetry/context-zone-peer-dep":49,"zone.js":678}],53:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ExportResultCode=void 0;var ExportResultCode;(function(ExportResultCode){ExportResultCode[ExportResultCode["SUCCESS"]=0]="SUCCESS";ExportResultCode[ExportResultCode["FAILED"]=1]="FAILED"})(ExportResultCode=exports.ExportResultCode||(exports.ExportResultCode={}))},{}],54:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BAGGAGE_MAX_TOTAL_LENGTH=exports.BAGGAGE_MAX_PER_NAME_VALUE_PAIRS=exports.BAGGAGE_MAX_NAME_VALUE_PAIRS=exports.BAGGAGE_HEADER=exports.BAGGAGE_ITEMS_SEPARATOR=exports.BAGGAGE_PROPERTIES_SEPARATOR=exports.BAGGAGE_KEY_PAIR_SEPARATOR=void 0;exports.BAGGAGE_KEY_PAIR_SEPARATOR="=";exports.BAGGAGE_PROPERTIES_SEPARATOR=";";exports.BAGGAGE_ITEMS_SEPARATOR=",";exports.BAGGAGE_HEADER="baggage";exports.BAGGAGE_MAX_NAME_VALUE_PAIRS=180;exports.BAGGAGE_MAX_PER_NAME_VALUE_PAIRS=4096;exports.BAGGAGE_MAX_TOTAL_LENGTH=8192},{}],55:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.W3CBaggagePropagator=void 0;const api_1=require("@opentelemetry/api");const suppress_tracing_1=require("../../trace/suppress-tracing");const constants_1=require("../constants");const utils_1=require("../utils");class W3CBaggagePropagator{inject(context,carrier,setter){const baggage=api_1.propagation.getBaggage(context);if(!baggage||(0,suppress_tracing_1.isTracingSuppressed)(context))return;const keyPairs=(0,utils_1.getKeyPairs)(baggage).filter((pair=>pair.length<=constants_1.BAGGAGE_MAX_PER_NAME_VALUE_PAIRS)).slice(0,constants_1.BAGGAGE_MAX_NAME_VALUE_PAIRS);const headerValue=(0,utils_1.serializeKeyPairs)(keyPairs);if(headerValue.length>0){setter.set(carrier,constants_1.BAGGAGE_HEADER,headerValue)}}extract(context,carrier,getter){const headerValue=getter.get(carrier,constants_1.BAGGAGE_HEADER);const baggageString=Array.isArray(headerValue)?headerValue.join(constants_1.BAGGAGE_ITEMS_SEPARATOR):headerValue;if(!baggageString)return context;const baggage={};if(baggageString.length===0){return context}const pairs=baggageString.split(constants_1.BAGGAGE_ITEMS_SEPARATOR);pairs.forEach((entry=>{const keyPair=(0,utils_1.parsePairKeyValue)(entry);if(keyPair){const baggageEntry={value:keyPair.value};if(keyPair.metadata){baggageEntry.metadata=keyPair.metadata}baggage[keyPair.key]=baggageEntry}}));if(Object.entries(baggage).length===0){return context}return api_1.propagation.setBaggage(context,api_1.propagation.createBaggage(baggage))}fields(){return[constants_1.BAGGAGE_HEADER]}}exports.W3CBaggagePropagator=W3CBaggagePropagator},{"../../trace/suppress-tracing":83,"../constants":54,"../utils":56,"@opentelemetry/api":19}],56:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.parseKeyPairsIntoRecord=exports.parsePairKeyValue=exports.getKeyPairs=exports.serializeKeyPairs=void 0;const api_1=require("@opentelemetry/api");const constants_1=require("./constants");function serializeKeyPairs(keyPairs){return keyPairs.reduce(((hValue,current)=>{const value=`${hValue}${hValue!==""?constants_1.BAGGAGE_ITEMS_SEPARATOR:""}${current}`;return value.length>constants_1.BAGGAGE_MAX_TOTAL_LENGTH?hValue:value}),"")}exports.serializeKeyPairs=serializeKeyPairs;function getKeyPairs(baggage){return baggage.getAllEntries().map((([key,value])=>{let entry=`${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;if(value.metadata!==undefined){entry+=constants_1.BAGGAGE_PROPERTIES_SEPARATOR+value.metadata.toString()}return entry}))}exports.getKeyPairs=getKeyPairs;function parsePairKeyValue(entry){const valueProps=entry.split(constants_1.BAGGAGE_PROPERTIES_SEPARATOR);if(valueProps.length<=0)return;const keyPairPart=valueProps.shift();if(!keyPairPart)return;const keyPair=keyPairPart.split(constants_1.BAGGAGE_KEY_PAIR_SEPARATOR);if(keyPair.length!==2)return;const key=decodeURIComponent(keyPair[0].trim());const value=decodeURIComponent(keyPair[1].trim());let metadata;if(valueProps.length>0){metadata=(0,api_1.baggageEntryMetadataFromString)(valueProps.join(constants_1.BAGGAGE_PROPERTIES_SEPARATOR))}return{key:key,value:value,metadata:metadata}}exports.parsePairKeyValue=parsePairKeyValue;function parseKeyPairsIntoRecord(value){if(typeof value!=="string"||value.length===0)return{};return value.split(constants_1.BAGGAGE_ITEMS_SEPARATOR).map((entry=>parsePairKeyValue(entry))).filter((keyPair=>keyPair!==undefined&&keyPair.value.length>0)).reduce(((headers,keyPair)=>{headers[keyPair.key]=keyPair.value;return headers}),{})}exports.parseKeyPairsIntoRecord=parseKeyPairsIntoRecord},{"./constants":54,"@opentelemetry/api":19}],57:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AnchoredClock=void 0;class AnchoredClock{constructor(systemClock,monotonicClock){this._monotonicClock=monotonicClock;this._epochMillis=systemClock.now();this._performanceMillis=monotonicClock.now()}now(){const delta=this._monotonicClock.now()-this._performanceMillis;return this._epochMillis+delta}}exports.AnchoredClock=AnchoredClock},{}],58:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isAttributeValue=exports.isAttributeKey=exports.sanitizeAttributes=void 0;const api_1=require("@opentelemetry/api");function sanitizeAttributes(attributes){const out={};if(typeof attributes!=="object"||attributes==null){return out}for(const[key,val]of Object.entries(attributes)){if(!isAttributeKey(key)){api_1.diag.warn(`Invalid attribute key: ${key}`);continue}if(!isAttributeValue(val)){api_1.diag.warn(`Invalid attribute value set for key: ${key}`);continue}if(Array.isArray(val)){out[key]=val.slice()}else{out[key]=val}}return out}exports.sanitizeAttributes=sanitizeAttributes;function isAttributeKey(key){return typeof key==="string"&&key.length>0}exports.isAttributeKey=isAttributeKey;function isAttributeValue(val){if(val==null){return true}if(Array.isArray(val)){return isHomogeneousAttributeValueArray(val)}return isValidPrimitiveAttributeValue(val)}exports.isAttributeValue=isAttributeValue;function isHomogeneousAttributeValueArray(arr){let type;for(const element of arr){if(element==null)continue;if(!type){if(isValidPrimitiveAttributeValue(element)){type=typeof element;continue}return false}if(typeof element===type){continue}return false}return true}function isValidPrimitiveAttributeValue(val){switch(typeof val){case"number":case"boolean":case"string":return true}return false}},{"@opentelemetry/api":19}],59:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.globalErrorHandler=exports.setGlobalErrorHandler=void 0;const logging_error_handler_1=require("./logging-error-handler");let delegateHandler=(0,logging_error_handler_1.loggingErrorHandler)();function setGlobalErrorHandler(handler){delegateHandler=handler}exports.setGlobalErrorHandler=setGlobalErrorHandler;function globalErrorHandler(ex){try{delegateHandler(ex)}catch(_a){}}exports.globalErrorHandler=globalErrorHandler},{"./logging-error-handler":60}],60:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.loggingErrorHandler=void 0;const api_1=require("@opentelemetry/api");function loggingErrorHandler(){return ex=>{api_1.diag.error(stringifyException(ex))}}exports.loggingErrorHandler=loggingErrorHandler;function stringifyException(ex){if(typeof ex==="string"){return ex}else{return JSON.stringify(flattenException(ex))}}function flattenException(ex){const result={};let current=ex;while(current!==null){Object.getOwnPropertyNames(current).forEach((propertyName=>{if(result[propertyName])return;const value=current[propertyName];if(value){result[propertyName]=String(value)}}));current=Object.getPrototypeOf(current)}return result}},{"@opentelemetry/api":19}],61:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isTimeInput=exports.isTimeInputHrTime=exports.hrTimeToMicroseconds=exports.hrTimeToMilliseconds=exports.hrTimeToNanoseconds=exports.hrTimeToTimeStamp=exports.hrTimeDuration=exports.timeInputToHrTime=exports.hrTime=void 0;const platform_1=require("../platform");const NANOSECOND_DIGITS=9;const SECOND_TO_NANOSECONDS=Math.pow(10,NANOSECOND_DIGITS);function numberToHrtime(epochMillis){const epochSeconds=epochMillis/1e3;const seconds=Math.trunc(epochSeconds);const nanos=Number((epochSeconds-seconds).toFixed(NANOSECOND_DIGITS))*SECOND_TO_NANOSECONDS;return[seconds,nanos]}function getTimeOrigin(){let timeOrigin=platform_1.otperformance.timeOrigin;if(typeof timeOrigin!=="number"){const perf=platform_1.otperformance;timeOrigin=perf.timing&&perf.timing.fetchStart}return timeOrigin}function hrTime(performanceNow){const timeOrigin=numberToHrtime(getTimeOrigin());const now=numberToHrtime(typeof performanceNow==="number"?performanceNow:platform_1.otperformance.now());let seconds=timeOrigin[0]+now[0];let nanos=timeOrigin[1]+now[1];if(nanos>SECOND_TO_NANOSECONDS){nanos-=SECOND_TO_NANOSECONDS;seconds+=1}return[seconds,nanos]}exports.hrTime=hrTime;function timeInputToHrTime(time){if(isTimeInputHrTime(time)){return time}else if(typeof time==="number"){if(time<getTimeOrigin()){return hrTime(time)}else{return numberToHrtime(time)}}else if(time instanceof Date){return numberToHrtime(time.getTime())}else{throw TypeError("Invalid input type")}}exports.timeInputToHrTime=timeInputToHrTime;function hrTimeDuration(startTime,endTime){let seconds=endTime[0]-startTime[0];let nanos=endTime[1]-startTime[1];if(nanos<0){seconds-=1;nanos+=SECOND_TO_NANOSECONDS}return[seconds,nanos]}exports.hrTimeDuration=hrTimeDuration;function hrTimeToTimeStamp(time){const precision=NANOSECOND_DIGITS;const tmp=`${"0".repeat(precision)}${time[1]}Z`;const nanoString=tmp.substr(tmp.length-precision-1);const date=new Date(time[0]*1e3).toISOString();return date.replace("000Z",nanoString)}exports.hrTimeToTimeStamp=hrTimeToTimeStamp;function hrTimeToNanoseconds(time){return time[0]*SECOND_TO_NANOSECONDS+time[1]}exports.hrTimeToNanoseconds=hrTimeToNanoseconds;function hrTimeToMilliseconds(time){return Math.round(time[0]*1e3+time[1]/1e6)}exports.hrTimeToMilliseconds=hrTimeToMilliseconds;function hrTimeToMicroseconds(time){return Math.round(time[0]*1e6+time[1]/1e3)}exports.hrTimeToMicroseconds=hrTimeToMicroseconds;function isTimeInputHrTime(value){return Array.isArray(value)&&value.length===2&&typeof value[0]==="number"&&typeof value[1]==="number"}exports.isTimeInputHrTime=isTimeInputHrTime;function isTimeInput(value){return isTimeInputHrTime(value)||typeof value==="number"||value instanceof Date}exports.isTimeInput=isTimeInput},{"../platform":70}],62:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],63:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});exports.internal=exports.baggageUtils=void 0;__exportStar(require("./baggage/propagation/W3CBaggagePropagator"),exports);__exportStar(require("./common/anchored-clock"),exports);__exportStar(require("./common/attributes"),exports);__exportStar(require("./common/global-error-handler"),exports);__exportStar(require("./common/logging-error-handler"),exports);__exportStar(require("./common/time"),exports);__exportStar(require("./common/types"),exports);__exportStar(require("./ExportResult"),exports);__exportStar(require("./version"),exports);exports.baggageUtils=require("./baggage/utils");__exportStar(require("./platform"),exports);__exportStar(require("./propagation/composite"),exports);__exportStar(require("./trace/W3CTraceContextPropagator"),exports);__exportStar(require("./trace/IdGenerator"),exports);__exportStar(require("./trace/rpc-metadata"),exports);__exportStar(require("./trace/sampler/AlwaysOffSampler"),exports);__exportStar(require("./trace/sampler/AlwaysOnSampler"),exports);__exportStar(require("./trace/sampler/ParentBasedSampler"),exports);__exportStar(require("./trace/sampler/TraceIdRatioBasedSampler"),exports);__exportStar(require("./trace/suppress-tracing"),exports);__exportStar(require("./trace/TraceState"),exports);__exportStar(require("./utils/environment"),exports);__exportStar(require("./utils/merge"),exports);__exportStar(require("./utils/sampling"),exports);__exportStar(require("./utils/url"),exports);__exportStar(require("./utils/wrap"),exports);__exportStar(require("./utils/callback"),exports);__exportStar(require("./version"),exports);const exporter_1=require("./internal/exporter");exports.internal={_export:exporter_1._export}},{"./ExportResult":53,"./baggage/propagation/W3CBaggagePropagator":55,"./baggage/utils":56,"./common/anchored-clock":57,"./common/attributes":58,"./common/global-error-handler":59,"./common/logging-error-handler":60,"./common/time":61,"./common/types":62,"./internal/exporter":64,"./platform":70,"./propagation/composite":74,"./trace/IdGenerator":75,"./trace/TraceState":76,"./trace/W3CTraceContextPropagator":77,"./trace/rpc-metadata":78,"./trace/sampler/AlwaysOffSampler":79,"./trace/sampler/AlwaysOnSampler":80,"./trace/sampler/ParentBasedSampler":81,"./trace/sampler/TraceIdRatioBasedSampler":82,"./trace/suppress-tracing":83,"./utils/callback":84,"./utils/environment":85,"./utils/merge":87,"./utils/sampling":89,"./utils/url":90,"./utils/wrap":91,"./version":92}],64:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._export=void 0;const api_1=require("@opentelemetry/api");const suppress_tracing_1=require("../trace/suppress-tracing");function _export(exporter,arg){return new Promise((resolve=>{api_1.context.with((0,suppress_tracing_1.suppressTracing)(api_1.context.active()),(()=>{exporter.export(arg,(result=>{resolve(result)}))}))}))}exports._export=_export},{"../trace/suppress-tracing":83,"@opentelemetry/api":19}],65:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.validateValue=exports.validateKey=void 0;const VALID_KEY_CHAR_RANGE="[_0-9a-z-*/]";const VALID_KEY=`[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;const VALID_VENDOR_KEY=`[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;const VALID_KEY_REGEX=new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);const VALID_VALUE_BASE_REGEX=/^[ -~]{0,255}[!-~]$/;const INVALID_VALUE_COMMA_EQUAL_REGEX=/,|=/;function validateKey(key){return VALID_KEY_REGEX.test(key)}exports.validateKey=validateKey;function validateValue(value){return VALID_VALUE_BASE_REGEX.test(value)&&!INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)}exports.validateValue=validateValue},{}],66:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RandomIdGenerator=void 0;const SPAN_ID_BYTES=8;const TRACE_ID_BYTES=16;class RandomIdGenerator{constructor(){this.generateTraceId=getIdGenerator(TRACE_ID_BYTES);this.generateSpanId=getIdGenerator(SPAN_ID_BYTES)}}exports.RandomIdGenerator=RandomIdGenerator;const SHARED_CHAR_CODES_ARRAY=Array(32);function getIdGenerator(bytes){return function generateId(){for(let i=0;i<bytes*2;i++){SHARED_CHAR_CODES_ARRAY[i]=Math.floor(Math.random()*16)+48;if(SHARED_CHAR_CODES_ARRAY[i]>=58){SHARED_CHAR_CODES_ARRAY[i]+=39}}return String.fromCharCode.apply(null,SHARED_CHAR_CODES_ARRAY.slice(0,bytes*2))}}},{}],67:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getEnv=void 0;const environment_1=require("../../utils/environment");const globalThis_1=require("./globalThis");function getEnv(){const globalEnv=(0,environment_1.parseEnvironment)(globalThis_1._globalThis);return Object.assign({},environment_1.DEFAULT_ENVIRONMENT,globalEnv)}exports.getEnv=getEnv},{"../../utils/environment":85,"./globalThis":68}],68:[function(require,module,exports){(function(global){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._globalThis=void 0;exports._globalThis=typeof globalThis==="object"?globalThis:typeof self==="object"?self:typeof window==="object"?window:typeof global==="object"?global:{}}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],69:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.hexToBase64=void 0;function hexToBase64(hexStr){const hexStrLen=hexStr.length;let hexAsciiCharsStr="";for(let i=0;i<hexStrLen;i+=2){const hexPair=hexStr.substring(i,i+2);const hexVal=parseInt(hexPair,16);hexAsciiCharsStr+=String.fromCharCode(hexVal)}return btoa(hexAsciiCharsStr)}exports.hexToBase64=hexToBase64},{}],70:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./environment"),exports);__exportStar(require("./globalThis"),exports);__exportStar(require("./hex-to-base64"),exports);__exportStar(require("./RandomIdGenerator"),exports);__exportStar(require("./performance"),exports);__exportStar(require("./sdk-info"),exports);__exportStar(require("./timer-util"),exports)},{"./RandomIdGenerator":66,"./environment":67,"./globalThis":68,"./hex-to-base64":69,"./performance":71,"./sdk-info":72,"./timer-util":73}],71:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.otperformance=void 0;exports.otperformance=performance},{}],72:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SDK_INFO=void 0;const version_1=require("../../version");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");exports.SDK_INFO={[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_NAME]:"opentelemetry",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_NAME]:"browser",[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:semantic_conventions_1.TelemetrySdkLanguageValues.WEBJS,[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:version_1.VERSION}},{"../../version":92,"@opentelemetry/semantic-conventions":540}],73:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.unrefTimer=void 0;function unrefTimer(_timer){}exports.unrefTimer=unrefTimer},{}],74:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.CompositePropagator=void 0;const api_1=require("@opentelemetry/api");class CompositePropagator{constructor(config={}){var _a;this._propagators=(_a=config.propagators)!==null&&_a!==void 0?_a:[];this._fields=Array.from(new Set(this._propagators.map((p=>typeof p.fields==="function"?p.fields():[])).reduce(((x,y)=>x.concat(y)),[])))}inject(context,carrier,setter){for(const propagator of this._propagators){try{propagator.inject(context,carrier,setter)}catch(err){api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`)}}}extract(context,carrier,getter){return this._propagators.reduce(((ctx,propagator)=>{try{return propagator.extract(ctx,carrier,getter)}catch(err){api_1.diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`)}return ctx}),context)}fields(){return this._fields.slice()}}exports.CompositePropagator=CompositePropagator},{"@opentelemetry/api":19}],75:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],76:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceState=void 0;const validators_1=require("../internal/validators");const MAX_TRACE_STATE_ITEMS=32;const MAX_TRACE_STATE_LEN=512;const LIST_MEMBERS_SEPARATOR=",";const LIST_MEMBER_KEY_VALUE_SPLITTER="=";class TraceState{constructor(rawTraceState){this._internalState=new Map;if(rawTraceState)this._parse(rawTraceState)}set(key,value){const traceState=this._clone();if(traceState._internalState.has(key)){traceState._internalState.delete(key)}traceState._internalState.set(key,value);return traceState}unset(key){const traceState=this._clone();traceState._internalState.delete(key);return traceState}get(key){return this._internalState.get(key)}serialize(){return this._keys().reduce(((agg,key)=>{agg.push(key+LIST_MEMBER_KEY_VALUE_SPLITTER+this.get(key));return agg}),[]).join(LIST_MEMBERS_SEPARATOR)}_parse(rawTraceState){if(rawTraceState.length>MAX_TRACE_STATE_LEN)return;this._internalState=rawTraceState.split(LIST_MEMBERS_SEPARATOR).reverse().reduce(((agg,part)=>{const listMember=part.trim();const i=listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);if(i!==-1){const key=listMember.slice(0,i);const value=listMember.slice(i+1,part.length);if((0,validators_1.validateKey)(key)&&(0,validators_1.validateValue)(value)){agg.set(key,value)}else{}}return agg}),new Map);if(this._internalState.size>MAX_TRACE_STATE_ITEMS){this._internalState=new Map(Array.from(this._internalState.entries()).reverse().slice(0,MAX_TRACE_STATE_ITEMS))}}_keys(){return Array.from(this._internalState.keys()).reverse()}_clone(){const traceState=new TraceState;traceState._internalState=new Map(this._internalState);return traceState}}exports.TraceState=TraceState},{"../internal/validators":65}],77:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.W3CTraceContextPropagator=exports.parseTraceParent=exports.TRACE_STATE_HEADER=exports.TRACE_PARENT_HEADER=void 0;const api_1=require("@opentelemetry/api");const suppress_tracing_1=require("./suppress-tracing");const TraceState_1=require("./TraceState");exports.TRACE_PARENT_HEADER="traceparent";exports.TRACE_STATE_HEADER="tracestate";const VERSION="00";const VERSION_PART="(?!ff)[\\da-f]{2}";const TRACE_ID_PART="(?![0]{32})[\\da-f]{32}";const PARENT_ID_PART="(?![0]{16})[\\da-f]{16}";const FLAGS_PART="[\\da-f]{2}";const TRACE_PARENT_REGEX=new RegExp(`^\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\s?$`);function parseTraceParent(traceParent){const match=TRACE_PARENT_REGEX.exec(traceParent);if(!match)return null;if(match[1]==="00"&&match[5])return null;return{traceId:match[2],spanId:match[3],traceFlags:parseInt(match[4],16)}}exports.parseTraceParent=parseTraceParent;class W3CTraceContextPropagator{inject(context,carrier,setter){const spanContext=api_1.trace.getSpanContext(context);if(!spanContext||(0,suppress_tracing_1.isTracingSuppressed)(context)||!(0,api_1.isSpanContextValid)(spanContext))return;const traceParent=`${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(spanContext.traceFlags||api_1.TraceFlags.NONE).toString(16)}`;setter.set(carrier,exports.TRACE_PARENT_HEADER,traceParent);if(spanContext.traceState){setter.set(carrier,exports.TRACE_STATE_HEADER,spanContext.traceState.serialize())}}extract(context,carrier,getter){const traceParentHeader=getter.get(carrier,exports.TRACE_PARENT_HEADER);if(!traceParentHeader)return context;const traceParent=Array.isArray(traceParentHeader)?traceParentHeader[0]:traceParentHeader;if(typeof traceParent!=="string")return context;const spanContext=parseTraceParent(traceParent);if(!spanContext)return context;spanContext.isRemote=true;const traceStateHeader=getter.get(carrier,exports.TRACE_STATE_HEADER);if(traceStateHeader){const state=Array.isArray(traceStateHeader)?traceStateHeader.join(","):traceStateHeader;spanContext.traceState=new TraceState_1.TraceState(typeof state==="string"?state:undefined)}return api_1.trace.setSpanContext(context,spanContext)}fields(){return[exports.TRACE_PARENT_HEADER,exports.TRACE_STATE_HEADER]}}exports.W3CTraceContextPropagator=W3CTraceContextPropagator},{"./TraceState":76,"./suppress-tracing":83,"@opentelemetry/api":19}],78:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getRPCMetadata=exports.deleteRPCMetadata=exports.setRPCMetadata=exports.RPCType=void 0;const api_1=require("@opentelemetry/api");const RPC_METADATA_KEY=(0,api_1.createContextKey)("OpenTelemetry SDK Context Key RPC_METADATA");var RPCType;(function(RPCType){RPCType["HTTP"]="http"})(RPCType=exports.RPCType||(exports.RPCType={}));function setRPCMetadata(context,meta){return context.setValue(RPC_METADATA_KEY,meta)}exports.setRPCMetadata=setRPCMetadata;function deleteRPCMetadata(context){return context.deleteValue(RPC_METADATA_KEY)}exports.deleteRPCMetadata=deleteRPCMetadata;function getRPCMetadata(context){return context.getValue(RPC_METADATA_KEY)}exports.getRPCMetadata=getRPCMetadata},{"@opentelemetry/api":19}],79:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AlwaysOffSampler=void 0;const api_1=require("@opentelemetry/api");class AlwaysOffSampler{shouldSample(){return{decision:api_1.SamplingDecision.NOT_RECORD}}toString(){return"AlwaysOffSampler"}}exports.AlwaysOffSampler=AlwaysOffSampler},{"@opentelemetry/api":19}],80:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AlwaysOnSampler=void 0;const api_1=require("@opentelemetry/api");class AlwaysOnSampler{shouldSample(){return{decision:api_1.SamplingDecision.RECORD_AND_SAMPLED}}toString(){return"AlwaysOnSampler"}}exports.AlwaysOnSampler=AlwaysOnSampler},{"@opentelemetry/api":19}],81:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ParentBasedSampler=void 0;const api_1=require("@opentelemetry/api");const global_error_handler_1=require("../../common/global-error-handler");const AlwaysOffSampler_1=require("./AlwaysOffSampler");const AlwaysOnSampler_1=require("./AlwaysOnSampler");class ParentBasedSampler{constructor(config){var _a,_b,_c,_d;this._root=config.root;if(!this._root){(0,global_error_handler_1.globalErrorHandler)(new Error("ParentBasedSampler must have a root sampler configured"));this._root=new AlwaysOnSampler_1.AlwaysOnSampler}this._remoteParentSampled=(_a=config.remoteParentSampled)!==null&&_a!==void 0?_a:new AlwaysOnSampler_1.AlwaysOnSampler;this._remoteParentNotSampled=(_b=config.remoteParentNotSampled)!==null&&_b!==void 0?_b:new AlwaysOffSampler_1.AlwaysOffSampler;this._localParentSampled=(_c=config.localParentSampled)!==null&&_c!==void 0?_c:new AlwaysOnSampler_1.AlwaysOnSampler;this._localParentNotSampled=(_d=config.localParentNotSampled)!==null&&_d!==void 0?_d:new AlwaysOffSampler_1.AlwaysOffSampler}shouldSample(context,traceId,spanName,spanKind,attributes,links){const parentContext=api_1.trace.getSpanContext(context);if(!parentContext||!(0,api_1.isSpanContextValid)(parentContext)){return this._root.shouldSample(context,traceId,spanName,spanKind,attributes,links)}if(parentContext.isRemote){if(parentContext.traceFlags&api_1.TraceFlags.SAMPLED){return this._remoteParentSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}return this._remoteParentNotSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}if(parentContext.traceFlags&api_1.TraceFlags.SAMPLED){return this._localParentSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}return this._localParentNotSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}toString(){return`ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`}}exports.ParentBasedSampler=ParentBasedSampler},{"../../common/global-error-handler":59,"./AlwaysOffSampler":79,"./AlwaysOnSampler":80,"@opentelemetry/api":19}],82:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceIdRatioBasedSampler=void 0;const api_1=require("@opentelemetry/api");class TraceIdRatioBasedSampler{constructor(_ratio=0){this._ratio=_ratio;this._ratio=this._normalize(_ratio);this._upperBound=Math.floor(this._ratio*4294967295)}shouldSample(context,traceId){return{decision:(0,api_1.isValidTraceId)(traceId)&&this._accumulate(traceId)<this._upperBound?api_1.SamplingDecision.RECORD_AND_SAMPLED:api_1.SamplingDecision.NOT_RECORD}}toString(){return`TraceIdRatioBased{${this._ratio}}`}_normalize(ratio){if(typeof ratio!=="number"||isNaN(ratio))return 0;return ratio>=1?1:ratio<=0?0:ratio}_accumulate(traceId){let accumulation=0;for(let i=0;i<traceId.length/8;i++){const pos=i*8;const part=parseInt(traceId.slice(pos,pos+8),16);accumulation=(accumulation^part)>>>0}return accumulation}}exports.TraceIdRatioBasedSampler=TraceIdRatioBasedSampler},{"@opentelemetry/api":19}],83:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isTracingSuppressed=exports.unsuppressTracing=exports.suppressTracing=void 0;const api_1=require("@opentelemetry/api");const SUPPRESS_TRACING_KEY=(0,api_1.createContextKey)("OpenTelemetry SDK Context Key SUPPRESS_TRACING");function suppressTracing(context){return context.setValue(SUPPRESS_TRACING_KEY,true)}exports.suppressTracing=suppressTracing;function unsuppressTracing(context){return context.deleteValue(SUPPRESS_TRACING_KEY)}exports.unsuppressTracing=unsuppressTracing;function isTracingSuppressed(context){return context.getValue(SUPPRESS_TRACING_KEY)===true}exports.isTracingSuppressed=isTracingSuppressed},{"@opentelemetry/api":19}],84:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BindOnceFuture=void 0;const promise_1=require("./promise");class BindOnceFuture{constructor(_callback,_that){this._callback=_callback;this._that=_that;this._isCalled=false;this._deferred=new promise_1.Deferred}get isCalled(){return this._isCalled}get promise(){return this._deferred.promise}call(...args){if(!this._isCalled){this._isCalled=true;try{Promise.resolve(this._callback.call(this._that,...args)).then((val=>this._deferred.resolve(val)),(err=>this._deferred.reject(err)))}catch(err){this._deferred.reject(err)}}return this._deferred.promise}}exports.BindOnceFuture=BindOnceFuture},{"./promise":88}],85:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getEnvWithoutDefaults=exports.parseEnvironment=exports.DEFAULT_ENVIRONMENT=exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=void 0;const api_1=require("@opentelemetry/api");const sampling_1=require("./sampling");const globalThis_1=require("../platform/browser/globalThis");const DEFAULT_LIST_SEPARATOR=",";const ENVIRONMENT_NUMBERS_KEYS=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function isEnvVarANumber(key){return ENVIRONMENT_NUMBERS_KEYS.indexOf(key)>-1}const ENVIRONMENT_LISTS_KEYS=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function isEnvVarAList(key){return ENVIRONMENT_LISTS_KEYS.indexOf(key)>-1}exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=Infinity;exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=128;exports.DEFAULT_ENVIRONMENT={CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:api_1.DiagLogLevel.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_TRACES_EXPORTER:"otlp",OTEL_TRACES_SAMPLER:sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function parseNumber(name,environment,values,min=-Infinity,max=Infinity){if(typeof values[name]!=="undefined"){const value=Number(values[name]);if(!isNaN(value)){if(value<min){environment[name]=min}else if(value>max){environment[name]=max}else{environment[name]=value}}}}function parseStringList(name,output,input,separator=DEFAULT_LIST_SEPARATOR){const givenValue=input[name];if(typeof givenValue==="string"){output[name]=givenValue.split(separator).map((v=>v.trim()))}}const logLevelMap={ALL:api_1.DiagLogLevel.ALL,VERBOSE:api_1.DiagLogLevel.VERBOSE,DEBUG:api_1.DiagLogLevel.DEBUG,INFO:api_1.DiagLogLevel.INFO,WARN:api_1.DiagLogLevel.WARN,ERROR:api_1.DiagLogLevel.ERROR,NONE:api_1.DiagLogLevel.NONE};function setLogLevelFromEnv(key,environment,values){const value=values[key];if(typeof value==="string"){const theLevel=logLevelMap[value.toUpperCase()];if(theLevel!=null){environment[key]=theLevel}}}function parseEnvironment(values){const environment={};for(const env in exports.DEFAULT_ENVIRONMENT){const key=env;switch(key){case"OTEL_LOG_LEVEL":setLogLevelFromEnv(key,environment,values);break;default:if(isEnvVarANumber(key)){parseNumber(key,environment,values)}else if(isEnvVarAList(key)){parseStringList(key,environment,values)}else{const value=values[key];if(typeof value!=="undefined"&&value!==null){environment[key]=String(value)}}}}return environment}exports.parseEnvironment=parseEnvironment;function getEnvWithoutDefaults(){return typeof process!=="undefined"?parseEnvironment(process.env):parseEnvironment(globalThis_1._globalThis)}exports.getEnvWithoutDefaults=getEnvWithoutDefaults}).call(this)}).call(this,require("_process"))},{"../platform/browser/globalThis":68,"./sampling":89,"@opentelemetry/api":19,_process:674}],86:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isPlainObject=void 0;const objectTag="[object Object]";const nullTag="[object Null]";const undefinedTag="[object Undefined]";const funcProto=Function.prototype;const funcToString=funcProto.toString;const objectCtorString=funcToString.call(Object);const getPrototype=overArg(Object.getPrototypeOf,Object);const objectProto=Object.prototype;const hasOwnProperty=objectProto.hasOwnProperty;const symToStringTag=Symbol?Symbol.toStringTag:undefined;const nativeObjectToString=objectProto.toString;function overArg(func,transform){return function(arg){return func(transform(arg))}}function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!==objectTag){return false}const proto=getPrototype(value);if(proto===null){return true}const Ctor=hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof Ctor=="function"&&Ctor instanceof Ctor&&funcToString.call(Ctor)===objectCtorString}exports.isPlainObject=isPlainObject;function isObjectLike(value){return value!=null&&typeof value=="object"}function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}function getRawTag(value){const isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];let unmasked=false;try{value[symToStringTag]=undefined;unmasked=true}catch(e){}const result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag}else{delete value[symToStringTag]}}return result}function objectToString(value){return nativeObjectToString.call(value)}},{}],87:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.merge=void 0;const lodash_merge_1=require("./lodash.merge");const MAX_LEVEL=20;function merge(...args){let result=args.shift();const objects=new WeakMap;while(args.length>0){result=mergeTwoObjects(result,args.shift(),0,objects)}return result}exports.merge=merge;function takeValue(value){if(isArray(value)){return value.slice()}return value}function mergeTwoObjects(one,two,level=0,objects){let result;if(level>MAX_LEVEL){return undefined}level++;if(isPrimitive(one)||isPrimitive(two)||isFunction(two)){result=takeValue(two)}else if(isArray(one)){result=one.slice();if(isArray(two)){for(let i=0,j=two.length;i<j;i++){result.push(takeValue(two[i]))}}else if(isObject(two)){const keys=Object.keys(two);for(let i=0,j=keys.length;i<j;i++){const key=keys[i];result[key]=takeValue(two[key])}}}else if(isObject(one)){if(isObject(two)){if(!shouldMerge(one,two)){return two}result=Object.assign({},one);const keys=Object.keys(two);for(let i=0,j=keys.length;i<j;i++){const key=keys[i];const twoValue=two[key];if(isPrimitive(twoValue)){if(typeof twoValue==="undefined"){delete result[key]}else{result[key]=twoValue}}else{const obj1=result[key];const obj2=twoValue;if(wasObjectReferenced(one,key,objects)||wasObjectReferenced(two,key,objects)){delete result[key]}else{if(isObject(obj1)&&isObject(obj2)){const arr1=objects.get(obj1)||[];const arr2=objects.get(obj2)||[];arr1.push({obj:one,key:key});arr2.push({obj:two,key:key});objects.set(obj1,arr1);objects.set(obj2,arr2)}result[key]=mergeTwoObjects(result[key],twoValue,level,objects)}}}}else{result=two}}return result}function wasObjectReferenced(obj,key,objects){const arr=objects.get(obj[key])||[];for(let i=0,j=arr.length;i<j;i++){const info=arr[i];if(info.key===key&&info.obj===obj){return true}}return false}function isArray(value){return Array.isArray(value)}function isFunction(value){return typeof value==="function"}function isObject(value){return!isPrimitive(value)&&!isArray(value)&&!isFunction(value)&&typeof value==="object"}function isPrimitive(value){return typeof value==="string"||typeof value==="number"||typeof value==="boolean"||typeof value==="undefined"||value instanceof Date||value instanceof RegExp||value===null}function shouldMerge(one,two){if(!(0,lodash_merge_1.isPlainObject)(one)||!(0,lodash_merge_1.isPlainObject)(two)){return false}return true}},{"./lodash.merge":86}],88:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Deferred=void 0;class Deferred{constructor(){this._promise=new Promise(((resolve,reject)=>{this._resolve=resolve;this._reject=reject}))}get promise(){return this._promise}resolve(val){this._resolve(val)}reject(err){this._reject(err)}}exports.Deferred=Deferred},{}],89:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TracesSamplerValues=void 0;var TracesSamplerValues;(function(TracesSamplerValues){TracesSamplerValues["AlwaysOff"]="always_off";TracesSamplerValues["AlwaysOn"]="always_on";TracesSamplerValues["ParentBasedAlwaysOff"]="parentbased_always_off";TracesSamplerValues["ParentBasedAlwaysOn"]="parentbased_always_on";TracesSamplerValues["ParentBasedTraceIdRatio"]="parentbased_traceidratio";TracesSamplerValues["TraceIdRatio"]="traceidratio"})(TracesSamplerValues=exports.TracesSamplerValues||(exports.TracesSamplerValues={}))},{}],90:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isUrlIgnored=exports.urlMatches=void 0;function urlMatches(url,urlToMatch){if(typeof urlToMatch==="string"){return url===urlToMatch}else{return!!url.match(urlToMatch)}}exports.urlMatches=urlMatches;function isUrlIgnored(url,ignoredUrls){if(!ignoredUrls){return false}for(const ignoreUrl of ignoredUrls){if(urlMatches(url,ignoreUrl)){return true}}return false}exports.isUrlIgnored=isUrlIgnored},{}],91:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isWrapped=void 0;function isWrapped(func){return typeof func==="function"&&typeof func.__original==="function"&&typeof func.__unwrap==="function"&&func.__wrapped===true}exports.isWrapped=isWrapped},{}],92:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.8.0"},{}],93:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPMetricExporterBase=exports.DeltaTemporalitySelector=exports.CumulativeTemporalitySelector=void 0;const core_1=require("@opentelemetry/core");const sdk_metrics_1=require("@opentelemetry/sdk-metrics");const api_1=require("@opentelemetry/api");const CumulativeTemporalitySelector=()=>sdk_metrics_1.AggregationTemporality.CUMULATIVE;exports.CumulativeTemporalitySelector=CumulativeTemporalitySelector;const DeltaTemporalitySelector=instrumentType=>{switch(instrumentType){case sdk_metrics_1.InstrumentType.COUNTER:case sdk_metrics_1.InstrumentType.OBSERVABLE_COUNTER:case sdk_metrics_1.InstrumentType.HISTOGRAM:case sdk_metrics_1.InstrumentType.OBSERVABLE_GAUGE:return sdk_metrics_1.AggregationTemporality.DELTA;case sdk_metrics_1.InstrumentType.UP_DOWN_COUNTER:case sdk_metrics_1.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER:return sdk_metrics_1.AggregationTemporality.CUMULATIVE}};exports.DeltaTemporalitySelector=DeltaTemporalitySelector;function chooseTemporalitySelectorFromEnvironment(){const env=(0,core_1.getEnv)();const configuredTemporality=env.OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE.trim().toLowerCase();if(configuredTemporality==="cumulative"){return exports.CumulativeTemporalitySelector}if(configuredTemporality==="delta"){return exports.DeltaTemporalitySelector}api_1.diag.warn(`OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE is set to '${env.OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE}', but only 'cumulative' and 'delta' are allowed. Using default ('cumulative') instead.`);return exports.CumulativeTemporalitySelector}function chooseTemporalitySelector(temporalityPreference){if(temporalityPreference!=null){if(temporalityPreference===sdk_metrics_1.AggregationTemporality.DELTA){return exports.DeltaTemporalitySelector}return exports.CumulativeTemporalitySelector}return chooseTemporalitySelectorFromEnvironment()}class OTLPMetricExporterBase{constructor(exporter,config){this._otlpExporter=exporter;this._aggregationTemporalitySelector=chooseTemporalitySelector(config===null||config===void 0?void 0:config.temporalityPreference)}export(metrics,resultCallback){this._otlpExporter.export([metrics],resultCallback)}async shutdown(){await this._otlpExporter.shutdown()}forceFlush(){return Promise.resolve()}selectAggregationTemporality(instrumentType){return this._aggregationTemporalitySelector(instrumentType)}}exports.OTLPMetricExporterBase=OTLPMetricExporterBase},{"@opentelemetry/api":19,"@opentelemetry/core":108,"@opentelemetry/sdk-metrics":323}],94:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],95:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./platform"),exports);__exportStar(require("./OTLPMetricExporterOptions"),exports);__exportStar(require("./OTLPMetricExporterBase"),exports)},{"./OTLPMetricExporterBase":93,"./OTLPMetricExporterOptions":94,"./platform":97}],96:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPMetricExporter=void 0;const core_1=require("@opentelemetry/core");const OTLPMetricExporterBase_1=require("../../OTLPMetricExporterBase");const otlp_exporter_base_1=require("@opentelemetry/otlp-exporter-base");const otlp_transformer_1=require("@opentelemetry/otlp-transformer");const DEFAULT_COLLECTOR_RESOURCE_PATH="v1/metrics";const DEFAULT_COLLECTOR_URL=`http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;class OTLPExporterBrowserProxy extends otlp_exporter_base_1.OTLPExporterBrowserBase{constructor(config){super(config);this._headers=Object.assign(this._headers,core_1.baggageUtils.parseKeyPairsIntoRecord((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_METRICS_HEADERS))}getDefaultUrl(config){return typeof config.url==="string"?config.url:(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT.length>0?(0,otlp_exporter_base_1.appendRootPathToUrlIfNeeded)((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_METRICS_ENDPOINT):(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_ENDPOINT.length>0?(0,otlp_exporter_base_1.appendResourcePathToUrl)((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_ENDPOINT,DEFAULT_COLLECTOR_RESOURCE_PATH):DEFAULT_COLLECTOR_URL}convert(metrics){return(0,otlp_transformer_1.createExportMetricsServiceRequest)(metrics)}}class OTLPMetricExporter extends OTLPMetricExporterBase_1.OTLPMetricExporterBase{constructor(config){super(new OTLPExporterBrowserProxy(config),config)}}exports.OTLPMetricExporter=OTLPMetricExporter},{"../../OTLPMetricExporterBase":93,"@opentelemetry/core":108,"@opentelemetry/otlp-exporter-base":139,"@opentelemetry/otlp-transformer":147}],97:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./OTLPMetricExporter"),exports)},{"./OTLPMetricExporter":96}],98:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{dup:53}],99:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{dup:54}],100:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.W3CBaggagePropagator=void 0;const api_1=require("@opentelemetry/api");const suppress_tracing_1=require("../../trace/suppress-tracing");const constants_1=require("../constants");const utils_1=require("../utils");class W3CBaggagePropagator{inject(context,carrier,setter){const baggage=api_1.propagation.getBaggage(context);if(!baggage||(0,suppress_tracing_1.isTracingSuppressed)(context))return;const keyPairs=(0,utils_1.getKeyPairs)(baggage).filter((pair=>pair.length<=constants_1.BAGGAGE_MAX_PER_NAME_VALUE_PAIRS)).slice(0,constants_1.BAGGAGE_MAX_NAME_VALUE_PAIRS);const headerValue=(0,utils_1.serializeKeyPairs)(keyPairs);if(headerValue.length>0){setter.set(carrier,constants_1.BAGGAGE_HEADER,headerValue)}}extract(context,carrier,getter){const headerValue=getter.get(carrier,constants_1.BAGGAGE_HEADER);const baggageString=Array.isArray(headerValue)?headerValue.join(constants_1.BAGGAGE_ITEMS_SEPARATOR):headerValue;if(!baggageString)return context;const baggage={};if(baggageString.length===0){return context}const pairs=baggageString.split(constants_1.BAGGAGE_ITEMS_SEPARATOR);pairs.forEach((entry=>{const keyPair=(0,utils_1.parsePairKeyValue)(entry);if(keyPair){const baggageEntry={value:keyPair.value};if(keyPair.metadata){baggageEntry.metadata=keyPair.metadata}baggage[keyPair.key]=baggageEntry}}));if(Object.entries(baggage).length===0){return context}return api_1.propagation.setBaggage(context,api_1.propagation.createBaggage(baggage))}fields(){return[constants_1.BAGGAGE_HEADER]}}exports.W3CBaggagePropagator=W3CBaggagePropagator},{"../../trace/suppress-tracing":128,"../constants":99,"../utils":101,"@opentelemetry/api":19}],101:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./constants":99,"@opentelemetry/api":19,dup:56}],102:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],103:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:58}],104:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments)},{"./logging-error-handler":105,dup:59}],105:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:60}],106:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.addHrTimes=exports.isTimeInput=exports.isTimeInputHrTime=exports.hrTimeToMicroseconds=exports.hrTimeToMilliseconds=exports.hrTimeToNanoseconds=exports.hrTimeToTimeStamp=exports.hrTimeDuration=exports.timeInputToHrTime=exports.hrTime=exports.getTimeOrigin=exports.millisToHrTime=void 0;const platform_1=require("../platform");const NANOSECOND_DIGITS=9;const NANOSECOND_DIGITS_IN_MILLIS=6;const MILLISECONDS_TO_NANOSECONDS=Math.pow(10,NANOSECOND_DIGITS_IN_MILLIS);const SECOND_TO_NANOSECONDS=Math.pow(10,NANOSECOND_DIGITS);function millisToHrTime(epochMillis){const epochSeconds=epochMillis/1e3;const seconds=Math.trunc(epochSeconds);const nanos=Math.round(epochMillis%1e3*MILLISECONDS_TO_NANOSECONDS);return[seconds,nanos]}exports.millisToHrTime=millisToHrTime;function getTimeOrigin(){let timeOrigin=platform_1.otperformance.timeOrigin;if(typeof timeOrigin!=="number"){const perf=platform_1.otperformance;timeOrigin=perf.timing&&perf.timing.fetchStart}return timeOrigin}exports.getTimeOrigin=getTimeOrigin;function hrTime(performanceNow){const timeOrigin=millisToHrTime(getTimeOrigin());const now=millisToHrTime(typeof performanceNow==="number"?performanceNow:platform_1.otperformance.now());return addHrTimes(timeOrigin,now)}exports.hrTime=hrTime;function timeInputToHrTime(time){if(isTimeInputHrTime(time)){return time}else if(typeof time==="number"){if(time<getTimeOrigin()){return hrTime(time)}else{return millisToHrTime(time)}}else if(time instanceof Date){return millisToHrTime(time.getTime())}else{throw TypeError("Invalid input type")}}exports.timeInputToHrTime=timeInputToHrTime;function hrTimeDuration(startTime,endTime){let seconds=endTime[0]-startTime[0];let nanos=endTime[1]-startTime[1];if(nanos<0){seconds-=1;nanos+=SECOND_TO_NANOSECONDS}return[seconds,nanos]}exports.hrTimeDuration=hrTimeDuration;function hrTimeToTimeStamp(time){const precision=NANOSECOND_DIGITS;const tmp=`${"0".repeat(precision)}${time[1]}Z`;const nanoString=tmp.substr(tmp.length-precision-1);const date=new Date(time[0]*1e3).toISOString();return date.replace("000Z",nanoString)}exports.hrTimeToTimeStamp=hrTimeToTimeStamp;function hrTimeToNanoseconds(time){return time[0]*SECOND_TO_NANOSECONDS+time[1]}exports.hrTimeToNanoseconds=hrTimeToNanoseconds;function hrTimeToMilliseconds(time){return Math.round(time[0]*1e3+time[1]/1e6)}exports.hrTimeToMilliseconds=hrTimeToMilliseconds;function hrTimeToMicroseconds(time){return Math.round(time[0]*1e6+time[1]/1e3)}exports.hrTimeToMicroseconds=hrTimeToMicroseconds;function isTimeInputHrTime(value){return Array.isArray(value)&&value.length===2&&typeof value[0]==="number"&&typeof value[1]==="number"}exports.isTimeInputHrTime=isTimeInputHrTime;function isTimeInput(value){return isTimeInputHrTime(value)||typeof value==="number"||value instanceof Date}exports.isTimeInput=isTimeInput;function addHrTimes(time1,time2){const out=[time1[0]+time2[0],time1[1]+time2[1]];if(out[1]>=SECOND_TO_NANOSECONDS){out[1]-=SECOND_TO_NANOSECONDS;out[0]+=1}return out}exports.addHrTimes=addHrTimes},{"../platform":115}],107:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],108:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});exports.internal=exports.baggageUtils=void 0;__exportStar(require("./baggage/propagation/W3CBaggagePropagator"),exports);__exportStar(require("./common/anchored-clock"),exports);__exportStar(require("./common/attributes"),exports);__exportStar(require("./common/global-error-handler"),exports);__exportStar(require("./common/logging-error-handler"),exports);__exportStar(require("./common/time"),exports);__exportStar(require("./common/types"),exports);__exportStar(require("./ExportResult"),exports);__exportStar(require("./version"),exports);exports.baggageUtils=require("./baggage/utils");__exportStar(require("./platform"),exports);__exportStar(require("./propagation/composite"),exports);__exportStar(require("./trace/W3CTraceContextPropagator"),exports);__exportStar(require("./trace/IdGenerator"),exports);__exportStar(require("./trace/rpc-metadata"),exports);__exportStar(require("./trace/sampler/AlwaysOffSampler"),exports);__exportStar(require("./trace/sampler/AlwaysOnSampler"),exports);__exportStar(require("./trace/sampler/ParentBasedSampler"),exports);__exportStar(require("./trace/sampler/TraceIdRatioBasedSampler"),exports);__exportStar(require("./trace/suppress-tracing"),exports);__exportStar(require("./trace/TraceState"),exports);__exportStar(require("./utils/environment"),exports);__exportStar(require("./utils/merge"),exports);__exportStar(require("./utils/sampling"),exports);__exportStar(require("./utils/url"),exports);__exportStar(require("./utils/wrap"),exports);__exportStar(require("./utils/callback"),exports);__exportStar(require("./version"),exports);const exporter_1=require("./internal/exporter");exports.internal={_export:exporter_1._export}},{"./ExportResult":98,"./baggage/propagation/W3CBaggagePropagator":100,"./baggage/utils":101,"./common/anchored-clock":102,"./common/attributes":103,"./common/global-error-handler":104,"./common/logging-error-handler":105,"./common/time":106,"./common/types":107,"./internal/exporter":109,"./platform":115,"./propagation/composite":119,"./trace/IdGenerator":120,"./trace/TraceState":121,"./trace/W3CTraceContextPropagator":122,"./trace/rpc-metadata":123,"./trace/sampler/AlwaysOffSampler":124,"./trace/sampler/AlwaysOnSampler":125,"./trace/sampler/ParentBasedSampler":126,"./trace/sampler/TraceIdRatioBasedSampler":127,"./trace/suppress-tracing":128,"./utils/callback":129,"./utils/environment":130,"./utils/merge":132,"./utils/sampling":134,"./utils/url":135,"./utils/wrap":136,"./version":137}],109:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._export=void 0;const api_1=require("@opentelemetry/api");const suppress_tracing_1=require("../trace/suppress-tracing");function _export(exporter,arg){return new Promise((resolve=>{api_1.context.with((0,suppress_tracing_1.suppressTracing)(api_1.context.active()),(()=>{exporter.export(arg,(result=>{resolve(result)}))}))}))}exports._export=_export},{"../trace/suppress-tracing":128,"@opentelemetry/api":19}],110:[function(require,module,exports){arguments[4][65][0].apply(exports,arguments)},{dup:65}],111:[function(require,module,exports){arguments[4][66][0].apply(exports,arguments)},{dup:66}],112:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{"../../utils/environment":130,"./globalThis":113,dup:67}],113:[function(require,module,exports){(function(global){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports._globalThis=void 0;exports._globalThis=typeof globalThis==="object"?globalThis:typeof self==="object"?self:typeof window==="object"?window:typeof global==="object"?global:{}}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],114:[function(require,module,exports){arguments[4][69][0].apply(exports,arguments)},{dup:69}],115:[function(require,module,exports){arguments[4][70][0].apply(exports,arguments)},{"./RandomIdGenerator":111,"./environment":112,"./globalThis":113,"./hex-to-base64":114,"./performance":116,"./sdk-info":117,"./timer-util":118,dup:70}],116:[function(require,module,exports){arguments[4][71][0].apply(exports,arguments)},{dup:71}],117:[function(require,module,exports){arguments[4][72][0].apply(exports,arguments)},{"../../version":137,"@opentelemetry/semantic-conventions":155,dup:72}],118:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73}],119:[function(require,module,exports){arguments[4][74][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:74}],120:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],121:[function(require,module,exports){arguments[4][76][0].apply(exports,arguments)},{"../internal/validators":110,dup:76}],122:[function(require,module,exports){arguments[4][77][0].apply(exports,arguments)},{"./TraceState":121,"./suppress-tracing":128,"@opentelemetry/api":19,dup:77}],123:[function(require,module,exports){arguments[4][78][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:78}],124:[function(require,module,exports){arguments[4][79][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:79}],125:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:80}],126:[function(require,module,exports){arguments[4][81][0].apply(exports,arguments)},{"../../common/global-error-handler":104,"./AlwaysOffSampler":124,"./AlwaysOnSampler":125,"@opentelemetry/api":19,dup:81}],127:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:82}],128:[function(require,module,exports){arguments[4][83][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:83}],129:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BindOnceFuture=void 0;const promise_1=require("./promise");class BindOnceFuture{constructor(_callback,_that){this._callback=_callback;this._that=_that;this._isCalled=false;this._deferred=new promise_1.Deferred}get isCalled(){return this._isCalled}get promise(){return this._deferred.promise}call(...args){if(!this._isCalled){this._isCalled=true;try{Promise.resolve(this._callback.call(this._that,...args)).then((val=>this._deferred.resolve(val)),(err=>this._deferred.reject(err)))}catch(err){this._deferred.reject(err)}}return this._deferred.promise}}exports.BindOnceFuture=BindOnceFuture},{"./promise":133}],130:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getEnvWithoutDefaults=exports.parseEnvironment=exports.DEFAULT_ENVIRONMENT=exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT=exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=void 0;const api_1=require("@opentelemetry/api");const sampling_1=require("./sampling");const globalThis_1=require("../platform/browser/globalThis");const DEFAULT_LIST_SEPARATOR=",";const ENVIRONMENT_BOOLEAN_KEYS=["OTEL_SDK_DISABLED"];function isEnvVarABoolean(key){return ENVIRONMENT_BOOLEAN_KEYS.indexOf(key)>-1}const ENVIRONMENT_NUMBERS_KEYS=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function isEnvVarANumber(key){return ENVIRONMENT_NUMBERS_KEYS.indexOf(key)>-1}const ENVIRONMENT_LISTS_KEYS=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function isEnvVarAList(key){return ENVIRONMENT_LISTS_KEYS.indexOf(key)>-1}exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=Infinity;exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=128;exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT=128;exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT=128;exports.DEFAULT_ENVIRONMENT={OTEL_SDK_DISABLED:false,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:api_1.DiagLogLevel.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function parseBoolean(key,environment,values){if(typeof values[key]==="undefined"){return}const value=String(values[key]);environment[key]=value.toLowerCase()==="true"}function parseNumber(name,environment,values,min=-Infinity,max=Infinity){if(typeof values[name]!=="undefined"){const value=Number(values[name]);if(!isNaN(value)){if(value<min){environment[name]=min}else if(value>max){environment[name]=max}else{environment[name]=value}}}}function parseStringList(name,output,input,separator=DEFAULT_LIST_SEPARATOR){const givenValue=input[name];if(typeof givenValue==="string"){output[name]=givenValue.split(separator).map((v=>v.trim()))}}const logLevelMap={ALL:api_1.DiagLogLevel.ALL,VERBOSE:api_1.DiagLogLevel.VERBOSE,DEBUG:api_1.DiagLogLevel.DEBUG,INFO:api_1.DiagLogLevel.INFO,WARN:api_1.DiagLogLevel.WARN,ERROR:api_1.DiagLogLevel.ERROR,NONE:api_1.DiagLogLevel.NONE};function setLogLevelFromEnv(key,environment,values){const value=values[key];if(typeof value==="string"){const theLevel=logLevelMap[value.toUpperCase()];if(theLevel!=null){environment[key]=theLevel}}}function parseEnvironment(values){const environment={};for(const env in exports.DEFAULT_ENVIRONMENT){const key=env;switch(key){case"OTEL_LOG_LEVEL":setLogLevelFromEnv(key,environment,values);break;default:if(isEnvVarABoolean(key)){parseBoolean(key,environment,values)}else if(isEnvVarANumber(key)){parseNumber(key,environment,values)}else if(isEnvVarAList(key)){parseStringList(key,environment,values)}else{const value=values[key];if(typeof value!=="undefined"&&value!==null){environment[key]=String(value)}}}}return environment}exports.parseEnvironment=parseEnvironment;function getEnvWithoutDefaults(){return typeof process!=="undefined"&&process&&process.env?parseEnvironment(process.env):parseEnvironment(globalThis_1._globalThis)}exports.getEnvWithoutDefaults=getEnvWithoutDefaults}).call(this)}).call(this,require("_process"))},{"../platform/browser/globalThis":113,"./sampling":134,"@opentelemetry/api":19,_process:674}],131:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isPlainObject=void 0;const objectTag="[object Object]";const nullTag="[object Null]";const undefinedTag="[object Undefined]";const funcProto=Function.prototype;const funcToString=funcProto.toString;const objectCtorString=funcToString.call(Object);const getPrototype=overArg(Object.getPrototypeOf,Object);const objectProto=Object.prototype;const hasOwnProperty=objectProto.hasOwnProperty;const symToStringTag=Symbol?Symbol.toStringTag:undefined;const nativeObjectToString=objectProto.toString;function overArg(func,transform){return function(arg){return func(transform(arg))}}function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!==objectTag){return false}const proto=getPrototype(value);if(proto===null){return true}const Ctor=hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof Ctor=="function"&&Ctor instanceof Ctor&&funcToString.call(Ctor)===objectCtorString}exports.isPlainObject=isPlainObject;function isObjectLike(value){return value!=null&&typeof value=="object"}function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}function getRawTag(value){const isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];let unmasked=false;try{value[symToStringTag]=undefined;unmasked=true}catch(e){}const result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag}else{delete value[symToStringTag]}}return result}function objectToString(value){return nativeObjectToString.call(value)}},{}],132:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.merge=void 0;const lodash_merge_1=require("./lodash.merge");const MAX_LEVEL=20;function merge(...args){let result=args.shift();const objects=new WeakMap;while(args.length>0){result=mergeTwoObjects(result,args.shift(),0,objects)}return result}exports.merge=merge;function takeValue(value){if(isArray(value)){return value.slice()}return value}function mergeTwoObjects(one,two,level=0,objects){let result;if(level>MAX_LEVEL){return undefined}level++;if(isPrimitive(one)||isPrimitive(two)||isFunction(two)){result=takeValue(two)}else if(isArray(one)){result=one.slice();if(isArray(two)){for(let i=0,j=two.length;i<j;i++){result.push(takeValue(two[i]))}}else if(isObject(two)){const keys=Object.keys(two);for(let i=0,j=keys.length;i<j;i++){const key=keys[i];result[key]=takeValue(two[key])}}}else if(isObject(one)){if(isObject(two)){if(!shouldMerge(one,two)){return two}result=Object.assign({},one);const keys=Object.keys(two);for(let i=0,j=keys.length;i<j;i++){const key=keys[i];const twoValue=two[key];if(isPrimitive(twoValue)){if(typeof twoValue==="undefined"){delete result[key]}else{result[key]=twoValue}}else{const obj1=result[key];const obj2=twoValue;if(wasObjectReferenced(one,key,objects)||wasObjectReferenced(two,key,objects)){delete result[key]}else{if(isObject(obj1)&&isObject(obj2)){const arr1=objects.get(obj1)||[];const arr2=objects.get(obj2)||[];arr1.push({obj:one,key:key});arr2.push({obj:two,key:key});objects.set(obj1,arr1);objects.set(obj2,arr2)}result[key]=mergeTwoObjects(result[key],twoValue,level,objects)}}}}else{result=two}}return result}function wasObjectReferenced(obj,key,objects){const arr=objects.get(obj[key])||[];for(let i=0,j=arr.length;i<j;i++){const info=arr[i];if(info.key===key&&info.obj===obj){return true}}return false}function isArray(value){return Array.isArray(value)}function isFunction(value){return typeof value==="function"}function isObject(value){return!isPrimitive(value)&&!isArray(value)&&!isFunction(value)&&typeof value==="object"}function isPrimitive(value){return typeof value==="string"||typeof value==="number"||typeof value==="boolean"||typeof value==="undefined"||value instanceof Date||value instanceof RegExp||value===null}function shouldMerge(one,two){if(!(0,lodash_merge_1.isPlainObject)(one)||!(0,lodash_merge_1.isPlainObject)(two)){return false}return true}},{"./lodash.merge":131}],133:[function(require,module,exports){arguments[4][88][0].apply(exports,arguments)},{dup:88}],134:[function(require,module,exports){arguments[4][89][0].apply(exports,arguments)},{dup:89}],135:[function(require,module,exports){arguments[4][90][0].apply(exports,arguments)},{dup:90}],136:[function(require,module,exports){arguments[4][91][0].apply(exports,arguments)},{dup:91}],137:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.10.1"},{}],138:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPExporterBase=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const util_1=require("./util");class OTLPExporterBase{constructor(config={}){this._sendingPromises=[];this.url=this.getDefaultUrl(config);if(typeof config.hostname==="string"){this.hostname=config.hostname}this.shutdown=this.shutdown.bind(this);this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this);this._concurrencyLimit=typeof config.concurrencyLimit==="number"?config.concurrencyLimit:Infinity;this.timeoutMillis=(0,util_1.configureExporterTimeout)(config.timeoutMillis);this.onInit(config)}export(items,resultCallback){if(this._shutdownOnce.isCalled){resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Exporter has been shutdown")});return}if(this._sendingPromises.length>=this._concurrencyLimit){resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Concurrent export limit reached")});return}this._export(items).then((()=>{resultCallback({code:core_1.ExportResultCode.SUCCESS})})).catch((error=>{resultCallback({code:core_1.ExportResultCode.FAILED,error:error})}))}_export(items){return new Promise(((resolve,reject)=>{try{api_1.diag.debug("items to be sent",items);this.send(items,resolve,reject)}catch(e){reject(e)}}))}shutdown(){return this._shutdownOnce.call()}_shutdown(){api_1.diag.debug("shutdown started");this.onShutdown();return Promise.all(this._sendingPromises).then((()=>{}))}}exports.OTLPExporterBase=OTLPExporterBase},{"./util":144,"@opentelemetry/api":19,"@opentelemetry/core":108}],139:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});exports.invalidTimeout=exports.configureExporterTimeout=exports.appendRootPathToUrlIfNeeded=exports.appendResourcePathToUrl=exports.parseHeaders=exports.OTLPExporterError=exports.OTLPExporterBase=void 0;__exportStar(require("./platform"),exports);var OTLPExporterBase_1=require("./OTLPExporterBase");Object.defineProperty(exports,"OTLPExporterBase",{enumerable:true,get:function(){return OTLPExporterBase_1.OTLPExporterBase}});var types_1=require("./types");Object.defineProperty(exports,"OTLPExporterError",{enumerable:true,get:function(){return types_1.OTLPExporterError}});var util_1=require("./util");Object.defineProperty(exports,"parseHeaders",{enumerable:true,get:function(){return util_1.parseHeaders}});Object.defineProperty(exports,"appendResourcePathToUrl",{enumerable:true,get:function(){return util_1.appendResourcePathToUrl}});Object.defineProperty(exports,"appendRootPathToUrlIfNeeded",{enumerable:true,get:function(){return util_1.appendRootPathToUrlIfNeeded}});Object.defineProperty(exports,"configureExporterTimeout",{enumerable:true,get:function(){return util_1.configureExporterTimeout}});Object.defineProperty(exports,"invalidTimeout",{enumerable:true,get:function(){return util_1.invalidTimeout}})},{"./OTLPExporterBase":138,"./platform":141,"./types":143,"./util":144}],140:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPExporterBrowserBase=void 0;const OTLPExporterBase_1=require("../../OTLPExporterBase");const util_1=require("../../util");const util_2=require("./util");const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class OTLPExporterBrowserBase extends OTLPExporterBase_1.OTLPExporterBase{constructor(config={}){super(config);this._useXHR=false;this._useXHR=!!config.headers||typeof navigator.sendBeacon!=="function";if(this._useXHR){this._headers=Object.assign({},(0,util_1.parseHeaders)(config.headers),core_1.baggageUtils.parseKeyPairsIntoRecord((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_HEADERS))}else{this._headers={}}}onInit(){window.addEventListener("unload",this.shutdown)}onShutdown(){window.removeEventListener("unload",this.shutdown)}send(items,onSuccess,onError){if(this._shutdownOnce.isCalled){api_1.diag.debug("Shutdown already started. Cannot send objects");return}const serviceRequest=this.convert(items);const body=JSON.stringify(serviceRequest);const promise=new Promise(((resolve,reject)=>{if(this._useXHR){(0,util_2.sendWithXhr)(body,this.url,this._headers,this.timeoutMillis,resolve,reject)}else{(0,util_2.sendWithBeacon)(body,this.url,{type:"application/json"},resolve,reject)}})).then(onSuccess,onError);this._sendingPromises.push(promise);const popPromise=()=>{const index=this._sendingPromises.indexOf(promise);this._sendingPromises.splice(index,1)};promise.then(popPromise,popPromise)}}exports.OTLPExporterBrowserBase=OTLPExporterBrowserBase},{"../../OTLPExporterBase":138,"../../util":144,"./util":142,"@opentelemetry/api":19,"@opentelemetry/core":108}],141:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sendWithXhr=exports.OTLPExporterBrowserBase=void 0;var OTLPExporterBrowserBase_1=require("./OTLPExporterBrowserBase");Object.defineProperty(exports,"OTLPExporterBrowserBase",{enumerable:true,get:function(){return OTLPExporterBrowserBase_1.OTLPExporterBrowserBase}});var util_1=require("./util");Object.defineProperty(exports,"sendWithXhr",{enumerable:true,get:function(){return util_1.sendWithXhr}})},{"./OTLPExporterBrowserBase":140,"./util":142}],142:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sendWithXhr=exports.sendWithBeacon=void 0;const api_1=require("@opentelemetry/api");const types_1=require("../../types");const util_1=require("../../util");function sendWithBeacon(body,url,blobPropertyBag,onSuccess,onError){if(navigator.sendBeacon(url,new Blob([body],blobPropertyBag))){api_1.diag.debug("sendBeacon - can send",body);onSuccess()}else{const error=new types_1.OTLPExporterError(`sendBeacon - cannot send ${body}`);onError(error)}}exports.sendWithBeacon=sendWithBeacon;function sendWithXhr(body,url,headers,exporterTimeout,onSuccess,onError){let retryTimer;let xhr;let reqIsDestroyed=false;const exporterTimer=setTimeout((()=>{clearTimeout(retryTimer);reqIsDestroyed=true;if(xhr.readyState===XMLHttpRequest.DONE){const err=new types_1.OTLPExporterError("Request Timeout");onError(err)}else{xhr.abort()}}),exporterTimeout);const sendWithRetry=(retries=util_1.DEFAULT_EXPORT_MAX_ATTEMPTS,minDelay=util_1.DEFAULT_EXPORT_INITIAL_BACKOFF)=>{xhr=new XMLHttpRequest;xhr.open("POST",url);const defaultHeaders={Accept:"application/json","Content-Type":"application/json"};Object.entries(Object.assign(Object.assign({},defaultHeaders),headers)).forEach((([k,v])=>{xhr.setRequestHeader(k,v)}));xhr.send(body);xhr.onreadystatechange=()=>{if(xhr.readyState===XMLHttpRequest.DONE&&reqIsDestroyed===false){if(xhr.status>=200&&xhr.status<=299){api_1.diag.debug("xhr success",body);onSuccess();clearTimeout(exporterTimer);clearTimeout(retryTimer)}else if(xhr.status&&(0,util_1.isExportRetryable)(xhr.status)&&retries>0){let retryTime;minDelay=util_1.DEFAULT_EXPORT_BACKOFF_MULTIPLIER*minDelay;if(xhr.getResponseHeader("Retry-After")){retryTime=(0,util_1.parseRetryAfterToMills)(xhr.getResponseHeader("Retry-After"))}else{retryTime=Math.round(Math.random()*(util_1.DEFAULT_EXPORT_MAX_BACKOFF-minDelay)+minDelay)}retryTimer=setTimeout((()=>{sendWithRetry(retries-1,minDelay)}),retryTime)}else{const error=new types_1.OTLPExporterError(`Failed to export with XHR (status: ${xhr.status})`,xhr.status);onError(error);clearTimeout(exporterTimer);clearTimeout(retryTimer)}}};xhr.onabort=()=>{if(reqIsDestroyed){const err=new types_1.OTLPExporterError("Request Timeout");onError(err)}clearTimeout(exporterTimer);clearTimeout(retryTimer)};xhr.onerror=()=>{if(reqIsDestroyed){const err=new types_1.OTLPExporterError("Request Timeout");onError(err)}clearTimeout(exporterTimer);clearTimeout(retryTimer)}};sendWithRetry()}exports.sendWithXhr=sendWithXhr},{"../../types":143,"../../util":144,"@opentelemetry/api":19}],143:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPExporterError=void 0;class OTLPExporterError extends Error{constructor(message,code,data){super(message);this.name="OTLPExporterError";this.data=data;this.code=code}}exports.OTLPExporterError=OTLPExporterError},{}],144:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.parseRetryAfterToMills=exports.isExportRetryable=exports.invalidTimeout=exports.configureExporterTimeout=exports.appendRootPathToUrlIfNeeded=exports.appendResourcePathToUrl=exports.parseHeaders=exports.DEFAULT_EXPORT_BACKOFF_MULTIPLIER=exports.DEFAULT_EXPORT_MAX_BACKOFF=exports.DEFAULT_EXPORT_INITIAL_BACKOFF=exports.DEFAULT_EXPORT_MAX_ATTEMPTS=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const DEFAULT_TRACE_TIMEOUT=1e4;exports.DEFAULT_EXPORT_MAX_ATTEMPTS=5;exports.DEFAULT_EXPORT_INITIAL_BACKOFF=1e3;exports.DEFAULT_EXPORT_MAX_BACKOFF=5e3;exports.DEFAULT_EXPORT_BACKOFF_MULTIPLIER=1.5;function parseHeaders(partialHeaders={}){const headers={};Object.entries(partialHeaders).forEach((([key,value])=>{if(typeof value!=="undefined"){headers[key]=String(value)}else{api_1.diag.warn(`Header "${key}" has wrong value and will be ignored`)}}));return headers}exports.parseHeaders=parseHeaders;function appendResourcePathToUrl(url,path){if(!url.endsWith("/")){url=url+"/"}return url+path}exports.appendResourcePathToUrl=appendResourcePathToUrl;function appendRootPathToUrlIfNeeded(url){try{const parsedUrl=new URL(url);if(parsedUrl.pathname===""){parsedUrl.pathname=parsedUrl.pathname+"/"}return parsedUrl.toString()}catch(_a){api_1.diag.warn(`Could not parse export URL: '${url}'`);return url}}exports.appendRootPathToUrlIfNeeded=appendRootPathToUrlIfNeeded;function configureExporterTimeout(timeoutMillis){if(typeof timeoutMillis==="number"){if(timeoutMillis<=0){return invalidTimeout(timeoutMillis,DEFAULT_TRACE_TIMEOUT)}return timeoutMillis}else{return getExporterTimeoutFromEnv()}}exports.configureExporterTimeout=configureExporterTimeout;function getExporterTimeoutFromEnv(){var _a;const definedTimeout=Number((_a=(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT)!==null&&_a!==void 0?_a:(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TIMEOUT);if(definedTimeout<=0){return invalidTimeout(definedTimeout,DEFAULT_TRACE_TIMEOUT)}else{return definedTimeout}}function invalidTimeout(timeout,defaultTimeout){api_1.diag.warn("Timeout must be greater than 0",timeout);return defaultTimeout}exports.invalidTimeout=invalidTimeout;function isExportRetryable(statusCode){const retryCodes=[429,502,503,504];return retryCodes.includes(statusCode)}exports.isExportRetryable=isExportRetryable;function parseRetryAfterToMills(retryAfter){if(retryAfter==null){return-1}const seconds=Number.parseInt(retryAfter,10);if(Number.isInteger(seconds)){return seconds>0?seconds*1e3:-1}const delay=new Date(retryAfter).getTime()-Date.now();if(delay>=0){return delay}return 0}exports.parseRetryAfterToMills=parseRetryAfterToMills},{"@opentelemetry/api":19,"@opentelemetry/core":108}],145:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.bufToHex=exports.hexToBuf=exports.toAnyValue=exports.toKeyValue=exports.toAttributes=void 0;function toAttributes(attributes){return Object.keys(attributes).map((key=>toKeyValue(key,attributes[key])))}exports.toAttributes=toAttributes;function toKeyValue(key,value){return{key:key,value:toAnyValue(value)}}exports.toKeyValue=toKeyValue;function toAnyValue(value){const t=typeof value;if(t==="string")return{stringValue:value};if(t==="number"){if(!Number.isInteger(value))return{doubleValue:value};return{intValue:value}}if(t==="boolean")return{boolValue:value};if(value instanceof Uint8Array)return{bytesValue:value};if(Array.isArray(value))return{arrayValue:{values:value.map(toAnyValue)}};if(t==="object"&&value!=null)return{kvlistValue:{values:Object.entries(value).map((([k,v])=>toKeyValue(k,v)))}};return{}}exports.toAnyValue=toAnyValue;function hexToBuf(hex){var _a;const ints=(_a=hex.match(/[\da-f]{2}/gi))===null||_a===void 0?void 0:_a.map((h=>parseInt(h,16)));return ints&&new Uint8Array(ints)}exports.hexToBuf=hexToBuf;function i2hex(i){return("0"+i.toString(16)).slice(-2)}function bufToHex(buf){if(buf==null||buf.length===0)return undefined;return Array.from(buf).map(i2hex).join("")}exports.bufToHex=bufToHex},{}],146:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],147:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});exports.createExportMetricsServiceRequest=exports.createExportTraceServiceRequest=void 0;__exportStar(require("./common/types"),exports);__exportStar(require("./metrics/types"),exports);__exportStar(require("./resource/types"),exports);__exportStar(require("./trace/types"),exports);var trace_1=require("./trace");Object.defineProperty(exports,"createExportTraceServiceRequest",{enumerable:true,get:function(){return trace_1.createExportTraceServiceRequest}});var metrics_1=require("./metrics");Object.defineProperty(exports,"createExportMetricsServiceRequest",{enumerable:true,get:function(){return metrics_1.createExportMetricsServiceRequest}})},{"./common/types":146,"./metrics":148,"./metrics/types":150,"./resource/types":151,"./trace":152,"./trace/types":154}],148:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createExportMetricsServiceRequest=void 0;const internal_1=require("./internal");function createExportMetricsServiceRequest(resourceMetrics){return{resourceMetrics:resourceMetrics.map((metrics=>(0,internal_1.toResourceMetrics)(metrics)))}}exports.createExportMetricsServiceRequest=createExportMetricsServiceRequest},{"./internal":149}],149:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toMetric=exports.toScopeMetrics=exports.toResourceMetrics=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const sdk_metrics_1=require("@opentelemetry/sdk-metrics");const internal_1=require("../common/internal");function toResourceMetrics(resourceMetrics){return{resource:{attributes:(0,internal_1.toAttributes)(resourceMetrics.resource.attributes),droppedAttributesCount:0},schemaUrl:undefined,scopeMetrics:toScopeMetrics(resourceMetrics.scopeMetrics)}}exports.toResourceMetrics=toResourceMetrics;function toScopeMetrics(scopeMetrics){return Array.from(scopeMetrics.map((metrics=>{const scopeMetrics={scope:{name:metrics.scope.name,version:metrics.scope.version},metrics:metrics.metrics.map((metricData=>toMetric(metricData))),schemaUrl:metrics.scope.schemaUrl};return scopeMetrics})))}exports.toScopeMetrics=toScopeMetrics;function toMetric(metricData){const out={name:metricData.descriptor.name,description:metricData.descriptor.description,unit:metricData.descriptor.unit};const aggregationTemporality=toAggregationTemporality(metricData.aggregationTemporality);if(metricData.dataPointType===sdk_metrics_1.DataPointType.SUM){out.sum={aggregationTemporality:aggregationTemporality,isMonotonic:metricData.isMonotonic,dataPoints:toSingularDataPoints(metricData)}}else if(metricData.dataPointType===sdk_metrics_1.DataPointType.GAUGE){out.gauge={dataPoints:toSingularDataPoints(metricData)}}else if(metricData.dataPointType===sdk_metrics_1.DataPointType.HISTOGRAM){out.histogram={aggregationTemporality:aggregationTemporality,dataPoints:toHistogramDataPoints(metricData)}}return out}exports.toMetric=toMetric;function toSingularDataPoint(dataPoint,valueType){const out={attributes:(0,internal_1.toAttributes)(dataPoint.attributes),startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.startTime),timeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.endTime)};if(valueType===api_1.ValueType.INT){out.asInt=dataPoint.value}else if(valueType===api_1.ValueType.DOUBLE){out.asDouble=dataPoint.value}return out}function toSingularDataPoints(metricData){return metricData.dataPoints.map((dataPoint=>toSingularDataPoint(dataPoint,metricData.descriptor.valueType)))}function toHistogramDataPoints(metricData){return metricData.dataPoints.map((dataPoint=>{const histogram=dataPoint.value;return{attributes:(0,internal_1.toAttributes)(dataPoint.attributes),bucketCounts:histogram.buckets.counts,explicitBounds:histogram.buckets.boundaries,count:histogram.count,sum:histogram.sum,min:histogram.min,max:histogram.max,startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.startTime),timeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.endTime)}}))}function toAggregationTemporality(temporality){if(temporality===sdk_metrics_1.AggregationTemporality.DELTA){return 1}if(temporality===sdk_metrics_1.AggregationTemporality.CUMULATIVE){return 2}return 0}},{"../common/internal":145,"@opentelemetry/api":19,"@opentelemetry/core":108,"@opentelemetry/sdk-metrics":323}],150:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],151:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],152:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createExportTraceServiceRequest=void 0;const internal_1=require("../common/internal");const internal_2=require("./internal");function createExportTraceServiceRequest(spans,useHex){return{resourceSpans:spanRecordsToResourceSpans(spans,useHex)}}exports.createExportTraceServiceRequest=createExportTraceServiceRequest;function createResourceMap(readableSpans){const resourceMap=new Map;for(const record of readableSpans){let ilmMap=resourceMap.get(record.resource);if(!ilmMap){ilmMap=new Map;resourceMap.set(record.resource,ilmMap)}const instrumentationLibraryKey=`${record.instrumentationLibrary.name}@${record.instrumentationLibrary.version||""}:${record.instrumentationLibrary.schemaUrl||""}`;let records=ilmMap.get(instrumentationLibraryKey);if(!records){records=[];ilmMap.set(instrumentationLibraryKey,records)}records.push(record)}return resourceMap}function spanRecordsToResourceSpans(readableSpans,useHex){const resourceMap=createResourceMap(readableSpans);const out=[];const entryIterator=resourceMap.entries();let entry=entryIterator.next();while(!entry.done){const[resource,ilmMap]=entry.value;const scopeResourceSpans=[];const ilmIterator=ilmMap.values();let ilmEntry=ilmIterator.next();while(!ilmEntry.done){const scopeSpans=ilmEntry.value;if(scopeSpans.length>0){const{name:name,version:version,schemaUrl:schemaUrl}=scopeSpans[0].instrumentationLibrary;const spans=scopeSpans.map((readableSpan=>(0,internal_2.sdkSpanToOtlpSpan)(readableSpan,useHex)));scopeResourceSpans.push({scope:{name:name,version:version},spans:spans,schemaUrl:schemaUrl})}ilmEntry=ilmIterator.next()}const transformedSpans={resource:{attributes:(0,internal_1.toAttributes)(resource.attributes),droppedAttributesCount:0},scopeSpans:scopeResourceSpans,schemaUrl:undefined};out.push(transformedSpans);entry=entryIterator.next()}return out}},{"../common/internal":145,"./internal":153}],153:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toOtlpSpanEvent=exports.toOtlpLink=exports.sdkSpanToOtlpSpan=void 0;const core_1=require("@opentelemetry/core");const internal_1=require("../common/internal");const core=require("@opentelemetry/core");function sdkSpanToOtlpSpan(span,useHex){var _a;const ctx=span.spanContext();const status=span.status;const parentSpanId=useHex?span.parentSpanId:span.parentSpanId!=null?core.hexToBase64(span.parentSpanId):undefined;return{traceId:useHex?ctx.traceId:core.hexToBase64(ctx.traceId),spanId:useHex?ctx.spanId:core.hexToBase64(ctx.spanId),parentSpanId:parentSpanId,traceState:(_a=ctx.traceState)===null||_a===void 0?void 0:_a.serialize(),name:span.name,kind:span.kind==null?0:span.kind+1,startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(span.startTime),endTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(span.endTime),attributes:(0,internal_1.toAttributes)(span.attributes),droppedAttributesCount:span.droppedAttributesCount,events:span.events.map(toOtlpSpanEvent),droppedEventsCount:span.droppedEventsCount,status:{code:status.code,message:status.message},links:span.links.map((link=>toOtlpLink(link,useHex))),droppedLinksCount:span.droppedLinksCount}}exports.sdkSpanToOtlpSpan=sdkSpanToOtlpSpan;function toOtlpLink(link,useHex){var _a;return{attributes:link.attributes?(0,internal_1.toAttributes)(link.attributes):[],spanId:useHex?link.context.spanId:core.hexToBase64(link.context.spanId),traceId:useHex?link.context.traceId:core.hexToBase64(link.context.traceId),traceState:(_a=link.context.traceState)===null||_a===void 0?void 0:_a.serialize(),droppedAttributesCount:link.droppedAttributesCount||0}}exports.toOtlpLink=toOtlpLink;function toOtlpSpanEvent(timedEvent){return{attributes:timedEvent.attributes?(0,internal_1.toAttributes)(timedEvent.attributes):[],name:timedEvent.name,timeUnixNano:(0,core_1.hrTimeToNanoseconds)(timedEvent.time),droppedAttributesCount:timedEvent.droppedAttributesCount||0}}exports.toOtlpSpanEvent=toOtlpSpanEvent},{"../common/internal":145,"@opentelemetry/core":108}],154:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ESpanKind=void 0;var ESpanKind;(function(ESpanKind){ESpanKind[ESpanKind["SPAN_KIND_UNSPECIFIED"]=0]="SPAN_KIND_UNSPECIFIED";ESpanKind[ESpanKind["SPAN_KIND_INTERNAL"]=1]="SPAN_KIND_INTERNAL";ESpanKind[ESpanKind["SPAN_KIND_SERVER"]=2]="SPAN_KIND_SERVER";ESpanKind[ESpanKind["SPAN_KIND_CLIENT"]=3]="SPAN_KIND_CLIENT";ESpanKind[ESpanKind["SPAN_KIND_PRODUCER"]=4]="SPAN_KIND_PRODUCER";ESpanKind[ESpanKind["SPAN_KIND_CONSUMER"]=5]="SPAN_KIND_CONSUMER"})(ESpanKind=exports.ESpanKind||(exports.ESpanKind={}))},{}],155:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./trace"),exports);__exportStar(require("./resource"),exports)},{"./resource":157,"./trace":159}],156:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TelemetrySdkLanguageValues=exports.OsTypeValues=exports.HostArchValues=exports.AwsEcsLaunchtypeValues=exports.CloudPlatformValues=exports.CloudProviderValues=exports.SemanticResourceAttributes=void 0;exports.SemanticResourceAttributes={CLOUD_PROVIDER:"cloud.provider",CLOUD_ACCOUNT_ID:"cloud.account.id",CLOUD_REGION:"cloud.region",CLOUD_AVAILABILITY_ZONE:"cloud.availability_zone",CLOUD_PLATFORM:"cloud.platform",AWS_ECS_CONTAINER_ARN:"aws.ecs.container.arn",AWS_ECS_CLUSTER_ARN:"aws.ecs.cluster.arn",AWS_ECS_LAUNCHTYPE:"aws.ecs.launchtype",AWS_ECS_TASK_ARN:"aws.ecs.task.arn",AWS_ECS_TASK_FAMILY:"aws.ecs.task.family",AWS_ECS_TASK_REVISION:"aws.ecs.task.revision",AWS_EKS_CLUSTER_ARN:"aws.eks.cluster.arn",AWS_LOG_GROUP_NAMES:"aws.log.group.names",AWS_LOG_GROUP_ARNS:"aws.log.group.arns",AWS_LOG_STREAM_NAMES:"aws.log.stream.names",AWS_LOG_STREAM_ARNS:"aws.log.stream.arns",CONTAINER_NAME:"container.name",CONTAINER_ID:"container.id",CONTAINER_RUNTIME:"container.runtime",CONTAINER_IMAGE_NAME:"container.image.name",CONTAINER_IMAGE_TAG:"container.image.tag",DEPLOYMENT_ENVIRONMENT:"deployment.environment",DEVICE_ID:"device.id",DEVICE_MODEL_IDENTIFIER:"device.model.identifier",DEVICE_MODEL_NAME:"device.model.name",FAAS_NAME:"faas.name",FAAS_ID:"faas.id",FAAS_VERSION:"faas.version",FAAS_INSTANCE:"faas.instance",FAAS_MAX_MEMORY:"faas.max_memory",HOST_ID:"host.id",HOST_NAME:"host.name",HOST_TYPE:"host.type",HOST_ARCH:"host.arch",HOST_IMAGE_NAME:"host.image.name",HOST_IMAGE_ID:"host.image.id",HOST_IMAGE_VERSION:"host.image.version",K8S_CLUSTER_NAME:"k8s.cluster.name",K8S_NODE_NAME:"k8s.node.name",K8S_NODE_UID:"k8s.node.uid",K8S_NAMESPACE_NAME:"k8s.namespace.name",K8S_POD_UID:"k8s.pod.uid",K8S_POD_NAME:"k8s.pod.name",K8S_CONTAINER_NAME:"k8s.container.name",K8S_REPLICASET_UID:"k8s.replicaset.uid",K8S_REPLICASET_NAME:"k8s.replicaset.name",K8S_DEPLOYMENT_UID:"k8s.deployment.uid",K8S_DEPLOYMENT_NAME:"k8s.deployment.name",K8S_STATEFULSET_UID:"k8s.statefulset.uid",K8S_STATEFULSET_NAME:"k8s.statefulset.name",K8S_DAEMONSET_UID:"k8s.daemonset.uid",K8S_DAEMONSET_NAME:"k8s.daemonset.name",K8S_JOB_UID:"k8s.job.uid",K8S_JOB_NAME:"k8s.job.name",K8S_CRONJOB_UID:"k8s.cronjob.uid",K8S_CRONJOB_NAME:"k8s.cronjob.name",OS_TYPE:"os.type",OS_DESCRIPTION:"os.description",OS_NAME:"os.name",OS_VERSION:"os.version",PROCESS_PID:"process.pid",PROCESS_EXECUTABLE_NAME:"process.executable.name",PROCESS_EXECUTABLE_PATH:"process.executable.path",PROCESS_COMMAND:"process.command",PROCESS_COMMAND_LINE:"process.command_line",PROCESS_COMMAND_ARGS:"process.command_args",PROCESS_OWNER:"process.owner",PROCESS_RUNTIME_NAME:"process.runtime.name",PROCESS_RUNTIME_VERSION:"process.runtime.version",PROCESS_RUNTIME_DESCRIPTION:"process.runtime.description",SERVICE_NAME:"service.name",SERVICE_NAMESPACE:"service.namespace",SERVICE_INSTANCE_ID:"service.instance.id",SERVICE_VERSION:"service.version",TELEMETRY_SDK_NAME:"telemetry.sdk.name",TELEMETRY_SDK_LANGUAGE:"telemetry.sdk.language",TELEMETRY_SDK_VERSION:"telemetry.sdk.version",TELEMETRY_AUTO_VERSION:"telemetry.auto.version",WEBENGINE_NAME:"webengine.name",WEBENGINE_VERSION:"webengine.version",WEBENGINE_DESCRIPTION:"webengine.description"};exports.CloudProviderValues={ALIBABA_CLOUD:"alibaba_cloud",AWS:"aws",AZURE:"azure",GCP:"gcp"};exports.CloudPlatformValues={ALIBABA_CLOUD_ECS:"alibaba_cloud_ecs",ALIBABA_CLOUD_FC:"alibaba_cloud_fc",AWS_EC2:"aws_ec2",AWS_ECS:"aws_ecs",AWS_EKS:"aws_eks",AWS_LAMBDA:"aws_lambda",AWS_ELASTIC_BEANSTALK:"aws_elastic_beanstalk",AZURE_VM:"azure_vm",AZURE_CONTAINER_INSTANCES:"azure_container_instances",AZURE_AKS:"azure_aks",AZURE_FUNCTIONS:"azure_functions",AZURE_APP_SERVICE:"azure_app_service",GCP_COMPUTE_ENGINE:"gcp_compute_engine",GCP_CLOUD_RUN:"gcp_cloud_run",GCP_KUBERNETES_ENGINE:"gcp_kubernetes_engine",GCP_CLOUD_FUNCTIONS:"gcp_cloud_functions",GCP_APP_ENGINE:"gcp_app_engine"};exports.AwsEcsLaunchtypeValues={EC2:"ec2",FARGATE:"fargate"};exports.HostArchValues={AMD64:"amd64",ARM32:"arm32",ARM64:"arm64",IA64:"ia64",PPC32:"ppc32",PPC64:"ppc64",X86:"x86"};exports.OsTypeValues={WINDOWS:"windows",LINUX:"linux",DARWIN:"darwin",FREEBSD:"freebsd",NETBSD:"netbsd",OPENBSD:"openbsd",DRAGONFLYBSD:"dragonflybsd",HPUX:"hpux",AIX:"aix",SOLARIS:"solaris",Z_OS:"z_os"};exports.TelemetrySdkLanguageValues={CPP:"cpp",DOTNET:"dotnet",ERLANG:"erlang",GO:"go",JAVA:"java",NODEJS:"nodejs",PHP:"php",PYTHON:"python",RUBY:"ruby",WEBJS:"webjs"}},{}],157:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./SemanticResourceAttributes"),exports)},{"./SemanticResourceAttributes":156}],158:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MessageTypeValues=exports.RpcGrpcStatusCodeValues=exports.MessagingOperationValues=exports.MessagingDestinationKindValues=exports.HttpFlavorValues=exports.NetHostConnectionSubtypeValues=exports.NetHostConnectionTypeValues=exports.NetTransportValues=exports.FaasInvokedProviderValues=exports.FaasDocumentOperationValues=exports.FaasTriggerValues=exports.DbCassandraConsistencyLevelValues=exports.DbSystemValues=exports.SemanticAttributes=void 0;exports.SemanticAttributes={AWS_LAMBDA_INVOKED_ARN:"aws.lambda.invoked_arn",DB_SYSTEM:"db.system",DB_CONNECTION_STRING:"db.connection_string",DB_USER:"db.user",DB_JDBC_DRIVER_CLASSNAME:"db.jdbc.driver_classname",DB_NAME:"db.name",DB_STATEMENT:"db.statement",DB_OPERATION:"db.operation",DB_MSSQL_INSTANCE_NAME:"db.mssql.instance_name",DB_CASSANDRA_KEYSPACE:"db.cassandra.keyspace",DB_CASSANDRA_PAGE_SIZE:"db.cassandra.page_size",DB_CASSANDRA_CONSISTENCY_LEVEL:"db.cassandra.consistency_level",DB_CASSANDRA_TABLE:"db.cassandra.table",DB_CASSANDRA_IDEMPOTENCE:"db.cassandra.idempotence",DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT:"db.cassandra.speculative_execution_count",DB_CASSANDRA_COORDINATOR_ID:"db.cassandra.coordinator.id",DB_CASSANDRA_COORDINATOR_DC:"db.cassandra.coordinator.dc",DB_HBASE_NAMESPACE:"db.hbase.namespace",DB_REDIS_DATABASE_INDEX:"db.redis.database_index",DB_MONGODB_COLLECTION:"db.mongodb.collection",DB_SQL_TABLE:"db.sql.table",EXCEPTION_TYPE:"exception.type",EXCEPTION_MESSAGE:"exception.message",EXCEPTION_STACKTRACE:"exception.stacktrace",EXCEPTION_ESCAPED:"exception.escaped",FAAS_TRIGGER:"faas.trigger",FAAS_EXECUTION:"faas.execution",FAAS_DOCUMENT_COLLECTION:"faas.document.collection",FAAS_DOCUMENT_OPERATION:"faas.document.operation",FAAS_DOCUMENT_TIME:"faas.document.time",FAAS_DOCUMENT_NAME:"faas.document.name",FAAS_TIME:"faas.time",FAAS_CRON:"faas.cron",FAAS_COLDSTART:"faas.coldstart",FAAS_INVOKED_NAME:"faas.invoked_name",FAAS_INVOKED_PROVIDER:"faas.invoked_provider",FAAS_INVOKED_REGION:"faas.invoked_region",NET_TRANSPORT:"net.transport",NET_PEER_IP:"net.peer.ip",NET_PEER_PORT:"net.peer.port",NET_PEER_NAME:"net.peer.name",NET_HOST_IP:"net.host.ip",NET_HOST_PORT:"net.host.port",NET_HOST_NAME:"net.host.name",NET_HOST_CONNECTION_TYPE:"net.host.connection.type",NET_HOST_CONNECTION_SUBTYPE:"net.host.connection.subtype",NET_HOST_CARRIER_NAME:"net.host.carrier.name",NET_HOST_CARRIER_MCC:"net.host.carrier.mcc",NET_HOST_CARRIER_MNC:"net.host.carrier.mnc",NET_HOST_CARRIER_ICC:"net.host.carrier.icc",PEER_SERVICE:"peer.service",ENDUSER_ID:"enduser.id",ENDUSER_ROLE:"enduser.role",ENDUSER_SCOPE:"enduser.scope",THREAD_ID:"thread.id",THREAD_NAME:"thread.name",CODE_FUNCTION:"code.function",CODE_NAMESPACE:"code.namespace",CODE_FILEPATH:"code.filepath",CODE_LINENO:"code.lineno",HTTP_METHOD:"http.method",HTTP_URL:"http.url",HTTP_TARGET:"http.target",HTTP_HOST:"http.host",HTTP_SCHEME:"http.scheme",HTTP_STATUS_CODE:"http.status_code",HTTP_FLAVOR:"http.flavor",HTTP_USER_AGENT:"http.user_agent",HTTP_REQUEST_CONTENT_LENGTH:"http.request_content_length",HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED:"http.request_content_length_uncompressed",HTTP_RESPONSE_CONTENT_LENGTH:"http.response_content_length",HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED:"http.response_content_length_uncompressed",HTTP_SERVER_NAME:"http.server_name",HTTP_ROUTE:"http.route",HTTP_CLIENT_IP:"http.client_ip",AWS_DYNAMODB_TABLE_NAMES:"aws.dynamodb.table_names",AWS_DYNAMODB_CONSUMED_CAPACITY:"aws.dynamodb.consumed_capacity",AWS_DYNAMODB_ITEM_COLLECTION_METRICS:"aws.dynamodb.item_collection_metrics",AWS_DYNAMODB_PROVISIONED_READ_CAPACITY:"aws.dynamodb.provisioned_read_capacity",AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY:"aws.dynamodb.provisioned_write_capacity",AWS_DYNAMODB_CONSISTENT_READ:"aws.dynamodb.consistent_read",AWS_DYNAMODB_PROJECTION:"aws.dynamodb.projection",AWS_DYNAMODB_LIMIT:"aws.dynamodb.limit",AWS_DYNAMODB_ATTRIBUTES_TO_GET:"aws.dynamodb.attributes_to_get",AWS_DYNAMODB_INDEX_NAME:"aws.dynamodb.index_name",AWS_DYNAMODB_SELECT:"aws.dynamodb.select",AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES:"aws.dynamodb.global_secondary_indexes",AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES:"aws.dynamodb.local_secondary_indexes",AWS_DYNAMODB_EXCLUSIVE_START_TABLE:"aws.dynamodb.exclusive_start_table",AWS_DYNAMODB_TABLE_COUNT:"aws.dynamodb.table_count",AWS_DYNAMODB_SCAN_FORWARD:"aws.dynamodb.scan_forward",AWS_DYNAMODB_SEGMENT:"aws.dynamodb.segment",AWS_DYNAMODB_TOTAL_SEGMENTS:"aws.dynamodb.total_segments",AWS_DYNAMODB_COUNT:"aws.dynamodb.count",AWS_DYNAMODB_SCANNED_COUNT:"aws.dynamodb.scanned_count",AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS:"aws.dynamodb.attribute_definitions",AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES:"aws.dynamodb.global_secondary_index_updates",MESSAGING_SYSTEM:"messaging.system",MESSAGING_DESTINATION:"messaging.destination",MESSAGING_DESTINATION_KIND:"messaging.destination_kind",MESSAGING_TEMP_DESTINATION:"messaging.temp_destination",MESSAGING_PROTOCOL:"messaging.protocol",MESSAGING_PROTOCOL_VERSION:"messaging.protocol_version",MESSAGING_URL:"messaging.url",MESSAGING_MESSAGE_ID:"messaging.message_id",MESSAGING_CONVERSATION_ID:"messaging.conversation_id",MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES:"messaging.message_payload_size_bytes",MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES:"messaging.message_payload_compressed_size_bytes",MESSAGING_OPERATION:"messaging.operation",MESSAGING_CONSUMER_ID:"messaging.consumer_id",MESSAGING_RABBITMQ_ROUTING_KEY:"messaging.rabbitmq.routing_key",MESSAGING_KAFKA_MESSAGE_KEY:"messaging.kafka.message_key",MESSAGING_KAFKA_CONSUMER_GROUP:"messaging.kafka.consumer_group",MESSAGING_KAFKA_CLIENT_ID:"messaging.kafka.client_id",MESSAGING_KAFKA_PARTITION:"messaging.kafka.partition",MESSAGING_KAFKA_TOMBSTONE:"messaging.kafka.tombstone",RPC_SYSTEM:"rpc.system",RPC_SERVICE:"rpc.service",RPC_METHOD:"rpc.method",RPC_GRPC_STATUS_CODE:"rpc.grpc.status_code",RPC_JSONRPC_VERSION:"rpc.jsonrpc.version",RPC_JSONRPC_REQUEST_ID:"rpc.jsonrpc.request_id",RPC_JSONRPC_ERROR_CODE:"rpc.jsonrpc.error_code",RPC_JSONRPC_ERROR_MESSAGE:"rpc.jsonrpc.error_message",MESSAGE_TYPE:"message.type",MESSAGE_ID:"message.id",MESSAGE_COMPRESSED_SIZE:"message.compressed_size",MESSAGE_UNCOMPRESSED_SIZE:"message.uncompressed_size"};exports.DbSystemValues={OTHER_SQL:"other_sql",MSSQL:"mssql",MYSQL:"mysql",ORACLE:"oracle",DB2:"db2",POSTGRESQL:"postgresql",REDSHIFT:"redshift",HIVE:"hive",CLOUDSCAPE:"cloudscape",HSQLDB:"hsqldb",PROGRESS:"progress",MAXDB:"maxdb",HANADB:"hanadb",INGRES:"ingres",FIRSTSQL:"firstsql",EDB:"edb",CACHE:"cache",ADABAS:"adabas",FIREBIRD:"firebird",DERBY:"derby",FILEMAKER:"filemaker",INFORMIX:"informix",INSTANTDB:"instantdb",INTERBASE:"interbase",MARIADB:"mariadb",NETEZZA:"netezza",PERVASIVE:"pervasive",POINTBASE:"pointbase",SQLITE:"sqlite",SYBASE:"sybase",TERADATA:"teradata",VERTICA:"vertica",H2:"h2",COLDFUSION:"coldfusion",CASSANDRA:"cassandra",HBASE:"hbase",MONGODB:"mongodb",REDIS:"redis",COUCHBASE:"couchbase",COUCHDB:"couchdb",COSMOSDB:"cosmosdb",DYNAMODB:"dynamodb",NEO4J:"neo4j",GEODE:"geode",ELASTICSEARCH:"elasticsearch",MEMCACHED:"memcached",COCKROACHDB:"cockroachdb"};exports.DbCassandraConsistencyLevelValues={ALL:"all",EACH_QUORUM:"each_quorum",QUORUM:"quorum",LOCAL_QUORUM:"local_quorum",ONE:"one",TWO:"two",THREE:"three",LOCAL_ONE:"local_one",ANY:"any",SERIAL:"serial",LOCAL_SERIAL:"local_serial"};exports.FaasTriggerValues={DATASOURCE:"datasource",HTTP:"http",PUBSUB:"pubsub",TIMER:"timer",OTHER:"other"};exports.FaasDocumentOperationValues={INSERT:"insert",EDIT:"edit",DELETE:"delete"};exports.FaasInvokedProviderValues={ALIBABA_CLOUD:"alibaba_cloud",AWS:"aws",AZURE:"azure",GCP:"gcp"};exports.NetTransportValues={IP_TCP:"ip_tcp",IP_UDP:"ip_udp",IP:"ip",UNIX:"unix",PIPE:"pipe",INPROC:"inproc",OTHER:"other"};exports.NetHostConnectionTypeValues={WIFI:"wifi",WIRED:"wired",CELL:"cell",UNAVAILABLE:"unavailable",UNKNOWN:"unknown"};exports.NetHostConnectionSubtypeValues={GPRS:"gprs",EDGE:"edge",UMTS:"umts",CDMA:"cdma",EVDO_0:"evdo_0",EVDO_A:"evdo_a",CDMA2000_1XRTT:"cdma2000_1xrtt",HSDPA:"hsdpa",HSUPA:"hsupa",HSPA:"hspa",IDEN:"iden",EVDO_B:"evdo_b",LTE:"lte",EHRPD:"ehrpd",HSPAP:"hspap",GSM:"gsm",TD_SCDMA:"td_scdma",IWLAN:"iwlan",NR:"nr",NRNSA:"nrnsa",LTE_CA:"lte_ca"};exports.HttpFlavorValues={HTTP_1_0:"1.0",HTTP_1_1:"1.1",HTTP_2_0:"2.0",SPDY:"SPDY",QUIC:"QUIC"};exports.MessagingDestinationKindValues={QUEUE:"queue",TOPIC:"topic"};exports.MessagingOperationValues={RECEIVE:"receive",PROCESS:"process"};exports.RpcGrpcStatusCodeValues={OK:0,CANCELLED:1,UNKNOWN:2,INVALID_ARGUMENT:3,DEADLINE_EXCEEDED:4,NOT_FOUND:5,ALREADY_EXISTS:6,PERMISSION_DENIED:7,RESOURCE_EXHAUSTED:8,FAILED_PRECONDITION:9,ABORTED:10,OUT_OF_RANGE:11,UNIMPLEMENTED:12,INTERNAL:13,UNAVAILABLE:14,DATA_LOSS:15,UNAUTHENTICATED:16};exports.MessageTypeValues={SENT:"SENT",RECEIVED:"RECEIVED"}},{}],159:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./SemanticAttributes"),exports)},{"./SemanticAttributes":158}],160:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./platform"),exports)},{"./platform":162}],161:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPTraceExporter=void 0;const core_1=require("@opentelemetry/core");const otlp_exporter_base_1=require("@opentelemetry/otlp-exporter-base");const otlp_transformer_1=require("@opentelemetry/otlp-transformer");const DEFAULT_COLLECTOR_RESOURCE_PATH="v1/traces";const DEFAULT_COLLECTOR_URL=`http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;class OTLPTraceExporter extends otlp_exporter_base_1.OTLPExporterBrowserBase{constructor(config={}){super(config);this._headers=Object.assign(this._headers,core_1.baggageUtils.parseKeyPairsIntoRecord((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TRACES_HEADERS))}convert(spans){return(0,otlp_transformer_1.createExportTraceServiceRequest)(spans,true)}getDefaultUrl(config){return typeof config.url==="string"?config.url:(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT.length>0?(0,otlp_exporter_base_1.appendRootPathToUrlIfNeeded)((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TRACES_ENDPOINT):(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_ENDPOINT.length>0?(0,otlp_exporter_base_1.appendResourcePathToUrl)((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_ENDPOINT,DEFAULT_COLLECTOR_RESOURCE_PATH):DEFAULT_COLLECTOR_URL}}exports.OTLPTraceExporter=OTLPTraceExporter},{"@opentelemetry/core":63,"@opentelemetry/otlp-exporter-base":164,"@opentelemetry/otlp-transformer":172}],162:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./OTLPTraceExporter"),exports)},{"./OTLPTraceExporter":161}],163:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPExporterBase=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const util_1=require("./util");class OTLPExporterBase{constructor(config={}){this._sendingPromises=[];this.url=this.getDefaultUrl(config);if(typeof config.hostname==="string"){this.hostname=config.hostname}this.shutdown=this.shutdown.bind(this);this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this);this._concurrencyLimit=typeof config.concurrencyLimit==="number"?config.concurrencyLimit:Infinity;this.timeoutMillis=(0,util_1.configureExporterTimeout)(config.timeoutMillis);this.onInit(config)}export(items,resultCallback){if(this._shutdownOnce.isCalled){resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Exporter has been shutdown")});return}if(this._sendingPromises.length>=this._concurrencyLimit){resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Concurrent export limit reached")});return}this._export(items).then((()=>{resultCallback({code:core_1.ExportResultCode.SUCCESS})})).catch((error=>{resultCallback({code:core_1.ExportResultCode.FAILED,error:error})}))}_export(items){return new Promise(((resolve,reject)=>{try{api_1.diag.debug("items to be sent",items);this.send(items,resolve,reject)}catch(e){reject(e)}}))}shutdown(){return this._shutdownOnce.call()}_shutdown(){api_1.diag.debug("shutdown started");this.onShutdown();return Promise.all(this._sendingPromises).then((()=>{}))}}exports.OTLPExporterBase=OTLPExporterBase},{"./util":169,"@opentelemetry/api":19,"@opentelemetry/core":63}],164:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./OTLPExporterBase"),exports);__exportStar(require("./platform"),exports);__exportStar(require("./types"),exports);__exportStar(require("./util"),exports)},{"./OTLPExporterBase":163,"./platform":166,"./types":168,"./util":169}],165:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.OTLPExporterBrowserBase=void 0;const OTLPExporterBase_1=require("../../OTLPExporterBase");const util_1=require("../../util");const util_2=require("./util");const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class OTLPExporterBrowserBase extends OTLPExporterBase_1.OTLPExporterBase{constructor(config={}){super(config);this._useXHR=false;this._useXHR=!!config.headers||typeof navigator.sendBeacon!=="function";if(this._useXHR){this._headers=Object.assign({},(0,util_1.parseHeaders)(config.headers),core_1.baggageUtils.parseKeyPairsIntoRecord((0,core_1.getEnv)().OTEL_EXPORTER_OTLP_HEADERS))}else{this._headers={}}}onInit(){window.addEventListener("unload",this.shutdown)}onShutdown(){window.removeEventListener("unload",this.shutdown)}send(items,onSuccess,onError){if(this._shutdownOnce.isCalled){api_1.diag.debug("Shutdown already started. Cannot send objects");return}const serviceRequest=this.convert(items);const body=JSON.stringify(serviceRequest);const promise=new Promise(((resolve,reject)=>{if(this._useXHR){(0,util_2.sendWithXhr)(body,this.url,this._headers,this.timeoutMillis,resolve,reject)}else{(0,util_2.sendWithBeacon)(body,this.url,{type:"application/json"},resolve,reject)}})).then(onSuccess,onError);this._sendingPromises.push(promise);const popPromise=()=>{const index=this._sendingPromises.indexOf(promise);this._sendingPromises.splice(index,1)};promise.then(popPromise,popPromise)}}exports.OTLPExporterBrowserBase=OTLPExporterBrowserBase},{"../../OTLPExporterBase":163,"../../util":169,"./util":167,"@opentelemetry/api":19,"@opentelemetry/core":63}],166:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./OTLPExporterBrowserBase"),exports)},{"./OTLPExporterBrowserBase":165}],167:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sendWithXhr=exports.sendWithBeacon=void 0;const api_1=require("@opentelemetry/api");const types_1=require("../../types");function sendWithBeacon(body,url,blobPropertyBag,onSuccess,onError){if(navigator.sendBeacon(url,new Blob([body],blobPropertyBag))){api_1.diag.debug("sendBeacon - can send",body);onSuccess()}else{const error=new types_1.OTLPExporterError(`sendBeacon - cannot send ${body}`);onError(error)}}exports.sendWithBeacon=sendWithBeacon;function sendWithXhr(body,url,headers,exporterTimeout,onSuccess,onError){let reqIsDestroyed;const exporterTimer=setTimeout((()=>{reqIsDestroyed=true;xhr.abort()}),exporterTimeout);const xhr=new XMLHttpRequest;xhr.open("POST",url);const defaultHeaders={Accept:"application/json","Content-Type":"application/json"};Object.entries(Object.assign(Object.assign({},defaultHeaders),headers)).forEach((([k,v])=>{xhr.setRequestHeader(k,v)}));xhr.send(body);xhr.onreadystatechange=()=>{if(xhr.readyState===XMLHttpRequest.DONE){if(xhr.status>=200&&xhr.status<=299){clearTimeout(exporterTimer);api_1.diag.debug("xhr success",body);onSuccess()}else if(reqIsDestroyed){const error=new types_1.OTLPExporterError("Request Timeout",xhr.status);onError(error)}else{const error=new types_1.OTLPExporterError(`Failed to export with XHR (status: ${xhr.status})`,xhr.status);clearTimeout(exporterTimer);onError(error)}}}}exports.sendWithXhr=sendWithXhr},{"../../types":168,"@opentelemetry/api":19}],168:[function(require,module,exports){arguments[4][143][0].apply(exports,arguments)},{dup:143}],169:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.invalidTimeout=exports.configureExporterTimeout=exports.appendRootPathToUrlIfNeeded=exports.appendResourcePathToUrl=exports.parseHeaders=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const DEFAULT_TRACE_TIMEOUT=1e4;function parseHeaders(partialHeaders={}){const headers={};Object.entries(partialHeaders).forEach((([key,value])=>{if(typeof value!=="undefined"){headers[key]=String(value)}else{api_1.diag.warn(`Header "${key}" has wrong value and will be ignored`)}}));return headers}exports.parseHeaders=parseHeaders;function appendResourcePathToUrl(url,path){if(!url.endsWith("/")){url=url+"/"}return url+path}exports.appendResourcePathToUrl=appendResourcePathToUrl;function appendRootPathToUrlIfNeeded(url){try{const parsedUrl=new URL(url);if(parsedUrl.pathname===""){parsedUrl.pathname=parsedUrl.pathname+"/"}return parsedUrl.toString()}catch(_a){api_1.diag.warn(`Could not parse export URL: '${url}'`);return url}}exports.appendRootPathToUrlIfNeeded=appendRootPathToUrlIfNeeded;function configureExporterTimeout(timeoutMillis){if(typeof timeoutMillis==="number"){if(timeoutMillis<=0){return invalidTimeout(timeoutMillis,DEFAULT_TRACE_TIMEOUT)}return timeoutMillis}else{return getExporterTimeoutFromEnv()}}exports.configureExporterTimeout=configureExporterTimeout;function getExporterTimeoutFromEnv(){var _a;const definedTimeout=Number((_a=(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT)!==null&&_a!==void 0?_a:(0,core_1.getEnv)().OTEL_EXPORTER_OTLP_TIMEOUT);if(definedTimeout<=0){return invalidTimeout(definedTimeout,DEFAULT_TRACE_TIMEOUT)}else{return definedTimeout}}function invalidTimeout(timeout,defaultTimeout){api_1.diag.warn("Timeout must be greater than 0",timeout);return defaultTimeout}exports.invalidTimeout=invalidTimeout},{"@opentelemetry/api":19,"@opentelemetry/core":63}],170:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.bufToHex=exports.hexToBuf=exports.toAnyValue=exports.toKeyValue=exports.toAttributes=void 0;function toAttributes(attributes){return Object.keys(attributes).map((key=>toKeyValue(key,attributes[key])))}exports.toAttributes=toAttributes;function toKeyValue(key,value){return{key:key,value:toAnyValue(value)}}exports.toKeyValue=toKeyValue;function toAnyValue(value){const t=typeof value;if(t==="string")return{stringValue:value};if(t==="number"){if(!Number.isInteger(value))return{doubleValue:value};return{intValue:value}}if(t==="boolean")return{boolValue:value};if(value instanceof Uint8Array)return{bytesValue:value};if(Array.isArray(value))return{arrayValue:{values:value.map(toAnyValue)}};if(t==="object"&&value!=null)return{kvlistValue:{values:Object.entries(value).map((([k,v])=>toKeyValue(k,v)))}};return{}}exports.toAnyValue=toAnyValue;function hexToBuf(hex){var _a;const ints=(_a=hex.match(/[\da-f]{2}/gi))===null||_a===void 0?void 0:_a.map((h=>parseInt(h,16)));return ints&&new Uint8Array(ints)}exports.hexToBuf=hexToBuf;function i2hex(i){return("0"+i.toString(16)).slice(-2)}function bufToHex(buf){if(buf==null||buf.length===0)return undefined;return Array.from(buf).map(i2hex).join("")}exports.bufToHex=bufToHex},{}],171:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],172:[function(require,module,exports){arguments[4][147][0].apply(exports,arguments)},{"./common/types":171,"./metrics":173,"./metrics/types":175,"./resource/types":176,"./trace":177,"./trace/types":179,dup:147}],173:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createExportMetricsServiceRequest=void 0;const internal_1=require("./internal");function createExportMetricsServiceRequest(resourceMetrics){return{resourceMetrics:resourceMetrics.map((metrics=>(0,internal_1.toResourceMetrics)(metrics)))}}exports.createExportMetricsServiceRequest=createExportMetricsServiceRequest},{"./internal":174}],174:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toMetric=exports.toScopeMetrics=exports.toResourceMetrics=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const sdk_metrics_1=require("@opentelemetry/sdk-metrics");const internal_1=require("../common/internal");function toResourceMetrics(resourceMetrics){return{resource:{attributes:(0,internal_1.toAttributes)(resourceMetrics.resource.attributes),droppedAttributesCount:0},schemaUrl:undefined,scopeMetrics:toScopeMetrics(resourceMetrics.scopeMetrics)}}exports.toResourceMetrics=toResourceMetrics;function toScopeMetrics(scopeMetrics){return Array.from(scopeMetrics.map((metrics=>{const scopeMetrics={scope:{name:metrics.scope.name,version:metrics.scope.version},metrics:metrics.metrics.map((metricData=>toMetric(metricData))),schemaUrl:metrics.scope.schemaUrl};return scopeMetrics})))}exports.toScopeMetrics=toScopeMetrics;function toMetric(metricData){const out={name:metricData.descriptor.name,description:metricData.descriptor.description,unit:metricData.descriptor.unit};const aggregationTemporality=toAggregationTemporality(metricData.aggregationTemporality);if(metricData.dataPointType===sdk_metrics_1.DataPointType.SUM){out.sum={aggregationTemporality:aggregationTemporality,isMonotonic:metricData.isMonotonic,dataPoints:toSingularDataPoints(metricData)}}else if(metricData.dataPointType===sdk_metrics_1.DataPointType.GAUGE){out.gauge={dataPoints:toSingularDataPoints(metricData)}}else if(metricData.dataPointType===sdk_metrics_1.DataPointType.HISTOGRAM){out.histogram={aggregationTemporality:aggregationTemporality,dataPoints:toHistogramDataPoints(metricData)}}return out}exports.toMetric=toMetric;function toSingularDataPoint(dataPoint,valueType){const out={attributes:(0,internal_1.toAttributes)(dataPoint.attributes),startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.startTime),timeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.endTime)};if(valueType===api_1.ValueType.INT){out.asInt=dataPoint.value}else if(valueType===api_1.ValueType.DOUBLE){out.asDouble=dataPoint.value}return out}function toSingularDataPoints(metricData){return metricData.dataPoints.map((dataPoint=>toSingularDataPoint(dataPoint,metricData.descriptor.valueType)))}function toHistogramDataPoints(metricData){return metricData.dataPoints.map((dataPoint=>{const histogram=dataPoint.value;return{attributes:(0,internal_1.toAttributes)(dataPoint.attributes),bucketCounts:histogram.buckets.counts,explicitBounds:histogram.buckets.boundaries,count:histogram.count,sum:histogram.sum,min:histogram.min,max:histogram.max,startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.startTime),timeUnixNano:(0,core_1.hrTimeToNanoseconds)(dataPoint.endTime)}}))}function toAggregationTemporality(temporality){if(temporality===sdk_metrics_1.AggregationTemporality.DELTA){return 1}if(temporality===sdk_metrics_1.AggregationTemporality.CUMULATIVE){return 2}return 0}},{"../common/internal":170,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/sdk-metrics":198}],175:[function(require,module,exports){arguments[4][150][0].apply(exports,arguments)},{dup:150}],176:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],177:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createExportTraceServiceRequest=void 0;const internal_1=require("../common/internal");const internal_2=require("./internal");function createExportTraceServiceRequest(spans,useHex){return{resourceSpans:spanRecordsToResourceSpans(spans,useHex)}}exports.createExportTraceServiceRequest=createExportTraceServiceRequest;function createResourceMap(readableSpans){const resourceMap=new Map;for(const record of readableSpans){let ilmMap=resourceMap.get(record.resource);if(!ilmMap){ilmMap=new Map;resourceMap.set(record.resource,ilmMap)}const instrumentationLibraryKey=`${record.instrumentationLibrary.name}@${record.instrumentationLibrary.version||""}:${record.instrumentationLibrary.schemaUrl||""}`;let records=ilmMap.get(instrumentationLibraryKey);if(!records){records=[];ilmMap.set(instrumentationLibraryKey,records)}records.push(record)}return resourceMap}function spanRecordsToResourceSpans(readableSpans,useHex){const resourceMap=createResourceMap(readableSpans);const out=[];const entryIterator=resourceMap.entries();let entry=entryIterator.next();while(!entry.done){const[resource,ilmMap]=entry.value;const scopeResourceSpans=[];const ilmIterator=ilmMap.values();let ilmEntry=ilmIterator.next();while(!ilmEntry.done){const scopeSpans=ilmEntry.value;if(scopeSpans.length>0){const{name:name,version:version,schemaUrl:schemaUrl}=scopeSpans[0].instrumentationLibrary;const spans=scopeSpans.map((readableSpan=>(0,internal_2.sdkSpanToOtlpSpan)(readableSpan,useHex)));scopeResourceSpans.push({scope:{name:name,version:version},spans:spans,schemaUrl:schemaUrl})}ilmEntry=ilmIterator.next()}const transformedSpans={resource:{attributes:(0,internal_1.toAttributes)(resource.attributes),droppedAttributesCount:0},scopeSpans:scopeResourceSpans,schemaUrl:undefined};out.push(transformedSpans);entry=entryIterator.next()}return out}},{"../common/internal":170,"./internal":178}],178:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.toOtlpSpanEvent=exports.toOtlpLink=exports.sdkSpanToOtlpSpan=void 0;const core_1=require("@opentelemetry/core");const internal_1=require("../common/internal");const core=require("@opentelemetry/core");function sdkSpanToOtlpSpan(span,useHex){const ctx=span.spanContext();const status=span.status;const parentSpanId=useHex?span.parentSpanId:span.parentSpanId!=null?core.hexToBase64(span.parentSpanId):undefined;return{traceId:useHex?ctx.traceId:core.hexToBase64(ctx.traceId),spanId:useHex?ctx.spanId:core.hexToBase64(ctx.spanId),parentSpanId:parentSpanId,name:span.name,kind:span.kind==null?0:span.kind+1,startTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(span.startTime),endTimeUnixNano:(0,core_1.hrTimeToNanoseconds)(span.endTime),attributes:(0,internal_1.toAttributes)(span.attributes),droppedAttributesCount:0,events:span.events.map(toOtlpSpanEvent),droppedEventsCount:0,status:{code:status.code,message:status.message},links:span.links.map((link=>toOtlpLink(link,useHex))),droppedLinksCount:0}}exports.sdkSpanToOtlpSpan=sdkSpanToOtlpSpan;function toOtlpLink(link,useHex){return{attributes:link.attributes?(0,internal_1.toAttributes)(link.attributes):[],spanId:useHex?link.context.spanId:core.hexToBase64(link.context.spanId),traceId:useHex?link.context.traceId:core.hexToBase64(link.context.traceId),droppedAttributesCount:0}}exports.toOtlpLink=toOtlpLink;function toOtlpSpanEvent(timedEvent){return{attributes:timedEvent.attributes?(0,internal_1.toAttributes)(timedEvent.attributes):[],name:timedEvent.name,timeUnixNano:(0,core_1.hrTimeToNanoseconds)(timedEvent.time),droppedAttributesCount:0}}exports.toOtlpSpanEvent=toOtlpSpanEvent},{"../common/internal":170,"@opentelemetry/core":63}],179:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ESpanKind=void 0;var ESpanKind;(function(ESpanKind){ESpanKind[ESpanKind["SPAN_KIND_UNSPECIFIED"]=0]="SPAN_KIND_UNSPECIFIED";ESpanKind[ESpanKind["SPAN_KIND_INTERNAL"]=1]="SPAN_KIND_INTERNAL";ESpanKind[ESpanKind["SPAN_KIND_SERVER"]=2]="SPAN_KIND_SERVER";ESpanKind[ESpanKind["SPAN_KIND_CLIENT"]=3]="SPAN_KIND_CLIENT";ESpanKind[ESpanKind["SPAN_KIND_PRODUCER"]=4]="SPAN_KIND_PRODUCER";ESpanKind[ESpanKind["SPAN_KIND_CONSUMER"]=5]="SPAN_KIND_CONSUMER"})(ESpanKind=exports.ESpanKind||(exports.ESpanKind={}))},{}],180:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isDescriptorCompatibleWith=exports.createInstrumentDescriptorWithView=exports.createInstrumentDescriptor=exports.InstrumentType=void 0;const api_1=require("@opentelemetry/api");var InstrumentType;(function(InstrumentType){InstrumentType["COUNTER"]="COUNTER";InstrumentType["HISTOGRAM"]="HISTOGRAM";InstrumentType["UP_DOWN_COUNTER"]="UP_DOWN_COUNTER";InstrumentType["OBSERVABLE_COUNTER"]="OBSERVABLE_COUNTER";InstrumentType["OBSERVABLE_GAUGE"]="OBSERVABLE_GAUGE";InstrumentType["OBSERVABLE_UP_DOWN_COUNTER"]="OBSERVABLE_UP_DOWN_COUNTER"})(InstrumentType=exports.InstrumentType||(exports.InstrumentType={}));function createInstrumentDescriptor(name,type,options){var _a,_b,_c;return{name:name,type:type,description:(_a=options===null||options===void 0?void 0:options.description)!==null&&_a!==void 0?_a:"",unit:(_b=options===null||options===void 0?void 0:options.unit)!==null&&_b!==void 0?_b:"",valueType:(_c=options===null||options===void 0?void 0:options.valueType)!==null&&_c!==void 0?_c:api_1.ValueType.DOUBLE}}exports.createInstrumentDescriptor=createInstrumentDescriptor;function createInstrumentDescriptorWithView(view,instrument){var _a,_b;return{name:(_a=view.name)!==null&&_a!==void 0?_a:instrument.name,description:(_b=view.description)!==null&&_b!==void 0?_b:instrument.description,type:instrument.type,unit:instrument.unit,valueType:instrument.valueType}}exports.createInstrumentDescriptorWithView=createInstrumentDescriptorWithView;function isDescriptorCompatibleWith(descriptor,otherDescriptor){return descriptor.name===otherDescriptor.name&&descriptor.unit===otherDescriptor.unit&&descriptor.type===otherDescriptor.type&&descriptor.valueType===otherDescriptor.valueType}exports.isDescriptorCompatibleWith=isDescriptorCompatibleWith},{"@opentelemetry/api":19}],181:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isObservableInstrument=exports.ObservableUpDownCounterInstrument=exports.ObservableGaugeInstrument=exports.ObservableCounterInstrument=exports.ObservableInstrument=exports.HistogramInstrument=exports.CounterInstrument=exports.UpDownCounterInstrument=exports.SyncInstrument=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class SyncInstrument{constructor(_writableMetricStorage,_descriptor){this._writableMetricStorage=_writableMetricStorage;this._descriptor=_descriptor}_record(value,attributes={},context=api_1.context.active()){if(this._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}this._writableMetricStorage.record(value,attributes,context,(0,core_1.hrTime)())}}exports.SyncInstrument=SyncInstrument;class UpDownCounterInstrument extends SyncInstrument{add(value,attributes,ctx){this._record(value,attributes,ctx)}}exports.UpDownCounterInstrument=UpDownCounterInstrument;class CounterInstrument extends SyncInstrument{add(value,attributes,ctx){if(value<0){api_1.diag.warn(`negative value provided to counter ${this._descriptor.name}: ${value}`);return}this._record(value,attributes,ctx)}}exports.CounterInstrument=CounterInstrument;class HistogramInstrument extends SyncInstrument{record(value,attributes,ctx){if(value<0){api_1.diag.warn(`negative value provided to histogram ${this._descriptor.name}: ${value}`);return}this._record(value,attributes,ctx)}}exports.HistogramInstrument=HistogramInstrument;class ObservableInstrument{constructor(descriptor,metricStorages,_observableRegistry){this._observableRegistry=_observableRegistry;this._descriptor=descriptor;this._metricStorages=metricStorages}addCallback(callback){this._observableRegistry.addCallback(callback,this)}removeCallback(callback){this._observableRegistry.removeCallback(callback,this)}}exports.ObservableInstrument=ObservableInstrument;class ObservableCounterInstrument extends ObservableInstrument{}exports.ObservableCounterInstrument=ObservableCounterInstrument;class ObservableGaugeInstrument extends ObservableInstrument{}exports.ObservableGaugeInstrument=ObservableGaugeInstrument;class ObservableUpDownCounterInstrument extends ObservableInstrument{}exports.ObservableUpDownCounterInstrument=ObservableUpDownCounterInstrument;function isObservableInstrument(it){return it instanceof ObservableInstrument}exports.isObservableInstrument=isObservableInstrument},{"@opentelemetry/api":19,"@opentelemetry/core":63}],182:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Meter=void 0;const InstrumentDescriptor_1=require("./InstrumentDescriptor");const Instruments_1=require("./Instruments");class Meter{constructor(_meterSharedState){this._meterSharedState=_meterSharedState}createHistogram(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.HISTOGRAM,options);const storage=this._meterSharedState.registerMetricStorage(descriptor);return new Instruments_1.HistogramInstrument(storage,descriptor)}createCounter(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.COUNTER,options);const storage=this._meterSharedState.registerMetricStorage(descriptor);return new Instruments_1.CounterInstrument(storage,descriptor)}createUpDownCounter(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.UP_DOWN_COUNTER,options);const storage=this._meterSharedState.registerMetricStorage(descriptor);return new Instruments_1.UpDownCounterInstrument(storage,descriptor)}createObservableGauge(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.OBSERVABLE_GAUGE,options);const storages=this._meterSharedState.registerAsyncMetricStorage(descriptor);return new Instruments_1.ObservableGaugeInstrument(descriptor,storages,this._meterSharedState.observableRegistry)}createObservableCounter(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.OBSERVABLE_COUNTER,options);const storages=this._meterSharedState.registerAsyncMetricStorage(descriptor);return new Instruments_1.ObservableCounterInstrument(descriptor,storages,this._meterSharedState.observableRegistry)}createObservableUpDownCounter(name,options){const descriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(name,InstrumentDescriptor_1.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER,options);const storages=this._meterSharedState.registerAsyncMetricStorage(descriptor);return new Instruments_1.ObservableUpDownCounterInstrument(descriptor,storages,this._meterSharedState.observableRegistry)}addBatchObservableCallback(callback,observables){this._meterSharedState.observableRegistry.addBatchCallback(callback,observables)}removeBatchObservableCallback(callback,observables){this._meterSharedState.observableRegistry.removeBatchCallback(callback,observables)}}exports.Meter=Meter},{"./InstrumentDescriptor":180,"./Instruments":181}],183:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterProvider=void 0;const api_1=require("@opentelemetry/api");const resources_1=require("@opentelemetry/resources");const MeterProviderSharedState_1=require("./state/MeterProviderSharedState");const MetricCollector_1=require("./state/MetricCollector");class MeterProvider{constructor(options){var _a;this._shutdown=false;this._sharedState=new MeterProviderSharedState_1.MeterProviderSharedState((_a=options===null||options===void 0?void 0:options.resource)!==null&&_a!==void 0?_a:resources_1.Resource.empty());if((options===null||options===void 0?void 0:options.views)!=null&&options.views.length>0){for(const view of options.views){this._sharedState.viewRegistry.addView(view)}}}getMeter(name,version="",options={}){if(this._shutdown){api_1.diag.warn("A shutdown MeterProvider cannot provide a Meter");return(0,api_1.createNoopMeter)()}return this._sharedState.getMeterSharedState({name:name,version:version,schemaUrl:options.schemaUrl}).meter}addMetricReader(metricReader){const collector=new MetricCollector_1.MetricCollector(this._sharedState,metricReader);metricReader.setMetricProducer(collector);this._sharedState.metricCollectors.push(collector)}async shutdown(options){if(this._shutdown){api_1.diag.warn("shutdown may only be called once per MeterProvider");return}this._shutdown=true;await Promise.all(this._sharedState.metricCollectors.map((collector=>collector.shutdown(options))))}async forceFlush(options){if(this._shutdown){api_1.diag.warn("invalid attempt to force flush after MeterProvider shutdown");return}await Promise.all(this._sharedState.metricCollectors.map((collector=>collector.forceFlush(options))))}}exports.MeterProvider=MeterProvider},{"./state/MeterProviderSharedState":202,"./state/MetricCollector":204,"@opentelemetry/api":19,"@opentelemetry/resources":298}],184:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchObservableResultImpl=exports.ObservableResultImpl=void 0;const api_1=require("@opentelemetry/api");const HashMap_1=require("./state/HashMap");const Instruments_1=require("./Instruments");class ObservableResultImpl{constructor(_descriptor){this._descriptor=_descriptor;this._buffer=new HashMap_1.AttributeHashMap}observe(value,attributes={}){if(this._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}this._buffer.set(attributes,value)}}exports.ObservableResultImpl=ObservableResultImpl;class BatchObservableResultImpl{constructor(){this._buffer=new Map}observe(metric,value,attributes={}){if(!(0,Instruments_1.isObservableInstrument)(metric)){return}let map=this._buffer.get(metric);if(map==null){map=new HashMap_1.AttributeHashMap;this._buffer.set(metric,map)}if(metric._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${metric._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}map.set(attributes,value)}}exports.BatchObservableResultImpl=BatchObservableResultImpl},{"./Instruments":181,"./state/HashMap":201,"@opentelemetry/api":19}],185:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DropAggregator=void 0;const types_1=require("./types");class DropAggregator{constructor(){this.kind=types_1.AggregatorKind.DROP}createAccumulation(){return undefined}merge(_previous,_delta){return undefined}diff(_previous,_current){return undefined}toMetricData(_descriptor,_aggregationTemporality,_accumulationByAttributes,_endTime){return undefined}}exports.DropAggregator=DropAggregator},{"./types":190}],186:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.HistogramAggregator=exports.HistogramAccumulation=void 0;const types_1=require("./types");const MetricData_1=require("../export/MetricData");const InstrumentDescriptor_1=require("../InstrumentDescriptor");function createNewEmptyCheckpoint(boundaries){const counts=boundaries.map((()=>0));counts.push(0);return{buckets:{boundaries:boundaries,counts:counts},sum:0,count:0,hasMinMax:false,min:Infinity,max:-Infinity}}class HistogramAccumulation{constructor(startTime,_boundaries,_recordMinMax=true,_current=createNewEmptyCheckpoint(_boundaries)){this.startTime=startTime;this._boundaries=_boundaries;this._recordMinMax=_recordMinMax;this._current=_current}record(value){this._current.count+=1;this._current.sum+=value;if(this._recordMinMax){this._current.min=Math.min(value,this._current.min);this._current.max=Math.max(value,this._current.max);this._current.hasMinMax=true}for(let i=0;i<this._boundaries.length;i++){if(value<this._boundaries[i]){this._current.buckets.counts[i]+=1;return}}this._current.buckets.counts[this._boundaries.length]+=1}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.HistogramAccumulation=HistogramAccumulation;class HistogramAggregator{constructor(_boundaries,_recordMinMax){this._boundaries=_boundaries;this._recordMinMax=_recordMinMax;this.kind=types_1.AggregatorKind.HISTOGRAM}createAccumulation(startTime){return new HistogramAccumulation(startTime,this._boundaries,this._recordMinMax)}merge(previous,delta){const previousValue=previous.toPointValue();const deltaValue=delta.toPointValue();const previousCounts=previousValue.buckets.counts;const deltaCounts=deltaValue.buckets.counts;const mergedCounts=new Array(previousCounts.length);for(let idx=0;idx<previousCounts.length;idx++){mergedCounts[idx]=previousCounts[idx]+deltaCounts[idx]}let min=Infinity;let max=-Infinity;if(this._recordMinMax){if(previousValue.hasMinMax&&deltaValue.hasMinMax){min=Math.min(previousValue.min,deltaValue.min);max=Math.max(previousValue.max,deltaValue.max)}else if(previousValue.hasMinMax){min=previousValue.min;max=previousValue.max}else if(deltaValue.hasMinMax){min=deltaValue.min;max=deltaValue.max}}return new HistogramAccumulation(previous.startTime,previousValue.buckets.boundaries,this._recordMinMax,{buckets:{boundaries:previousValue.buckets.boundaries,counts:mergedCounts},count:previousValue.count+deltaValue.count,sum:previousValue.sum+deltaValue.sum,hasMinMax:this._recordMinMax&&(previousValue.hasMinMax||deltaValue.hasMinMax),min:min,max:max})}diff(previous,current){const previousValue=previous.toPointValue();const currentValue=current.toPointValue();const previousCounts=previousValue.buckets.counts;const currentCounts=currentValue.buckets.counts;const diffedCounts=new Array(previousCounts.length);for(let idx=0;idx<previousCounts.length;idx++){diffedCounts[idx]=currentCounts[idx]-previousCounts[idx]}return new HistogramAccumulation(current.startTime,previousValue.buckets.boundaries,this._recordMinMax,{buckets:{boundaries:previousValue.buckets.boundaries,counts:diffedCounts},count:currentValue.count-previousValue.count,sum:currentValue.sum-previousValue.sum,hasMinMax:false,min:Infinity,max:-Infinity})}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.HISTOGRAM,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>{const pointValue=accumulation.toPointValue();const allowsNegativeValues=descriptor.type===InstrumentDescriptor_1.InstrumentType.UP_DOWN_COUNTER||descriptor.type===InstrumentDescriptor_1.InstrumentType.OBSERVABLE_GAUGE||descriptor.type===InstrumentDescriptor_1.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER;return{attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:{min:pointValue.hasMinMax?pointValue.min:undefined,max:pointValue.hasMinMax?pointValue.max:undefined,sum:!allowsNegativeValues?pointValue.sum:undefined,buckets:pointValue.buckets,count:pointValue.count}}}))}}}exports.HistogramAggregator=HistogramAggregator},{"../InstrumentDescriptor":180,"../export/MetricData":195,"./types":190}],187:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LastValueAggregator=exports.LastValueAccumulation=void 0;const types_1=require("./types");const core_1=require("@opentelemetry/core");const MetricData_1=require("../export/MetricData");class LastValueAccumulation{constructor(startTime,_current=0,sampleTime=[0,0]){this.startTime=startTime;this._current=_current;this.sampleTime=sampleTime}record(value){this._current=value;this.sampleTime=(0,core_1.hrTime)()}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.LastValueAccumulation=LastValueAccumulation;class LastValueAggregator{constructor(){this.kind=types_1.AggregatorKind.LAST_VALUE}createAccumulation(startTime){return new LastValueAccumulation(startTime)}merge(previous,delta){const latestAccumulation=(0,core_1.hrTimeToMicroseconds)(delta.sampleTime)>=(0,core_1.hrTimeToMicroseconds)(previous.sampleTime)?delta:previous;return new LastValueAccumulation(previous.startTime,latestAccumulation.toPointValue(),latestAccumulation.sampleTime)}diff(previous,current){const latestAccumulation=(0,core_1.hrTimeToMicroseconds)(current.sampleTime)>=(0,core_1.hrTimeToMicroseconds)(previous.sampleTime)?current:previous;return new LastValueAccumulation(current.startTime,latestAccumulation.toPointValue(),latestAccumulation.sampleTime)}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.GAUGE,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>({attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:accumulation.toPointValue()})))}}}exports.LastValueAggregator=LastValueAggregator},{"../export/MetricData":195,"./types":190,"@opentelemetry/core":63}],188:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SumAggregator=exports.SumAccumulation=void 0;const types_1=require("./types");const MetricData_1=require("../export/MetricData");class SumAccumulation{constructor(startTime,monotonic,_current=0,reset=false){this.startTime=startTime;this.monotonic=monotonic;this._current=_current;this.reset=reset}record(value){if(this.monotonic&&value<0){return}this._current+=value}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.SumAccumulation=SumAccumulation;class SumAggregator{constructor(monotonic){this.monotonic=monotonic;this.kind=types_1.AggregatorKind.SUM}createAccumulation(startTime){return new SumAccumulation(startTime,this.monotonic)}merge(previous,delta){const prevPv=previous.toPointValue();const deltaPv=delta.toPointValue();if(delta.reset){return new SumAccumulation(delta.startTime,this.monotonic,deltaPv,delta.reset)}return new SumAccumulation(previous.startTime,this.monotonic,prevPv+deltaPv)}diff(previous,current){const prevPv=previous.toPointValue();const currPv=current.toPointValue();if(this.monotonic&&prevPv>currPv){return new SumAccumulation(current.startTime,this.monotonic,currPv,true)}return new SumAccumulation(current.startTime,this.monotonic,currPv-prevPv)}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.SUM,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>({attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:accumulation.toPointValue()}))),isMonotonic:this.monotonic}}}exports.SumAggregator=SumAggregator},{"../export/MetricData":195,"./types":190}],189:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./Drop"),exports);__exportStar(require("./Histogram"),exports);__exportStar(require("./LastValue"),exports);__exportStar(require("./Sum"),exports)},{"./Drop":185,"./Histogram":186,"./LastValue":187,"./Sum":188}],190:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AggregatorKind=void 0;var AggregatorKind;(function(AggregatorKind){AggregatorKind[AggregatorKind["DROP"]=0]="DROP";AggregatorKind[AggregatorKind["SUM"]=1]="SUM";AggregatorKind[AggregatorKind["LAST_VALUE"]=2]="LAST_VALUE";AggregatorKind[AggregatorKind["HISTOGRAM"]=3]="HISTOGRAM"})(AggregatorKind=exports.AggregatorKind||(exports.AggregatorKind={}))},{}],191:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR=exports.DEFAULT_AGGREGATION_SELECTOR=void 0;const Aggregation_1=require("../view/Aggregation");const AggregationTemporality_1=require("./AggregationTemporality");const DEFAULT_AGGREGATION_SELECTOR=_instrumentType=>Aggregation_1.Aggregation.Default();exports.DEFAULT_AGGREGATION_SELECTOR=DEFAULT_AGGREGATION_SELECTOR;const DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR=_instrumentType=>AggregationTemporality_1.AggregationTemporality.CUMULATIVE;exports.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR=DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR},{"../view/Aggregation":212,"./AggregationTemporality":192}],192:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AggregationTemporality=void 0;var AggregationTemporality;(function(AggregationTemporality){AggregationTemporality[AggregationTemporality["DELTA"]=0]="DELTA";AggregationTemporality[AggregationTemporality["CUMULATIVE"]=1]="CUMULATIVE"})(AggregationTemporality=exports.AggregationTemporality||(exports.AggregationTemporality={}))},{}],193:[function(require,module,exports){(function(setImmediate){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ConsoleMetricExporter=void 0;const core_1=require("@opentelemetry/core");const AggregationTemporality_1=require("./AggregationTemporality");class ConsoleMetricExporter{constructor(){this._shutdown=false}export(metrics,resultCallback){if(this._shutdown){setImmediate(resultCallback,{code:core_1.ExportResultCode.FAILED});return}return ConsoleMetricExporter._sendMetrics(metrics,resultCallback)}forceFlush(){return Promise.resolve()}selectAggregationTemporality(_instrumentType){return AggregationTemporality_1.AggregationTemporality.CUMULATIVE}shutdown(){this._shutdown=true;return Promise.resolve()}static _sendMetrics(metrics,done){for(const scopeMetrics of metrics.scopeMetrics){for(const metric of scopeMetrics.metrics){console.dir({descriptor:metric.descriptor,dataPointType:metric.dataPointType,dataPoints:metric.dataPoints})}}done({code:core_1.ExportResultCode.SUCCESS})}}exports.ConsoleMetricExporter=ConsoleMetricExporter}).call(this)}).call(this,require("timers").setImmediate)},{"./AggregationTemporality":192,"@opentelemetry/core":63,timers:676}],194:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InMemoryMetricExporter=void 0;const core_1=require("@opentelemetry/core");class InMemoryMetricExporter{constructor(aggregationTemporality){this._shutdown=false;this._metrics=[];this._aggregationTemporality=aggregationTemporality}export(metrics,resultCallback){if(this._shutdown){setTimeout((()=>resultCallback({code:core_1.ExportResultCode.FAILED})),0);return}this._metrics.push(metrics);setTimeout((()=>resultCallback({code:core_1.ExportResultCode.SUCCESS})),0)}getMetrics(){return this._metrics}forceFlush(){return Promise.resolve()}reset(){this._metrics=[]}selectAggregationTemporality(_instrumentType){return this._aggregationTemporality}shutdown(){this._shutdown=true;return Promise.resolve()}}exports.InMemoryMetricExporter=InMemoryMetricExporter},{"@opentelemetry/core":63}],195:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DataPointType=void 0;var DataPointType;(function(DataPointType){DataPointType[DataPointType["HISTOGRAM"]=0]="HISTOGRAM";DataPointType[DataPointType["EXPONENTIAL_HISTOGRAM"]=1]="EXPONENTIAL_HISTOGRAM";DataPointType[DataPointType["GAUGE"]=2]="GAUGE";DataPointType[DataPointType["SUM"]=3]="SUM"})(DataPointType=exports.DataPointType||(exports.DataPointType={}))},{}],196:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricReader=void 0;const api=require("@opentelemetry/api");const utils_1=require("../utils");const AggregationSelector_1=require("./AggregationSelector");class MetricReader{constructor(options){var _a,_b;this._shutdown=false;this._aggregationSelector=(_a=options===null||options===void 0?void 0:options.aggregationSelector)!==null&&_a!==void 0?_a:AggregationSelector_1.DEFAULT_AGGREGATION_SELECTOR;this._aggregationTemporalitySelector=(_b=options===null||options===void 0?void 0:options.aggregationTemporalitySelector)!==null&&_b!==void 0?_b:AggregationSelector_1.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR}setMetricProducer(metricProducer){if(this._metricProducer){throw new Error("MetricReader can not be bound to a MeterProvider again.")}this._metricProducer=metricProducer;this.onInitialized()}selectAggregation(instrumentType){return this._aggregationSelector(instrumentType)}selectAggregationTemporality(instrumentType){return this._aggregationTemporalitySelector(instrumentType)}onInitialized(){}async collect(options){if(this._metricProducer===undefined){throw new Error("MetricReader is not bound to a MetricProducer")}if(this._shutdown){throw new Error("MetricReader is shutdown")}return this._metricProducer.collect({timeoutMillis:options===null||options===void 0?void 0:options.timeoutMillis})}async shutdown(options){if(this._shutdown){api.diag.error("Cannot call shutdown twice.");return}if((options===null||options===void 0?void 0:options.timeoutMillis)==null){await this.onShutdown()}else{await(0,utils_1.callWithTimeout)(this.onShutdown(),options.timeoutMillis)}this._shutdown=true}async forceFlush(options){if(this._shutdown){api.diag.warn("Cannot forceFlush on already shutdown MetricReader.");return}if((options===null||options===void 0?void 0:options.timeoutMillis)==null){await this.onForceFlush();return}await(0,utils_1.callWithTimeout)(this.onForceFlush(),options.timeoutMillis)}}exports.MetricReader=MetricReader},{"../utils":211,"./AggregationSelector":191,"@opentelemetry/api":19}],197:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PeriodicExportingMetricReader=void 0;const api=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const MetricReader_1=require("./MetricReader");const utils_1=require("../utils");class PeriodicExportingMetricReader extends MetricReader_1.MetricReader{constructor(options){var _a,_b,_c,_d;super({aggregationSelector:(_a=options.exporter.selectAggregation)===null||_a===void 0?void 0:_a.bind(options.exporter),aggregationTemporalitySelector:(_b=options.exporter.selectAggregationTemporality)===null||_b===void 0?void 0:_b.bind(options.exporter)});if(options.exportIntervalMillis!==undefined&&options.exportIntervalMillis<=0){throw Error("exportIntervalMillis must be greater than 0")}if(options.exportTimeoutMillis!==undefined&&options.exportTimeoutMillis<=0){throw Error("exportTimeoutMillis must be greater than 0")}if(options.exportTimeoutMillis!==undefined&&options.exportIntervalMillis!==undefined&&options.exportIntervalMillis<options.exportTimeoutMillis){throw Error("exportIntervalMillis must be greater than or equal to exportTimeoutMillis")}this._exportInterval=(_c=options.exportIntervalMillis)!==null&&_c!==void 0?_c:6e4;this._exportTimeout=(_d=options.exportTimeoutMillis)!==null&&_d!==void 0?_d:3e4;this._exporter=options.exporter}async _runOnce(){const{resourceMetrics:resourceMetrics,errors:errors}=await this.collect({});if(errors.length>0){api.diag.error("PeriodicExportingMetricReader: metrics collection errors",...errors)}const result=await core_1.internal._export(this._exporter,resourceMetrics);if(result.code!==core_1.ExportResultCode.SUCCESS){throw new Error(`PeriodicExportingMetricReader: metrics export failed (error ${result.error})`)}}onInitialized(){this._interval=setInterval((async()=>{try{await(0,utils_1.callWithTimeout)(this._runOnce(),this._exportTimeout)}catch(err){if(err instanceof utils_1.TimeoutError){api.diag.error("Export took longer than %s milliseconds and timed out.",this._exportTimeout);return}(0,core_1.globalErrorHandler)(err)}}),this._exportInterval);(0,core_1.unrefTimer)(this._interval)}async onForceFlush(){await this._exporter.forceFlush()}async onShutdown(){if(this._interval){clearInterval(this._interval)}await this._exporter.shutdown()}}exports.PeriodicExportingMetricReader=PeriodicExportingMetricReader},{"../utils":211,"./MetricReader":196,"@opentelemetry/api":19,"@opentelemetry/core":63}],198:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TimeoutError=exports.View=exports.Aggregation=exports.SumAggregation=exports.LastValueAggregation=exports.HistogramAggregation=exports.DropAggregation=exports.ExplicitBucketHistogramAggregation=exports.DefaultAggregation=exports.MeterProvider=exports.InstrumentType=exports.ConsoleMetricExporter=exports.InMemoryMetricExporter=exports.PeriodicExportingMetricReader=exports.MetricReader=exports.DataPointType=exports.AggregationTemporality=void 0;var AggregationTemporality_1=require("./export/AggregationTemporality");Object.defineProperty(exports,"AggregationTemporality",{enumerable:true,get:function(){return AggregationTemporality_1.AggregationTemporality}});var MetricData_1=require("./export/MetricData");Object.defineProperty(exports,"DataPointType",{enumerable:true,get:function(){return MetricData_1.DataPointType}});var MetricReader_1=require("./export/MetricReader");Object.defineProperty(exports,"MetricReader",{enumerable:true,get:function(){return MetricReader_1.MetricReader}});var PeriodicExportingMetricReader_1=require("./export/PeriodicExportingMetricReader");Object.defineProperty(exports,"PeriodicExportingMetricReader",{enumerable:true,get:function(){return PeriodicExportingMetricReader_1.PeriodicExportingMetricReader}});var InMemoryMetricExporter_1=require("./export/InMemoryMetricExporter");Object.defineProperty(exports,"InMemoryMetricExporter",{enumerable:true,get:function(){return InMemoryMetricExporter_1.InMemoryMetricExporter}});var ConsoleMetricExporter_1=require("./export/ConsoleMetricExporter");Object.defineProperty(exports,"ConsoleMetricExporter",{enumerable:true,get:function(){return ConsoleMetricExporter_1.ConsoleMetricExporter}});var InstrumentDescriptor_1=require("./InstrumentDescriptor");Object.defineProperty(exports,"InstrumentType",{enumerable:true,get:function(){return InstrumentDescriptor_1.InstrumentType}});var MeterProvider_1=require("./MeterProvider");Object.defineProperty(exports,"MeterProvider",{enumerable:true,get:function(){return MeterProvider_1.MeterProvider}});var Aggregation_1=require("./view/Aggregation");Object.defineProperty(exports,"DefaultAggregation",{enumerable:true,get:function(){return Aggregation_1.DefaultAggregation}});Object.defineProperty(exports,"ExplicitBucketHistogramAggregation",{enumerable:true,get:function(){return Aggregation_1.ExplicitBucketHistogramAggregation}});Object.defineProperty(exports,"DropAggregation",{enumerable:true,get:function(){return Aggregation_1.DropAggregation}});Object.defineProperty(exports,"HistogramAggregation",{enumerable:true,get:function(){return Aggregation_1.HistogramAggregation}});Object.defineProperty(exports,"LastValueAggregation",{enumerable:true,get:function(){return Aggregation_1.LastValueAggregation}});Object.defineProperty(exports,"SumAggregation",{enumerable:true,get:function(){return Aggregation_1.SumAggregation}});Object.defineProperty(exports,"Aggregation",{enumerable:true,get:function(){return Aggregation_1.Aggregation}});var View_1=require("./view/View");Object.defineProperty(exports,"View",{enumerable:true,get:function(){return View_1.View}});var utils_1=require("./utils");Object.defineProperty(exports,"TimeoutError",{enumerable:true,get:function(){return utils_1.TimeoutError}})},{"./InstrumentDescriptor":180,"./MeterProvider":183,"./export/AggregationTemporality":192,"./export/ConsoleMetricExporter":193,"./export/InMemoryMetricExporter":194,"./export/MetricData":195,"./export/MetricReader":196,"./export/PeriodicExportingMetricReader":197,"./utils":211,"./view/Aggregation":212,"./view/View":218}],199:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AsyncMetricStorage=void 0;const MetricStorage_1=require("./MetricStorage");const DeltaMetricProcessor_1=require("./DeltaMetricProcessor");const TemporalMetricProcessor_1=require("./TemporalMetricProcessor");const HashMap_1=require("./HashMap");class AsyncMetricStorage extends MetricStorage_1.MetricStorage{constructor(_instrumentDescriptor,aggregator,_attributesProcessor){super(_instrumentDescriptor);this._attributesProcessor=_attributesProcessor;this._deltaMetricStorage=new DeltaMetricProcessor_1.DeltaMetricProcessor(aggregator);this._temporalMetricStorage=new TemporalMetricProcessor_1.TemporalMetricProcessor(aggregator)}record(measurements,observationTime){const processed=new HashMap_1.AttributeHashMap;Array.from(measurements.entries()).forEach((([attributes,value])=>{processed.set(this._attributesProcessor.process(attributes),value)}));this._deltaMetricStorage.batchCumulate(processed,observationTime)}collect(collector,collectors,collectionTime){const accumulations=this._deltaMetricStorage.collect();return this._temporalMetricStorage.buildMetrics(collector,collectors,this._instrumentDescriptor,accumulations,collectionTime)}}exports.AsyncMetricStorage=AsyncMetricStorage},{"./DeltaMetricProcessor":200,"./HashMap":201,"./MetricStorage":205,"./TemporalMetricProcessor":210}],200:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DeltaMetricProcessor=void 0;const HashMap_1=require("./HashMap");class DeltaMetricProcessor{constructor(_aggregator){this._aggregator=_aggregator;this._activeCollectionStorage=new HashMap_1.AttributeHashMap;this._cumulativeMemoStorage=new HashMap_1.AttributeHashMap}record(value,attributes,_context,collectionTime){const accumulation=this._activeCollectionStorage.getOrDefault(attributes,(()=>this._aggregator.createAccumulation(collectionTime)));accumulation===null||accumulation===void 0?void 0:accumulation.record(value)}batchCumulate(measurements,collectionTime){Array.from(measurements.entries()).forEach((([attributes,value,hashCode])=>{const accumulation=this._aggregator.createAccumulation(collectionTime);accumulation===null||accumulation===void 0?void 0:accumulation.record(value);let delta=accumulation;if(this._cumulativeMemoStorage.has(attributes,hashCode)){const previous=this._cumulativeMemoStorage.get(attributes,hashCode);delta=this._aggregator.diff(previous,accumulation)}this._cumulativeMemoStorage.set(attributes,accumulation,hashCode);this._activeCollectionStorage.set(attributes,delta,hashCode)}))}collect(){const unreportedDelta=this._activeCollectionStorage;this._activeCollectionStorage=new HashMap_1.AttributeHashMap;return unreportedDelta}}exports.DeltaMetricProcessor=DeltaMetricProcessor},{"./HashMap":201}],201:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AttributeHashMap=exports.HashMap=void 0;const utils_1=require("../utils");class HashMap{constructor(_hash){this._hash=_hash;this._valueMap=new Map;this._keyMap=new Map}get(key,hashCode){hashCode!==null&&hashCode!==void 0?hashCode:hashCode=this._hash(key);return this._valueMap.get(hashCode)}getOrDefault(key,defaultFactory){const hash=this._hash(key);if(this._valueMap.has(hash)){return this._valueMap.get(hash)}const val=defaultFactory();if(!this._keyMap.has(hash)){this._keyMap.set(hash,key)}this._valueMap.set(hash,val);return val}set(key,value,hashCode){hashCode!==null&&hashCode!==void 0?hashCode:hashCode=this._hash(key);if(!this._keyMap.has(hashCode)){this._keyMap.set(hashCode,key)}this._valueMap.set(hashCode,value)}has(key,hashCode){hashCode!==null&&hashCode!==void 0?hashCode:hashCode=this._hash(key);return this._valueMap.has(hashCode)}*keys(){const keyIterator=this._keyMap.entries();let next=keyIterator.next();while(next.done!==true){yield[next.value[1],next.value[0]];next=keyIterator.next()}}*entries(){const valueIterator=this._valueMap.entries();let next=valueIterator.next();while(next.done!==true){yield[this._keyMap.get(next.value[0]),next.value[1],next.value[0]];next=valueIterator.next()}}get size(){return this._valueMap.size}}exports.HashMap=HashMap;class AttributeHashMap extends HashMap{constructor(){super(utils_1.hashAttributes)}}exports.AttributeHashMap=AttributeHashMap},{"../utils":211}],202:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterProviderSharedState=void 0;const utils_1=require("../utils");const ViewRegistry_1=require("../view/ViewRegistry");const MeterSharedState_1=require("./MeterSharedState");class MeterProviderSharedState{constructor(resource){this.resource=resource;this.viewRegistry=new ViewRegistry_1.ViewRegistry;this.metricCollectors=[];this.meterSharedStates=new Map}getMeterSharedState(instrumentationScope){const id=(0,utils_1.instrumentationScopeId)(instrumentationScope);let meterSharedState=this.meterSharedStates.get(id);if(meterSharedState==null){meterSharedState=new MeterSharedState_1.MeterSharedState(this,instrumentationScope);this.meterSharedStates.set(id,meterSharedState)}return meterSharedState}selectAggregations(instrumentType){const result=[];for(const collector of this.metricCollectors){result.push([collector,collector.selectAggregation(instrumentType)])}return result}}exports.MeterProviderSharedState=MeterProviderSharedState},{"../utils":211,"../view/ViewRegistry":219,"./MeterSharedState":203}],203:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterSharedState=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");const Meter_1=require("../Meter");const utils_1=require("../utils");const AsyncMetricStorage_1=require("./AsyncMetricStorage");const MetricStorageRegistry_1=require("./MetricStorageRegistry");const MultiWritableMetricStorage_1=require("./MultiWritableMetricStorage");const ObservableRegistry_1=require("./ObservableRegistry");const SyncMetricStorage_1=require("./SyncMetricStorage");const AttributesProcessor_1=require("../view/AttributesProcessor");class MeterSharedState{constructor(_meterProviderSharedState,_instrumentationScope){this._meterProviderSharedState=_meterProviderSharedState;this._instrumentationScope=_instrumentationScope;this.metricStorageRegistry=new MetricStorageRegistry_1.MetricStorageRegistry;this.observableRegistry=new ObservableRegistry_1.ObservableRegistry;this.meter=new Meter_1.Meter(this)}registerMetricStorage(descriptor){const storages=this._registerMetricStorage(descriptor,SyncMetricStorage_1.SyncMetricStorage);if(storages.length===1){return storages[0]}return new MultiWritableMetricStorage_1.MultiMetricStorage(storages)}registerAsyncMetricStorage(descriptor){const storages=this._registerMetricStorage(descriptor,AsyncMetricStorage_1.AsyncMetricStorage);return storages}async collect(collector,collectionTime,options){const errors=await this.observableRegistry.observe(collectionTime,options===null||options===void 0?void 0:options.timeoutMillis);const metricDataList=Array.from(this.metricStorageRegistry.getStorages(collector)).map((metricStorage=>metricStorage.collect(collector,this._meterProviderSharedState.metricCollectors,collectionTime))).filter(utils_1.isNotNullish);return{scopeMetrics:{scope:this._instrumentationScope,metrics:metricDataList.filter(utils_1.isNotNullish)},errors:errors}}_registerMetricStorage(descriptor,MetricStorageType){const views=this._meterProviderSharedState.viewRegistry.findViews(descriptor,this._instrumentationScope);let storages=views.map((view=>{const viewDescriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptorWithView)(view,descriptor);const compatibleStorage=this.metricStorageRegistry.findOrUpdateCompatibleStorage(viewDescriptor);if(compatibleStorage!=null){return compatibleStorage}const aggregator=view.aggregation.createAggregator(viewDescriptor);const viewStorage=new MetricStorageType(viewDescriptor,aggregator,view.attributesProcessor);this.metricStorageRegistry.register(viewStorage);return viewStorage}));if(storages.length===0){const perCollectorAggregations=this._meterProviderSharedState.selectAggregations(descriptor.type);const collectorStorages=perCollectorAggregations.map((([collector,aggregation])=>{const compatibleStorage=this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage(collector,descriptor);if(compatibleStorage!=null){return compatibleStorage}const aggregator=aggregation.createAggregator(descriptor);const storage=new MetricStorageType(descriptor,aggregator,AttributesProcessor_1.AttributesProcessor.Noop());this.metricStorageRegistry.registerForCollector(collector,storage);return storage}));storages=storages.concat(collectorStorages)}return storages}}exports.MeterSharedState=MeterSharedState},{"../InstrumentDescriptor":180,"../Meter":182,"../utils":211,"../view/AttributesProcessor":213,"./AsyncMetricStorage":199,"./MetricStorageRegistry":206,"./MultiWritableMetricStorage":207,"./ObservableRegistry":208,"./SyncMetricStorage":209}],204:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricCollector=void 0;const core_1=require("@opentelemetry/core");const utils_1=require("../utils");class MetricCollector{constructor(_sharedState,_metricReader){this._sharedState=_sharedState;this._metricReader=_metricReader}async collect(options){const collectionTime=(0,core_1.hrTime)();const meterCollectionPromises=Array.from(this._sharedState.meterSharedStates.values()).map((meterSharedState=>meterSharedState.collect(this,collectionTime,options)));const result=await Promise.all(meterCollectionPromises);return{resourceMetrics:{resource:this._sharedState.resource,scopeMetrics:result.map((it=>it.scopeMetrics))},errors:(0,utils_1.FlatMap)(result,(it=>it.errors))}}async forceFlush(options){await this._metricReader.forceFlush(options)}async shutdown(options){await this._metricReader.shutdown(options)}selectAggregationTemporality(instrumentType){return this._metricReader.selectAggregationTemporality(instrumentType)}selectAggregation(instrumentType){return this._metricReader.selectAggregation(instrumentType)}}exports.MetricCollector=MetricCollector},{"../utils":211,"@opentelemetry/core":63}],205:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricStorage=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");class MetricStorage{constructor(_instrumentDescriptor){this._instrumentDescriptor=_instrumentDescriptor}getInstrumentDescriptor(){return this._instrumentDescriptor}updateDescription(description){this._instrumentDescriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(this._instrumentDescriptor.name,this._instrumentDescriptor.type,{description:description,valueType:this._instrumentDescriptor.valueType,unit:this._instrumentDescriptor.unit})}}exports.MetricStorage=MetricStorage},{"../InstrumentDescriptor":180}],206:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricStorageRegistry=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");const api=require("@opentelemetry/api");const RegistrationConflicts_1=require("../view/RegistrationConflicts");class MetricStorageRegistry{constructor(){this._sharedRegistry=new Map;this._perCollectorRegistry=new Map}static create(){return new MetricStorageRegistry}getStorages(collector){let storages=[];for(const metricStorages of this._sharedRegistry.values()){storages=storages.concat(metricStorages)}const perCollectorStorages=this._perCollectorRegistry.get(collector);if(perCollectorStorages!=null){for(const metricStorages of perCollectorStorages.values()){storages=storages.concat(metricStorages)}}return storages}register(storage){this._registerStorage(storage,this._sharedRegistry)}registerForCollector(collector,storage){let storageMap=this._perCollectorRegistry.get(collector);if(storageMap==null){storageMap=new Map;this._perCollectorRegistry.set(collector,storageMap)}this._registerStorage(storage,storageMap)}findOrUpdateCompatibleStorage(expectedDescriptor){const storages=this._sharedRegistry.get(expectedDescriptor.name);if(storages===undefined){return null}return this._findOrUpdateCompatibleStorage(expectedDescriptor,storages)}findOrUpdateCompatibleCollectorStorage(collector,expectedDescriptor){const storageMap=this._perCollectorRegistry.get(collector);if(storageMap===undefined){return null}const storages=this._sharedRegistry.get(expectedDescriptor.name);if(storages===undefined){return null}return this._findOrUpdateCompatibleStorage(expectedDescriptor,storages)}_registerStorage(storage,storageMap){const descriptor=storage.getInstrumentDescriptor();const storages=storageMap.get(descriptor.name);if(storages===undefined){storageMap.set(descriptor.name,[storage]);return}storages.push(storage)}_findOrUpdateCompatibleStorage(expectedDescriptor,existingStorages){let compatibleStorage=null;for(const existingStorage of existingStorages){const existingDescriptor=existingStorage.getInstrumentDescriptor();if((0,InstrumentDescriptor_1.isDescriptorCompatibleWith)(existingDescriptor,expectedDescriptor)){if(existingDescriptor.description!==expectedDescriptor.description){if(expectedDescriptor.description.length>existingDescriptor.description.length){existingStorage.updateDescription(expectedDescriptor.description)}api.diag.warn("A view or instrument with the name ",expectedDescriptor.name," has already been registered, but has a different description and is incompatible with another registered view.\n","Details:\n",(0,RegistrationConflicts_1.getIncompatibilityDetails)(existingDescriptor,expectedDescriptor),"The longer description will be used.\nTo resolve the conflict:",(0,RegistrationConflicts_1.getConflictResolutionRecipe)(existingDescriptor,expectedDescriptor))}compatibleStorage=existingStorage}else{api.diag.warn("A view or instrument with the name ",expectedDescriptor.name," has already been registered and is incompatible with another registered view.\n","Details:\n",(0,RegistrationConflicts_1.getIncompatibilityDetails)(existingDescriptor,expectedDescriptor),"To resolve the conflict:\n",(0,RegistrationConflicts_1.getConflictResolutionRecipe)(existingDescriptor,expectedDescriptor))}}return compatibleStorage}}exports.MetricStorageRegistry=MetricStorageRegistry},{"../InstrumentDescriptor":180,"../view/RegistrationConflicts":217,"@opentelemetry/api":19}],207:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MultiMetricStorage=void 0;class MultiMetricStorage{constructor(_backingStorages){this._backingStorages=_backingStorages}record(value,attributes,context,recordTime){this._backingStorages.forEach((it=>{it.record(value,attributes,context,recordTime)}))}}exports.MultiMetricStorage=MultiMetricStorage},{}],208:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ObservableRegistry=void 0;const api_1=require("@opentelemetry/api");const Instruments_1=require("../Instruments");const ObservableResult_1=require("../ObservableResult");const utils_1=require("../utils");class ObservableRegistry{constructor(){this._callbacks=[];this._batchCallbacks=[]}addCallback(callback,instrument){const idx=this._findCallback(callback,instrument);if(idx>=0){return}this._callbacks.push({callback:callback,instrument:instrument})}removeCallback(callback,instrument){const idx=this._findCallback(callback,instrument);if(idx<0){return}this._callbacks.splice(idx,1)}addBatchCallback(callback,instruments){const observableInstruments=new Set(instruments.filter(Instruments_1.isObservableInstrument));if(observableInstruments.size===0){api_1.diag.error("BatchObservableCallback is not associated with valid instruments",instruments);return}const idx=this._findBatchCallback(callback,observableInstruments);if(idx>=0){return}this._batchCallbacks.push({callback:callback,instruments:observableInstruments})}removeBatchCallback(callback,instruments){const observableInstruments=new Set(instruments.filter(Instruments_1.isObservableInstrument));const idx=this._findBatchCallback(callback,observableInstruments);if(idx<0){return}this._batchCallbacks.splice(idx,1)}async observe(collectionTime,timeoutMillis){const callbackFutures=this._observeCallbacks(collectionTime,timeoutMillis);const batchCallbackFutures=this._observeBatchCallbacks(collectionTime,timeoutMillis);const results=await(0,utils_1.PromiseAllSettled)([...callbackFutures,...batchCallbackFutures]);const rejections=results.filter(utils_1.isPromiseAllSettledRejectionResult).map((it=>it.reason));return rejections}_observeCallbacks(observationTime,timeoutMillis){return this._callbacks.map((async({callback:callback,instrument:instrument})=>{const observableResult=new ObservableResult_1.ObservableResultImpl(instrument._descriptor);let callPromise=Promise.resolve(callback(observableResult));if(timeoutMillis!=null){callPromise=(0,utils_1.callWithTimeout)(callPromise,timeoutMillis)}await callPromise;instrument._metricStorages.forEach((metricStorage=>{metricStorage.record(observableResult._buffer,observationTime)}))}))}_observeBatchCallbacks(observationTime,timeoutMillis){return this._batchCallbacks.map((async({callback:callback,instruments:instruments})=>{const observableResult=new ObservableResult_1.BatchObservableResultImpl;let callPromise=Promise.resolve(callback(observableResult));if(timeoutMillis!=null){callPromise=(0,utils_1.callWithTimeout)(callPromise,timeoutMillis)}await callPromise;instruments.forEach((instrument=>{const buffer=observableResult._buffer.get(instrument);if(buffer==null){return}instrument._metricStorages.forEach((metricStorage=>{metricStorage.record(buffer,observationTime)}))}))}))}_findCallback(callback,instrument){return this._callbacks.findIndex((record=>record.callback===callback&&record.instrument===instrument))}_findBatchCallback(callback,instruments){return this._batchCallbacks.findIndex((record=>record.callback===callback&&(0,utils_1.setEquals)(record.instruments,instruments)))}}exports.ObservableRegistry=ObservableRegistry},{"../Instruments":181,"../ObservableResult":184,"../utils":211,"@opentelemetry/api":19}],209:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SyncMetricStorage=void 0;const MetricStorage_1=require("./MetricStorage");const DeltaMetricProcessor_1=require("./DeltaMetricProcessor");const TemporalMetricProcessor_1=require("./TemporalMetricProcessor");class SyncMetricStorage extends MetricStorage_1.MetricStorage{constructor(instrumentDescriptor,aggregator,_attributesProcessor){super(instrumentDescriptor);this._attributesProcessor=_attributesProcessor;this._deltaMetricStorage=new DeltaMetricProcessor_1.DeltaMetricProcessor(aggregator);this._temporalMetricStorage=new TemporalMetricProcessor_1.TemporalMetricProcessor(aggregator)}record(value,attributes,context,recordTime){attributes=this._attributesProcessor.process(attributes,context);this._deltaMetricStorage.record(value,attributes,context,recordTime)}collect(collector,collectors,collectionTime){const accumulations=this._deltaMetricStorage.collect();return this._temporalMetricStorage.buildMetrics(collector,collectors,this._instrumentDescriptor,accumulations,collectionTime)}}exports.SyncMetricStorage=SyncMetricStorage},{"./DeltaMetricProcessor":200,"./MetricStorage":205,"./TemporalMetricProcessor":210}],210:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TemporalMetricProcessor=void 0;const AggregationTemporality_1=require("../export/AggregationTemporality");const HashMap_1=require("./HashMap");class TemporalMetricProcessor{constructor(_aggregator){this._aggregator=_aggregator;this._unreportedAccumulations=new Map;this._reportHistory=new Map}buildMetrics(collector,collectors,instrumentDescriptor,currentAccumulations,collectionTime){this._stashAccumulations(collectors,currentAccumulations);const unreportedAccumulations=this._getMergedUnreportedAccumulations(collector);let result=unreportedAccumulations;let aggregationTemporality;if(this._reportHistory.has(collector)){const last=this._reportHistory.get(collector);const lastCollectionTime=last.collectionTime;aggregationTemporality=last.aggregationTemporality;if(aggregationTemporality===AggregationTemporality_1.AggregationTemporality.CUMULATIVE){result=TemporalMetricProcessor.merge(last.accumulations,unreportedAccumulations,this._aggregator)}else{result=TemporalMetricProcessor.calibrateStartTime(last.accumulations,unreportedAccumulations,lastCollectionTime)}}else{aggregationTemporality=collector.selectAggregationTemporality(instrumentDescriptor.type)}this._reportHistory.set(collector,{accumulations:result,collectionTime:collectionTime,aggregationTemporality:aggregationTemporality});return this._aggregator.toMetricData(instrumentDescriptor,aggregationTemporality,AttributesMapToAccumulationRecords(result),collectionTime)}_stashAccumulations(collectors,currentAccumulation){collectors.forEach((it=>{let stash=this._unreportedAccumulations.get(it);if(stash===undefined){stash=[];this._unreportedAccumulations.set(it,stash)}stash.push(currentAccumulation)}))}_getMergedUnreportedAccumulations(collector){let result=new HashMap_1.AttributeHashMap;const unreportedList=this._unreportedAccumulations.get(collector);this._unreportedAccumulations.set(collector,[]);if(unreportedList===undefined){return result}for(const it of unreportedList){result=TemporalMetricProcessor.merge(result,it,this._aggregator)}return result}static merge(last,current,aggregator){const result=last;const iterator=current.entries();let next=iterator.next();while(next.done!==true){const[key,record,hash]=next.value;if(last.has(key,hash)){const lastAccumulation=last.get(key,hash);const accumulation=aggregator.merge(lastAccumulation,record);result.set(key,accumulation,hash)}else{result.set(key,record,hash)}next=iterator.next()}return result}static calibrateStartTime(last,current,lastCollectionTime){for(const[key,hash]of last.keys()){const currentAccumulation=current.get(key,hash);currentAccumulation===null||currentAccumulation===void 0?void 0:currentAccumulation.setStartTime(lastCollectionTime)}return current}}exports.TemporalMetricProcessor=TemporalMetricProcessor;function AttributesMapToAccumulationRecords(map){return Array.from(map.entries())}},{"../export/AggregationTemporality":192,"./HashMap":201}],211:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.setEquals=exports.FlatMap=exports.isPromiseAllSettledRejectionResult=exports.PromiseAllSettled=exports.callWithTimeout=exports.TimeoutError=exports.instrumentationScopeId=exports.hashAttributes=exports.isNotNullish=void 0;function isNotNullish(item){return item!==undefined&&item!==null}exports.isNotNullish=isNotNullish;function hashAttributes(attributes){let keys=Object.keys(attributes);if(keys.length===0)return"";keys=keys.sort();return JSON.stringify(keys.map((key=>[key,attributes[key]])))}exports.hashAttributes=hashAttributes;function instrumentationScopeId(instrumentationScope){var _a,_b;return`${instrumentationScope.name}:${(_a=instrumentationScope.version)!==null&&_a!==void 0?_a:""}:${(_b=instrumentationScope.schemaUrl)!==null&&_b!==void 0?_b:""}`}exports.instrumentationScopeId=instrumentationScopeId;class TimeoutError extends Error{constructor(message){super(message);Object.setPrototypeOf(this,TimeoutError.prototype)}}exports.TimeoutError=TimeoutError;function callWithTimeout(promise,timeout){let timeoutHandle;const timeoutPromise=new Promise((function timeoutFunction(_resolve,reject){timeoutHandle=setTimeout((function timeoutHandler(){reject(new TimeoutError("Operation timed out."))}),timeout)}));return Promise.race([promise,timeoutPromise]).then((result=>{clearTimeout(timeoutHandle);return result}),(reason=>{clearTimeout(timeoutHandle);throw reason}))}exports.callWithTimeout=callWithTimeout;async function PromiseAllSettled(promises){return Promise.all(promises.map((async p=>{try{const ret=await p;return{status:"fulfilled",value:ret}}catch(e){return{status:"rejected",reason:e}}})))}exports.PromiseAllSettled=PromiseAllSettled;function isPromiseAllSettledRejectionResult(it){return it.status==="rejected"}exports.isPromiseAllSettledRejectionResult=isPromiseAllSettledRejectionResult;function FlatMap(arr,fn){const result=[];arr.forEach((it=>{result.push(...fn(it))}));return result}exports.FlatMap=FlatMap;function setEquals(lhs,rhs){if(lhs.size!==rhs.size){return false}for(const item of lhs){if(!rhs.has(item)){return false}}return true}exports.setEquals=setEquals},{}],212:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DefaultAggregation=exports.ExplicitBucketHistogramAggregation=exports.HistogramAggregation=exports.LastValueAggregation=exports.SumAggregation=exports.DropAggregation=exports.Aggregation=void 0;const api=require("@opentelemetry/api");const aggregator_1=require("../aggregator");const InstrumentDescriptor_1=require("../InstrumentDescriptor");class Aggregation{static Drop(){return DROP_AGGREGATION}static Sum(){return SUM_AGGREGATION}static LastValue(){return LAST_VALUE_AGGREGATION}static Histogram(){return HISTOGRAM_AGGREGATION}static Default(){return DEFAULT_AGGREGATION}}exports.Aggregation=Aggregation;class DropAggregation extends Aggregation{createAggregator(_instrument){return DropAggregation.DEFAULT_INSTANCE}}exports.DropAggregation=DropAggregation;DropAggregation.DEFAULT_INSTANCE=new aggregator_1.DropAggregator;class SumAggregation extends Aggregation{createAggregator(instrument){switch(instrument.type){case InstrumentDescriptor_1.InstrumentType.COUNTER:case InstrumentDescriptor_1.InstrumentType.OBSERVABLE_COUNTER:case InstrumentDescriptor_1.InstrumentType.HISTOGRAM:{return SumAggregation.MONOTONIC_INSTANCE}default:{return SumAggregation.NON_MONOTONIC_INSTANCE}}}}exports.SumAggregation=SumAggregation;SumAggregation.MONOTONIC_INSTANCE=new aggregator_1.SumAggregator(true);SumAggregation.NON_MONOTONIC_INSTANCE=new aggregator_1.SumAggregator(false);class LastValueAggregation extends Aggregation{createAggregator(_instrument){return LastValueAggregation.DEFAULT_INSTANCE}}exports.LastValueAggregation=LastValueAggregation;LastValueAggregation.DEFAULT_INSTANCE=new aggregator_1.LastValueAggregator;class HistogramAggregation extends Aggregation{createAggregator(_instrument){return HistogramAggregation.DEFAULT_INSTANCE}}exports.HistogramAggregation=HistogramAggregation;HistogramAggregation.DEFAULT_INSTANCE=new aggregator_1.HistogramAggregator([0,5,10,25,50,75,100,250,500,1e3],true);class ExplicitBucketHistogramAggregation extends Aggregation{constructor(boundaries,_recordMinMax=true){super();this._recordMinMax=_recordMinMax;if(boundaries===undefined||boundaries.length===0){throw new Error("HistogramAggregator should be created with boundaries.")}boundaries=boundaries.concat();boundaries=boundaries.sort(((a,b)=>a-b));const minusInfinityIndex=boundaries.lastIndexOf(-Infinity);let infinityIndex=boundaries.indexOf(Infinity);if(infinityIndex===-1){infinityIndex=undefined}this._boundaries=boundaries.slice(minusInfinityIndex+1,infinityIndex)}createAggregator(_instrument){return new aggregator_1.HistogramAggregator(this._boundaries,this._recordMinMax)}}exports.ExplicitBucketHistogramAggregation=ExplicitBucketHistogramAggregation;class DefaultAggregation extends Aggregation{_resolve(instrument){switch(instrument.type){case InstrumentDescriptor_1.InstrumentType.COUNTER:case InstrumentDescriptor_1.InstrumentType.UP_DOWN_COUNTER:case InstrumentDescriptor_1.InstrumentType.OBSERVABLE_COUNTER:case InstrumentDescriptor_1.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER:{return SUM_AGGREGATION}case InstrumentDescriptor_1.InstrumentType.OBSERVABLE_GAUGE:{return LAST_VALUE_AGGREGATION}case InstrumentDescriptor_1.InstrumentType.HISTOGRAM:{return HISTOGRAM_AGGREGATION}}api.diag.warn(`Unable to recognize instrument type: ${instrument.type}`);return DROP_AGGREGATION}createAggregator(instrument){return this._resolve(instrument).createAggregator(instrument)}}exports.DefaultAggregation=DefaultAggregation;const DROP_AGGREGATION=new DropAggregation;const SUM_AGGREGATION=new SumAggregation;const LAST_VALUE_AGGREGATION=new LastValueAggregation;const HISTOGRAM_AGGREGATION=new HistogramAggregation;const DEFAULT_AGGREGATION=new DefaultAggregation},{"../InstrumentDescriptor":180,"../aggregator":189,"@opentelemetry/api":19}],213:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FilteringAttributesProcessor=exports.NoopAttributesProcessor=exports.AttributesProcessor=void 0;class AttributesProcessor{static Noop(){return NOOP}}exports.AttributesProcessor=AttributesProcessor;class NoopAttributesProcessor extends AttributesProcessor{process(incoming,_context){return incoming}}exports.NoopAttributesProcessor=NoopAttributesProcessor;class FilteringAttributesProcessor extends AttributesProcessor{constructor(_allowedAttributeNames){super();this._allowedAttributeNames=_allowedAttributeNames}process(incoming,_context){const filteredAttributes={};Object.keys(incoming).filter((attributeName=>this._allowedAttributeNames.includes(attributeName))).forEach((attributeName=>filteredAttributes[attributeName]=incoming[attributeName]));return filteredAttributes}}exports.FilteringAttributesProcessor=FilteringAttributesProcessor;const NOOP=new NoopAttributesProcessor},{}],214:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentSelector=void 0;const Predicate_1=require("./Predicate");class InstrumentSelector{constructor(criteria){var _a;this._nameFilter=new Predicate_1.PatternPredicate((_a=criteria===null||criteria===void 0?void 0:criteria.name)!==null&&_a!==void 0?_a:"*");this._type=criteria===null||criteria===void 0?void 0:criteria.type}getType(){return this._type}getNameFilter(){return this._nameFilter}}exports.InstrumentSelector=InstrumentSelector},{"./Predicate":216}],215:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterSelector=void 0;const Predicate_1=require("./Predicate");class MeterSelector{constructor(criteria){this._nameFilter=new Predicate_1.ExactPredicate(criteria===null||criteria===void 0?void 0:criteria.name);this._versionFilter=new Predicate_1.ExactPredicate(criteria===null||criteria===void 0?void 0:criteria.version);this._schemaUrlFilter=new Predicate_1.ExactPredicate(criteria===null||criteria===void 0?void 0:criteria.schemaUrl)}getNameFilter(){return this._nameFilter}getVersionFilter(){return this._versionFilter}getSchemaUrlFilter(){return this._schemaUrlFilter}}exports.MeterSelector=MeterSelector},{"./Predicate":216}],216:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ExactPredicate=exports.PatternPredicate=void 0;const ESCAPE=/[\^$\\.+?()[\]{}|]/g;class PatternPredicate{constructor(pattern){if(pattern==="*"){this._matchAll=true;this._regexp=/.*/}else{this._matchAll=false;this._regexp=new RegExp(PatternPredicate.escapePattern(pattern))}}match(str){if(this._matchAll){return true}return this._regexp.test(str)}static escapePattern(pattern){return`^${pattern.replace(ESCAPE,"\\$&").replace("*",".*")}$`}static hasWildcard(pattern){return pattern.includes("*")}}exports.PatternPredicate=PatternPredicate;class ExactPredicate{constructor(pattern){this._matchAll=pattern===undefined;this._pattern=pattern}match(str){if(this._matchAll){return true}if(str===this._pattern){return true}return false}}exports.ExactPredicate=ExactPredicate},{}],217:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getConflictResolutionRecipe=exports.getDescriptionResolutionRecipe=exports.getTypeConflictResolutionRecipe=exports.getUnitConflictResolutionRecipe=exports.getValueTypeConflictResolutionRecipe=exports.getIncompatibilityDetails=void 0;function getIncompatibilityDetails(existing,otherDescriptor){let incompatibility="";if(existing.unit!==otherDescriptor.unit){incompatibility+=`\t- Unit '${existing.unit}' does not match '${otherDescriptor.unit}'\n`}if(existing.type!==otherDescriptor.type){incompatibility+=`\t- Type '${existing.type}' does not match '${otherDescriptor.type}'\n`}if(existing.valueType!==otherDescriptor.valueType){incompatibility+=`\t- Value Type '${existing.valueType}' does not match '${otherDescriptor.valueType}'\n`}if(existing.description!==otherDescriptor.description){incompatibility+=`\t- Description '${existing.description}' does not match '${otherDescriptor.description}'\n`}return incompatibility}exports.getIncompatibilityDetails=getIncompatibilityDetails;function getValueTypeConflictResolutionRecipe(existing,otherDescriptor){return`\t- use valueType '${existing.valueType}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`}exports.getValueTypeConflictResolutionRecipe=getValueTypeConflictResolutionRecipe;function getUnitConflictResolutionRecipe(existing,otherDescriptor){return`\t- use unit '${existing.unit}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`}exports.getUnitConflictResolutionRecipe=getUnitConflictResolutionRecipe;function getTypeConflictResolutionRecipe(existing,otherDescriptor){const selector={name:otherDescriptor.name,type:otherDescriptor.type};const selectorString=JSON.stringify(selector);return`\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'`}exports.getTypeConflictResolutionRecipe=getTypeConflictResolutionRecipe;function getDescriptionResolutionRecipe(existing,otherDescriptor){const selector={name:otherDescriptor.name,type:otherDescriptor.type};const selectorString=JSON.stringify(selector);return`\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'\n    \t- OR - create a new view with the name ${existing.name} and description '${existing.description}' and InstrumentSelector ${selectorString}\n    \t- OR - create a new view with the name ${otherDescriptor.name} and description '${existing.description}' and InstrumentSelector ${selectorString}`}exports.getDescriptionResolutionRecipe=getDescriptionResolutionRecipe;function getConflictResolutionRecipe(existing,otherDescriptor){if(existing.valueType!==otherDescriptor.valueType){return getValueTypeConflictResolutionRecipe(existing,otherDescriptor)}if(existing.unit!==otherDescriptor.unit){return getUnitConflictResolutionRecipe(existing,otherDescriptor)}if(existing.type!==otherDescriptor.type){return getTypeConflictResolutionRecipe(existing,otherDescriptor)}if(existing.description!==otherDescriptor.description){return getDescriptionResolutionRecipe(existing,otherDescriptor)}return""}exports.getConflictResolutionRecipe=getConflictResolutionRecipe},{}],218:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.View=void 0;const Predicate_1=require("./Predicate");const AttributesProcessor_1=require("./AttributesProcessor");const InstrumentSelector_1=require("./InstrumentSelector");const MeterSelector_1=require("./MeterSelector");const Aggregation_1=require("./Aggregation");function isSelectorNotProvided(options){return options.instrumentName==null&&options.instrumentType==null&&options.meterName==null&&options.meterVersion==null&&options.meterSchemaUrl==null}class View{constructor(viewOptions){var _a;if(isSelectorNotProvided(viewOptions)){throw new Error("Cannot create view with no selector arguments supplied")}if(viewOptions.name!=null&&((viewOptions===null||viewOptions===void 0?void 0:viewOptions.instrumentName)==null||Predicate_1.PatternPredicate.hasWildcard(viewOptions.instrumentName))){throw new Error("Views with a specified name must be declared with an instrument selector that selects at most one instrument per meter.")}if(viewOptions.attributeKeys!=null){this.attributesProcessor=new AttributesProcessor_1.FilteringAttributesProcessor(viewOptions.attributeKeys)}else{this.attributesProcessor=AttributesProcessor_1.AttributesProcessor.Noop()}this.name=viewOptions.name;this.description=viewOptions.description;this.aggregation=(_a=viewOptions.aggregation)!==null&&_a!==void 0?_a:Aggregation_1.Aggregation.Default();this.instrumentSelector=new InstrumentSelector_1.InstrumentSelector({name:viewOptions.instrumentName,type:viewOptions.instrumentType});this.meterSelector=new MeterSelector_1.MeterSelector({name:viewOptions.meterName,version:viewOptions.meterVersion,schemaUrl:viewOptions.meterSchemaUrl})}}exports.View=View},{"./Aggregation":212,"./AttributesProcessor":213,"./InstrumentSelector":214,"./MeterSelector":215,"./Predicate":216}],219:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ViewRegistry=void 0;class ViewRegistry{constructor(){this._registeredViews=[]}addView(view){this._registeredViews.push(view)}findViews(instrument,meter){const views=this._registeredViews.filter((registeredView=>this._matchInstrument(registeredView.instrumentSelector,instrument)&&this._matchMeter(registeredView.meterSelector,meter)));return views}_matchInstrument(selector,instrument){return(selector.getType()===undefined||instrument.type===selector.getType())&&selector.getNameFilter().match(instrument.name)}_matchMeter(selector,meter){return selector.getNameFilter().match(meter.name)&&(meter.version===undefined||selector.getVersionFilter().match(meter.version))&&(meter.schemaUrl===undefined||selector.getSchemaUrlFilter().match(meter.schemaUrl))}}exports.ViewRegistry=ViewRegistry},{}],220:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AttributeNames=void 0;var AttributeNames;(function(AttributeNames){AttributeNames["COMPONENT"]="component";AttributeNames["HTTP_ERROR_NAME"]="http.error_name";AttributeNames["HTTP_STATUS_TEXT"]="http.status_text"})(AttributeNames=exports.AttributeNames||(exports.AttributeNames={}))},{}],221:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FetchInstrumentation=void 0;const api=require("@opentelemetry/api");const instrumentation_1=require("@opentelemetry/instrumentation");const core=require("@opentelemetry/core");const web=require("@opentelemetry/sdk-trace-web");const AttributeNames_1=require("./enums/AttributeNames");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const version_1=require("./version");const core_1=require("@opentelemetry/core");const OBSERVER_WAIT_TIME_MS=300;class FetchInstrumentation extends instrumentation_1.InstrumentationBase{constructor(config){super("@opentelemetry/instrumentation-fetch",version_1.VERSION,config);this.component="fetch";this.version=version_1.VERSION;this.moduleName=this.component;this._usedResources=new WeakSet;this._tasksCount=0}init(){}_getConfig(){return this._config}_addChildSpan(span,corsPreFlightRequest){const childSpan=this.tracer.startSpan("CORS Preflight",{startTime:corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START]},api.trace.setSpan(api.context.active(),span));if(!this._getConfig().ignoreNetworkEvents){web.addSpanNetworkEvents(childSpan,corsPreFlightRequest)}childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END])}_addFinalSpanAttributes(span,response){const parsedUrl=web.parseUrl(response.url);span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_STATUS_CODE,response.status);if(response.statusText!=null){span.setAttribute(AttributeNames_1.AttributeNames.HTTP_STATUS_TEXT,response.statusText)}span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_HOST,parsedUrl.host);span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_SCHEME,parsedUrl.protocol.replace(":",""));span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_USER_AGENT,navigator.userAgent)}_addHeaders(options,spanUrl){if(!web.shouldPropagateTraceHeaders(spanUrl,this._getConfig().propagateTraceHeaderCorsUrls)){const headers={};api.propagation.inject(api.context.active(),headers);if(Object.keys(headers).length>0){this._diag.debug("headers inject skipped due to CORS policy")}return}if(options instanceof Request){api.propagation.inject(api.context.active(),options.headers,{set:(h,k,v)=>h.set(k,typeof v==="string"?v:String(v))})}else if(options.headers instanceof Headers){api.propagation.inject(api.context.active(),options.headers,{set:(h,k,v)=>h.set(k,typeof v==="string"?v:String(v))})}else{const headers={};api.propagation.inject(api.context.active(),headers);options.headers=Object.assign({},headers,options.headers||{})}}_clearResources(){if(this._tasksCount===0&&this._getConfig().clearTimingResources){performance.clearResourceTimings();this._usedResources=new WeakSet}}_createSpan(url,options={}){if(core.isUrlIgnored(url,this._getConfig().ignoreUrls)){this._diag.debug("ignoring span as url matches ignored url");return}const method=(options.method||"GET").toUpperCase();const spanName=`HTTP ${method}`;return this.tracer.startSpan(spanName,{kind:api.SpanKind.CLIENT,attributes:{[AttributeNames_1.AttributeNames.COMPONENT]:this.moduleName,[semantic_conventions_1.SemanticAttributes.HTTP_METHOD]:method,[semantic_conventions_1.SemanticAttributes.HTTP_URL]:url}})}_findResourceAndAddNetworkEvents(span,resourcesObserver,endTime){let resources=resourcesObserver.entries;if(!resources.length){if(!performance.getEntriesByType){return}resources=performance.getEntriesByType("resource")}const resource=web.getResource(resourcesObserver.spanUrl,resourcesObserver.startTime,endTime,resources,this._usedResources,"fetch");if(resource.mainRequest){const mainRequest=resource.mainRequest;this._markResourceAsUsed(mainRequest);const corsPreFlightRequest=resource.corsPreFlightRequest;if(corsPreFlightRequest){this._addChildSpan(span,corsPreFlightRequest);this._markResourceAsUsed(corsPreFlightRequest)}if(!this._getConfig().ignoreNetworkEvents){web.addSpanNetworkEvents(span,mainRequest)}}}_markResourceAsUsed(resource){this._usedResources.add(resource)}_endSpan(span,spanData,response){const endTime=core.hrTime();this._addFinalSpanAttributes(span,response);setTimeout((()=>{var _a;(_a=spanData.observer)===null||_a===void 0?void 0:_a.disconnect();this._findResourceAndAddNetworkEvents(span,spanData,endTime);this._tasksCount--;this._clearResources();span.end(endTime)}),OBSERVER_WAIT_TIME_MS)}_patchConstructor(){return original=>{const plugin=this;return function patchConstructor(...args){const self=this;const url=web.parseUrl(args[0]instanceof Request?args[0].url:args[0]).href;const options=args[0]instanceof Request?args[0]:args[1]||{};const createdSpan=plugin._createSpan(url,options);if(!createdSpan){return original.apply(this,args)}const spanData=plugin._prepareSpanData(url);function endSpanOnError(span,error){plugin._applyAttributesAfterFetch(span,options,error);plugin._endSpan(span,spanData,{status:error.status||0,statusText:error.message,url:url})}function endSpanOnSuccess(span,response){plugin._applyAttributesAfterFetch(span,options,response);if(response.status>=200&&response.status<400){plugin._endSpan(span,spanData,response)}else{plugin._endSpan(span,spanData,{status:response.status,statusText:response.statusText,url:url})}}function onSuccess(span,resolve,response){try{const resClone=response.clone();const resClone4Hook=response.clone();const body=resClone.body;if(body){const reader=body.getReader();const read=()=>{reader.read().then((({done:done})=>{if(done){endSpanOnSuccess(span,resClone4Hook)}else{read()}}),(error=>{endSpanOnError(span,error)}))};read()}else{endSpanOnSuccess(span,response)}}finally{resolve(response)}}function onError(span,reject,error){try{endSpanOnError(span,error)}finally{reject(error)}}return new Promise(((resolve,reject)=>api.context.with(api.trace.setSpan(api.context.active(),createdSpan),(()=>{plugin._addHeaders(options,url);plugin._tasksCount++;return original.apply(self,options instanceof Request?[options]:[url,options]).then(onSuccess.bind(self,createdSpan,resolve),onError.bind(self,createdSpan,reject))}))))}}}_applyAttributesAfterFetch(span,request,result){const applyCustomAttributesOnSpan=this._getConfig().applyCustomAttributesOnSpan;if(applyCustomAttributesOnSpan){(0,instrumentation_1.safeExecuteInTheMiddle)((()=>applyCustomAttributesOnSpan(span,request,result)),(error=>{if(!error){return}this._diag.error("applyCustomAttributesOnSpan",error)}),true)}}_prepareSpanData(spanUrl){const startTime=core.hrTime();const entries=[];if(typeof PerformanceObserver!=="function"){return{entries:entries,startTime:startTime,spanUrl:spanUrl}}const observer=new PerformanceObserver((list=>{const perfObsEntries=list.getEntries();perfObsEntries.forEach((entry=>{if(entry.initiatorType==="fetch"&&entry.name===spanUrl){entries.push(entry)}}))}));observer.observe({entryTypes:["resource"]});return{entries:entries,observer:observer,startTime:startTime,spanUrl:spanUrl}}enable(){if((0,instrumentation_1.isWrapped)(fetch)){this._unwrap(core_1._globalThis,"fetch");this._diag.debug("removing previous patch for constructor")}this._wrap(core_1._globalThis,"fetch",this._patchConstructor())}disable(){this._unwrap(core_1._globalThis,"fetch");this._usedResources=new WeakSet}}exports.FetchInstrumentation=FetchInstrumentation},{"./enums/AttributeNames":220,"./version":223,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/instrumentation":232,"@opentelemetry/sdk-trace-web":227,"@opentelemetry/semantic-conventions":540}],222:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./fetch"),exports)},{"./fetch":221}],223:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="0.34.0"},{}],224:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.StackContextManager=void 0;const api_1=require("@opentelemetry/api");class StackContextManager{constructor(){this._enabled=false;this._currentContext=api_1.ROOT_CONTEXT}_bindFunction(context=api_1.ROOT_CONTEXT,target){const manager=this;const contextWrapper=function(...args){return manager.with(context,(()=>target.apply(this,args)))};Object.defineProperty(contextWrapper,"length",{enumerable:false,configurable:true,writable:false,value:target.length});return contextWrapper}active(){return this._currentContext}bind(context,target){if(context===undefined){context=this.active()}if(typeof target==="function"){return this._bindFunction(context,target)}return target}disable(){this._currentContext=api_1.ROOT_CONTEXT;this._enabled=false;return this}enable(){if(this._enabled){return this}this._enabled=true;this._currentContext=api_1.ROOT_CONTEXT;return this}with(context,fn,thisArg,...args){const previousContext=this._currentContext;this._currentContext=context||api_1.ROOT_CONTEXT;try{return fn.call(thisArg,...args)}finally{this._currentContext=previousContext}}}exports.StackContextManager=StackContextManager},{"@opentelemetry/api":19}],225:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.WebTracerProvider=void 0;const sdk_trace_base_1=require("@opentelemetry/sdk-trace-base");const StackContextManager_1=require("./StackContextManager");class WebTracerProvider extends sdk_trace_base_1.BasicTracerProvider{constructor(config={}){super(config);if(config.contextManager){throw"contextManager should be defined in register method not in"+" constructor"}if(config.propagator){throw"propagator should be defined in register method not in constructor"}}register(config={}){if(config.contextManager===undefined){config.contextManager=new StackContextManager_1.StackContextManager}if(config.contextManager){config.contextManager.enable()}super.register(config)}}exports.WebTracerProvider=WebTracerProvider},{"./StackContextManager":224,"@opentelemetry/sdk-trace-base":429}],226:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PerformanceTimingNames=void 0;var PerformanceTimingNames;(function(PerformanceTimingNames){PerformanceTimingNames["CONNECT_END"]="connectEnd";PerformanceTimingNames["CONNECT_START"]="connectStart";PerformanceTimingNames["DECODED_BODY_SIZE"]="decodedBodySize";PerformanceTimingNames["DOM_COMPLETE"]="domComplete";PerformanceTimingNames["DOM_CONTENT_LOADED_EVENT_END"]="domContentLoadedEventEnd";PerformanceTimingNames["DOM_CONTENT_LOADED_EVENT_START"]="domContentLoadedEventStart";PerformanceTimingNames["DOM_INTERACTIVE"]="domInteractive";PerformanceTimingNames["DOMAIN_LOOKUP_END"]="domainLookupEnd";PerformanceTimingNames["DOMAIN_LOOKUP_START"]="domainLookupStart";PerformanceTimingNames["ENCODED_BODY_SIZE"]="encodedBodySize";PerformanceTimingNames["FETCH_START"]="fetchStart";PerformanceTimingNames["LOAD_EVENT_END"]="loadEventEnd";PerformanceTimingNames["LOAD_EVENT_START"]="loadEventStart";PerformanceTimingNames["NAVIGATION_START"]="navigationStart";PerformanceTimingNames["REDIRECT_END"]="redirectEnd";PerformanceTimingNames["REDIRECT_START"]="redirectStart";PerformanceTimingNames["REQUEST_START"]="requestStart";PerformanceTimingNames["RESPONSE_END"]="responseEnd";PerformanceTimingNames["RESPONSE_START"]="responseStart";PerformanceTimingNames["SECURE_CONNECTION_START"]="secureConnectionStart";PerformanceTimingNames["UNLOAD_EVENT_END"]="unloadEventEnd";PerformanceTimingNames["UNLOAD_EVENT_START"]="unloadEventStart"})(PerformanceTimingNames=exports.PerformanceTimingNames||(exports.PerformanceTimingNames={}))},{}],227:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./WebTracerProvider"),exports);__exportStar(require("./StackContextManager"),exports);__exportStar(require("./enums/PerformanceTimingNames"),exports);__exportStar(require("./types"),exports);__exportStar(require("./utils"),exports);__exportStar(require("@opentelemetry/sdk-trace-base"),exports)},{"./StackContextManager":224,"./WebTracerProvider":225,"./enums/PerformanceTimingNames":226,"./types":228,"./utils":229,"@opentelemetry/sdk-trace-base":429}],228:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const PerformanceTimingNames_1=require("./enums/PerformanceTimingNames")},{"./enums/PerformanceTimingNames":226}],229:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.shouldPropagateTraceHeaders=exports.getElementXPath=exports.normalizeUrl=exports.parseUrl=exports.getResource=exports.sortResources=exports.addSpanNetworkEvents=exports.addSpanNetworkEvent=exports.hasKey=void 0;const PerformanceTimingNames_1=require("./enums/PerformanceTimingNames");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");let urlNormalizingAnchor;function getUrlNormalizingAnchor(){if(!urlNormalizingAnchor){urlNormalizingAnchor=document.createElement("a")}return urlNormalizingAnchor}function hasKey(obj,key){return key in obj}exports.hasKey=hasKey;function addSpanNetworkEvent(span,performanceName,entries){if(hasKey(entries,performanceName)&&typeof entries[performanceName]==="number"){span.addEvent(performanceName,entries[performanceName]);return span}return undefined}exports.addSpanNetworkEvent=addSpanNetworkEvent;function addSpanNetworkEvents(span,resource){addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_END,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.SECURE_CONNECTION_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_END,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.REQUEST_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END,resource);const encodedLength=resource[PerformanceTimingNames_1.PerformanceTimingNames.ENCODED_BODY_SIZE];if(encodedLength!==undefined){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,encodedLength)}const decodedLength=resource[PerformanceTimingNames_1.PerformanceTimingNames.DECODED_BODY_SIZE];if(decodedLength!==undefined&&encodedLength!==decodedLength){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,decodedLength)}}exports.addSpanNetworkEvents=addSpanNetworkEvents;function sortResources(filteredResources){return filteredResources.slice().sort(((a,b)=>{const valueA=a[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];const valueB=b[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];if(valueA>valueB){return 1}else if(valueA<valueB){return-1}return 0}))}exports.sortResources=sortResources;function getResource(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources=new WeakSet,initiatorType){const parsedSpanUrl=parseUrl(spanUrl);spanUrl=parsedSpanUrl.toString();const filteredResources=filterResourcesForSpan(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources,initiatorType);if(filteredResources.length===0){return{mainRequest:undefined}}if(filteredResources.length===1){return{mainRequest:filteredResources[0]}}const sorted=sortResources(filteredResources);if(parsedSpanUrl.origin!==location.origin&&sorted.length>1){let corsPreFlightRequest=sorted[0];let mainRequest=findMainRequest(sorted,corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END],endTimeHR);const responseEnd=corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END];const fetchStart=mainRequest[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];if(fetchStart<responseEnd){mainRequest=corsPreFlightRequest;corsPreFlightRequest=undefined}return{corsPreFlightRequest:corsPreFlightRequest,mainRequest:mainRequest}}else{return{mainRequest:filteredResources[0]}}}exports.getResource=getResource;function findMainRequest(resources,corsPreFlightRequestEndTime,spanEndTimeHR){const spanEndTime=(0,core_1.hrTimeToNanoseconds)(spanEndTimeHR);const minTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(corsPreFlightRequestEndTime));let mainRequest=resources[1];let bestGap;const length=resources.length;for(let i=1;i<length;i++){const resource=resources[i];const resourceStartTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));const resourceEndTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));const currentGap=spanEndTime-resourceEndTime;if(resourceStartTime>=minTime&&(!bestGap||currentGap<bestGap)){bestGap=currentGap;mainRequest=resource}}return mainRequest}function filterResourcesForSpan(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources,initiatorType){const startTime=(0,core_1.hrTimeToNanoseconds)(startTimeHR);const endTime=(0,core_1.hrTimeToNanoseconds)(endTimeHR);let filteredResources=resources.filter((resource=>{const resourceStartTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));const resourceEndTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));return resource.initiatorType.toLowerCase()===(initiatorType||"xmlhttprequest")&&resource.name===spanUrl&&resourceStartTime>=startTime&&resourceEndTime<=endTime}));if(filteredResources.length>0){filteredResources=filteredResources.filter((resource=>!ignoredResources.has(resource)))}return filteredResources}function parseUrl(url){if(typeof URL==="function"){return new URL(url,location.href)}const element=getUrlNormalizingAnchor();element.href=url;return element}exports.parseUrl=parseUrl;function normalizeUrl(url){const urlLike=parseUrl(url);return urlLike.href}exports.normalizeUrl=normalizeUrl;function getElementXPath(target,optimised){if(target.nodeType===Node.DOCUMENT_NODE){return"/"}const targetValue=getNodeValue(target,optimised);if(optimised&&targetValue.indexOf("@id")>0){return targetValue}let xpath="";if(target.parentNode){xpath+=getElementXPath(target.parentNode,false)}xpath+=targetValue;return xpath}exports.getElementXPath=getElementXPath;function getNodeIndex(target){if(!target.parentNode){return 0}const allowedTypes=[target.nodeType];if(target.nodeType===Node.CDATA_SECTION_NODE){allowedTypes.push(Node.TEXT_NODE)}let elements=Array.from(target.parentNode.childNodes);elements=elements.filter((element=>{const localName=element.localName;return allowedTypes.indexOf(element.nodeType)>=0&&localName===target.localName}));if(elements.length>=1){return elements.indexOf(target)+1}return 0}function getNodeValue(target,optimised){const nodeType=target.nodeType;const index=getNodeIndex(target);let nodeValue="";if(nodeType===Node.ELEMENT_NODE){const id=target.getAttribute("id");if(optimised&&id){return`//*[@id="${id}"]`}nodeValue=target.localName}else if(nodeType===Node.TEXT_NODE||nodeType===Node.CDATA_SECTION_NODE){nodeValue="text()"}else if(nodeType===Node.COMMENT_NODE){nodeValue="comment()"}else{return""}if(nodeValue&&index>1){return`/${nodeValue}[${index}]`}return`/${nodeValue}`}function shouldPropagateTraceHeaders(spanUrl,propagateTraceHeaderCorsUrls){let propagateTraceHeaderUrls=propagateTraceHeaderCorsUrls||[];if(typeof propagateTraceHeaderUrls==="string"||propagateTraceHeaderUrls instanceof RegExp){propagateTraceHeaderUrls=[propagateTraceHeaderUrls]}const parsedSpanUrl=parseUrl(spanUrl);if(parsedSpanUrl.origin===location.origin){return true}else{return propagateTraceHeaderUrls.some((propagateTraceHeaderUrl=>(0,core_1.urlMatches)(spanUrl,propagateTraceHeaderUrl)))}}exports.shouldPropagateTraceHeaders=shouldPropagateTraceHeaders},{"./enums/PerformanceTimingNames":226,"@opentelemetry/core":63,"@opentelemetry/semantic-conventions":540}],230:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.registerInstrumentations=void 0;const api_1=require("@opentelemetry/api");const autoLoaderUtils_1=require("./autoLoaderUtils");function registerInstrumentations(options){const{instrumentations:instrumentations}=(0,autoLoaderUtils_1.parseInstrumentationOptions)(options.instrumentations);const tracerProvider=options.tracerProvider||api_1.trace.getTracerProvider();const meterProvider=options.meterProvider||api_1.metrics.getMeterProvider();(0,autoLoaderUtils_1.enableInstrumentations)(instrumentations,tracerProvider,meterProvider);return()=>{(0,autoLoaderUtils_1.disableInstrumentations)(instrumentations)}}exports.registerInstrumentations=registerInstrumentations},{"./autoLoaderUtils":231,"@opentelemetry/api":19}],231:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.disableInstrumentations=exports.enableInstrumentations=exports.parseInstrumentationOptions=void 0;function parseInstrumentationOptions(options=[]){let instrumentations=[];for(let i=0,j=options.length;i<j;i++){const option=options[i];if(Array.isArray(option)){const results=parseInstrumentationOptions(option);instrumentations=instrumentations.concat(results.instrumentations)}else if(typeof option==="function"){instrumentations.push(new option)}else if(option.instrumentationName){instrumentations.push(option)}}return{instrumentations:instrumentations}}exports.parseInstrumentationOptions=parseInstrumentationOptions;function enableInstrumentations(instrumentations,tracerProvider,meterProvider){for(let i=0,j=instrumentations.length;i<j;i++){const instrumentation=instrumentations[i];if(tracerProvider){instrumentation.setTracerProvider(tracerProvider)}if(meterProvider){instrumentation.setMeterProvider(meterProvider)}if(!instrumentation.getConfig().enabled){instrumentation.enable()}}}exports.enableInstrumentations=enableInstrumentations;function disableInstrumentations(instrumentations){instrumentations.forEach((instrumentation=>instrumentation.disable()))}exports.disableInstrumentations=disableInstrumentations},{}],232:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./autoLoader"),exports);__exportStar(require("./platform/index"),exports);__exportStar(require("./types"),exports);__exportStar(require("./types_internal"),exports);__exportStar(require("./utils"),exports)},{"./autoLoader":230,"./platform/index":234,"./types":236,"./types_internal":237,"./utils":238}],233:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentationAbstract=void 0;const api_1=require("@opentelemetry/api");const shimmer=require("shimmer");class InstrumentationAbstract{constructor(instrumentationName,instrumentationVersion,config={}){this.instrumentationName=instrumentationName;this.instrumentationVersion=instrumentationVersion;this._wrap=shimmer.wrap;this._unwrap=shimmer.unwrap;this._massWrap=shimmer.massWrap;this._massUnwrap=shimmer.massUnwrap;this._config=Object.assign({enabled:true},config);this._diag=api_1.diag.createComponentLogger({namespace:instrumentationName});this._tracer=api_1.trace.getTracer(instrumentationName,instrumentationVersion);this._meter=api_1.metrics.getMeter(instrumentationName,instrumentationVersion)}get meter(){return this._meter}setMeterProvider(meterProvider){this._meter=meterProvider.getMeter(this.instrumentationName,this.instrumentationVersion)}getConfig(){return this._config}setConfig(config={}){this._config=Object.assign({},config)}setTracerProvider(tracerProvider){this._tracer=tracerProvider.getTracer(this.instrumentationName,this.instrumentationVersion)}get tracer(){return this._tracer}}exports.InstrumentationAbstract=InstrumentationAbstract},{"@opentelemetry/api":19,shimmer:675}],234:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./instrumentation"),exports)},{"./instrumentation":235}],235:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentationBase=void 0;const instrumentation_1=require("../../instrumentation");class InstrumentationBase extends instrumentation_1.InstrumentationAbstract{constructor(instrumentationName,instrumentationVersion,config={}){super(instrumentationName,instrumentationVersion,config);if(this._config.enabled){this.enable()}}}exports.InstrumentationBase=InstrumentationBase},{"../../instrumentation":233}],236:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],237:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],238:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isWrapped=exports.safeExecuteInTheMiddleAsync=exports.safeExecuteInTheMiddle=void 0;function safeExecuteInTheMiddle(execute,onFinish,preventThrowingError){let error;let result;try{result=execute()}catch(e){error=e}finally{onFinish(error,result);if(error&&!preventThrowingError){throw error}return result}}exports.safeExecuteInTheMiddle=safeExecuteInTheMiddle;async function safeExecuteInTheMiddleAsync(execute,onFinish,preventThrowingError){let error;let result;try{result=await execute()}catch(e){error=e}finally{onFinish(error,result);if(error&&!preventThrowingError){throw error}return result}}exports.safeExecuteInTheMiddleAsync=safeExecuteInTheMiddleAsync;function isWrapped(func){return typeof func==="function"&&typeof func.__original==="function"&&typeof func.__unwrap==="function"&&func.__wrapped===true}exports.isWrapped=isWrapped},{}],239:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.B3MultiPropagator=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const common_1=require("./common");const constants_1=require("./constants");const VALID_SAMPLED_VALUES=new Set([true,"true","True","1",1]);const VALID_UNSAMPLED_VALUES=new Set([false,"false","False","0",0]);function isValidSampledValue(sampled){return sampled===api_1.TraceFlags.SAMPLED||sampled===api_1.TraceFlags.NONE}function parseHeader(header){return Array.isArray(header)?header[0]:header}function getHeaderValue(carrier,getter,key){const header=getter.get(carrier,key);return parseHeader(header)}function getTraceId(carrier,getter){const traceId=getHeaderValue(carrier,getter,constants_1.X_B3_TRACE_ID);if(typeof traceId==="string"){return traceId.padStart(32,"0")}return""}function getSpanId(carrier,getter){const spanId=getHeaderValue(carrier,getter,constants_1.X_B3_SPAN_ID);if(typeof spanId==="string"){return spanId}return""}function getDebug(carrier,getter){const debug=getHeaderValue(carrier,getter,constants_1.X_B3_FLAGS);return debug==="1"?"1":undefined}function getTraceFlags(carrier,getter){const traceFlags=getHeaderValue(carrier,getter,constants_1.X_B3_SAMPLED);const debug=getDebug(carrier,getter);if(debug==="1"||VALID_SAMPLED_VALUES.has(traceFlags)){return api_1.TraceFlags.SAMPLED}if(traceFlags===undefined||VALID_UNSAMPLED_VALUES.has(traceFlags)){return api_1.TraceFlags.NONE}return}class B3MultiPropagator{inject(context,carrier,setter){const spanContext=api_1.trace.getSpanContext(context);if(!spanContext||!(0,api_1.isSpanContextValid)(spanContext)||(0,core_1.isTracingSuppressed)(context))return;const debug=context.getValue(common_1.B3_DEBUG_FLAG_KEY);setter.set(carrier,constants_1.X_B3_TRACE_ID,spanContext.traceId);setter.set(carrier,constants_1.X_B3_SPAN_ID,spanContext.spanId);if(debug==="1"){setter.set(carrier,constants_1.X_B3_FLAGS,debug)}else if(spanContext.traceFlags!==undefined){setter.set(carrier,constants_1.X_B3_SAMPLED,(api_1.TraceFlags.SAMPLED&spanContext.traceFlags)===api_1.TraceFlags.SAMPLED?"1":"0")}}extract(context,carrier,getter){const traceId=getTraceId(carrier,getter);const spanId=getSpanId(carrier,getter);const traceFlags=getTraceFlags(carrier,getter);const debug=getDebug(carrier,getter);if((0,api_1.isValidTraceId)(traceId)&&(0,api_1.isValidSpanId)(spanId)&&isValidSampledValue(traceFlags)){context=context.setValue(common_1.B3_DEBUG_FLAG_KEY,debug);return api_1.trace.setSpanContext(context,{traceId:traceId,spanId:spanId,isRemote:true,traceFlags:traceFlags})}return context}fields(){return[constants_1.X_B3_TRACE_ID,constants_1.X_B3_SPAN_ID,constants_1.X_B3_FLAGS,constants_1.X_B3_SAMPLED,constants_1.X_B3_PARENT_SPAN_ID]}}exports.B3MultiPropagator=B3MultiPropagator},{"./common":242,"./constants":243,"@opentelemetry/api":19,"@opentelemetry/core":256}],240:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.B3Propagator=void 0;const core_1=require("@opentelemetry/core");const B3MultiPropagator_1=require("./B3MultiPropagator");const B3SinglePropagator_1=require("./B3SinglePropagator");const constants_1=require("./constants");const types_1=require("./types");class B3Propagator{constructor(config={}){this._b3MultiPropagator=new B3MultiPropagator_1.B3MultiPropagator;this._b3SinglePropagator=new B3SinglePropagator_1.B3SinglePropagator;if(config.injectEncoding===types_1.B3InjectEncoding.MULTI_HEADER){this._inject=this._b3MultiPropagator.inject;this._fields=this._b3MultiPropagator.fields()}else{this._inject=this._b3SinglePropagator.inject;this._fields=this._b3SinglePropagator.fields()}}inject(context,carrier,setter){if((0,core_1.isTracingSuppressed)(context)){return}this._inject(context,carrier,setter)}extract(context,carrier,getter){const header=getter.get(carrier,constants_1.B3_CONTEXT_HEADER);const b3Context=Array.isArray(header)?header[0]:header;if(b3Context){return this._b3SinglePropagator.extract(context,carrier,getter)}else{return this._b3MultiPropagator.extract(context,carrier,getter)}}fields(){return this._fields}}exports.B3Propagator=B3Propagator},{"./B3MultiPropagator":239,"./B3SinglePropagator":241,"./constants":243,"./types":245,"@opentelemetry/core":256}],241:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.B3SinglePropagator=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const common_1=require("./common");const constants_1=require("./constants");const B3_CONTEXT_REGEX=/((?:[0-9a-f]{16}){1,2})-([0-9a-f]{16})(?:-([01d](?![0-9a-f])))?(?:-([0-9a-f]{16}))?/;const PADDING="0".repeat(16);const SAMPLED_VALUES=new Set(["d","1"]);const DEBUG_STATE="d";function convertToTraceId128(traceId){return traceId.length===32?traceId:`${PADDING}${traceId}`}function convertToTraceFlags(samplingState){if(samplingState&&SAMPLED_VALUES.has(samplingState)){return api_1.TraceFlags.SAMPLED}return api_1.TraceFlags.NONE}class B3SinglePropagator{inject(context,carrier,setter){const spanContext=api_1.trace.getSpanContext(context);if(!spanContext||!(0,api_1.isSpanContextValid)(spanContext)||(0,core_1.isTracingSuppressed)(context))return;const samplingState=context.getValue(common_1.B3_DEBUG_FLAG_KEY)||spanContext.traceFlags&1;const value=`${spanContext.traceId}-${spanContext.spanId}-${samplingState}`;setter.set(carrier,constants_1.B3_CONTEXT_HEADER,value)}extract(context,carrier,getter){const header=getter.get(carrier,constants_1.B3_CONTEXT_HEADER);const b3Context=Array.isArray(header)?header[0]:header;if(typeof b3Context!=="string")return context;const match=b3Context.match(B3_CONTEXT_REGEX);if(!match)return context;const[,extractedTraceId,spanId,samplingState]=match;const traceId=convertToTraceId128(extractedTraceId);if(!(0,api_1.isValidTraceId)(traceId)||!(0,api_1.isValidSpanId)(spanId))return context;const traceFlags=convertToTraceFlags(samplingState);if(samplingState===DEBUG_STATE){context=context.setValue(common_1.B3_DEBUG_FLAG_KEY,samplingState)}return api_1.trace.setSpanContext(context,{traceId:traceId,spanId:spanId,isRemote:true,traceFlags:traceFlags})}fields(){return[constants_1.B3_CONTEXT_HEADER]}}exports.B3SinglePropagator=B3SinglePropagator},{"./common":242,"./constants":243,"@opentelemetry/api":19,"@opentelemetry/core":256}],242:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.B3_DEBUG_FLAG_KEY=void 0;const api_1=require("@opentelemetry/api");exports.B3_DEBUG_FLAG_KEY=(0,api_1.createContextKey)("OpenTelemetry Context Key B3 Debug Flag")},{"@opentelemetry/api":19}],243:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.X_B3_FLAGS=exports.X_B3_PARENT_SPAN_ID=exports.X_B3_SAMPLED=exports.X_B3_SPAN_ID=exports.X_B3_TRACE_ID=exports.B3_CONTEXT_HEADER=void 0;exports.B3_CONTEXT_HEADER="b3";exports.X_B3_TRACE_ID="x-b3-traceid";exports.X_B3_SPAN_ID="x-b3-spanid";exports.X_B3_SAMPLED="x-b3-sampled";exports.X_B3_PARENT_SPAN_ID="x-b3-parentspanid";exports.X_B3_FLAGS="x-b3-flags"},{}],244:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./B3Propagator"),exports);__exportStar(require("./constants"),exports);__exportStar(require("./types"),exports)},{"./B3Propagator":240,"./constants":243,"./types":245}],245:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.B3InjectEncoding=void 0;var B3InjectEncoding;(function(B3InjectEncoding){B3InjectEncoding[B3InjectEncoding["SINGLE_HEADER"]=0]="SINGLE_HEADER";B3InjectEncoding[B3InjectEncoding["MULTI_HEADER"]=1]="MULTI_HEADER"})(B3InjectEncoding=exports.B3InjectEncoding||(exports.B3InjectEncoding={}))},{}],246:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{dup:53}],247:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{dup:54}],248:[function(require,module,exports){arguments[4][100][0].apply(exports,arguments)},{"../../trace/suppress-tracing":276,"../constants":247,"../utils":249,"@opentelemetry/api":19,dup:100}],249:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./constants":247,"@opentelemetry/api":19,dup:56}],250:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],251:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:58}],252:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments)},{"./logging-error-handler":253,dup:59}],253:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:60}],254:[function(require,module,exports){arguments[4][106][0].apply(exports,arguments)},{"../platform":263,dup:106}],255:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],256:[function(require,module,exports){arguments[4][108][0].apply(exports,arguments)},{"./ExportResult":246,"./baggage/propagation/W3CBaggagePropagator":248,"./baggage/utils":249,"./common/anchored-clock":250,"./common/attributes":251,"./common/global-error-handler":252,"./common/logging-error-handler":253,"./common/time":254,"./common/types":255,"./internal/exporter":257,"./platform":263,"./propagation/composite":267,"./trace/IdGenerator":268,"./trace/TraceState":269,"./trace/W3CTraceContextPropagator":270,"./trace/rpc-metadata":271,"./trace/sampler/AlwaysOffSampler":272,"./trace/sampler/AlwaysOnSampler":273,"./trace/sampler/ParentBasedSampler":274,"./trace/sampler/TraceIdRatioBasedSampler":275,"./trace/suppress-tracing":276,"./utils/callback":277,"./utils/environment":278,"./utils/merge":280,"./utils/sampling":282,"./utils/url":283,"./utils/wrap":284,"./version":285,dup:108}],257:[function(require,module,exports){arguments[4][109][0].apply(exports,arguments)},{"../trace/suppress-tracing":276,"@opentelemetry/api":19,dup:109}],258:[function(require,module,exports){arguments[4][65][0].apply(exports,arguments)},{dup:65}],259:[function(require,module,exports){arguments[4][66][0].apply(exports,arguments)},{dup:66}],260:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{"../../utils/environment":278,"./globalThis":261,dup:67}],261:[function(require,module,exports){arguments[4][113][0].apply(exports,arguments)},{dup:113}],262:[function(require,module,exports){arguments[4][69][0].apply(exports,arguments)},{dup:69}],263:[function(require,module,exports){arguments[4][70][0].apply(exports,arguments)},{"./RandomIdGenerator":259,"./environment":260,"./globalThis":261,"./hex-to-base64":262,"./performance":264,"./sdk-info":265,"./timer-util":266,dup:70}],264:[function(require,module,exports){arguments[4][71][0].apply(exports,arguments)},{dup:71}],265:[function(require,module,exports){arguments[4][72][0].apply(exports,arguments)},{"../../version":285,"@opentelemetry/semantic-conventions":286,dup:72}],266:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73}],267:[function(require,module,exports){arguments[4][74][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:74}],268:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],269:[function(require,module,exports){arguments[4][76][0].apply(exports,arguments)},{"../internal/validators":258,dup:76}],270:[function(require,module,exports){arguments[4][77][0].apply(exports,arguments)},{"./TraceState":269,"./suppress-tracing":276,"@opentelemetry/api":19,dup:77}],271:[function(require,module,exports){arguments[4][78][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:78}],272:[function(require,module,exports){arguments[4][79][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:79}],273:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:80}],274:[function(require,module,exports){arguments[4][81][0].apply(exports,arguments)},{"../../common/global-error-handler":252,"./AlwaysOffSampler":272,"./AlwaysOnSampler":273,"@opentelemetry/api":19,dup:81}],275:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:82}],276:[function(require,module,exports){arguments[4][83][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:83}],277:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments)},{"./promise":281,dup:129}],278:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getEnvWithoutDefaults=exports.parseEnvironment=exports.DEFAULT_ENVIRONMENT=exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=void 0;const api_1=require("@opentelemetry/api");const sampling_1=require("./sampling");const globalThis_1=require("../platform/browser/globalThis");const DEFAULT_LIST_SEPARATOR=",";const ENVIRONMENT_BOOLEAN_KEYS=["OTEL_SDK_DISABLED"];function isEnvVarABoolean(key){return ENVIRONMENT_BOOLEAN_KEYS.indexOf(key)>-1}const ENVIRONMENT_NUMBERS_KEYS=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function isEnvVarANumber(key){return ENVIRONMENT_NUMBERS_KEYS.indexOf(key)>-1}const ENVIRONMENT_LISTS_KEYS=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function isEnvVarAList(key){return ENVIRONMENT_LISTS_KEYS.indexOf(key)>-1}exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=Infinity;exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=128;exports.DEFAULT_ENVIRONMENT={OTEL_SDK_DISABLED:false,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:api_1.DiagLogLevel.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function parseBoolean(key,environment,values){if(typeof values[key]==="undefined"){return}const value=String(values[key]);environment[key]=value.toLowerCase()==="true"}function parseNumber(name,environment,values,min=-Infinity,max=Infinity){if(typeof values[name]!=="undefined"){const value=Number(values[name]);if(!isNaN(value)){if(value<min){environment[name]=min}else if(value>max){environment[name]=max}else{environment[name]=value}}}}function parseStringList(name,output,input,separator=DEFAULT_LIST_SEPARATOR){const givenValue=input[name];if(typeof givenValue==="string"){output[name]=givenValue.split(separator).map((v=>v.trim()))}}const logLevelMap={ALL:api_1.DiagLogLevel.ALL,VERBOSE:api_1.DiagLogLevel.VERBOSE,DEBUG:api_1.DiagLogLevel.DEBUG,INFO:api_1.DiagLogLevel.INFO,WARN:api_1.DiagLogLevel.WARN,ERROR:api_1.DiagLogLevel.ERROR,NONE:api_1.DiagLogLevel.NONE};function setLogLevelFromEnv(key,environment,values){const value=values[key];if(typeof value==="string"){const theLevel=logLevelMap[value.toUpperCase()];if(theLevel!=null){environment[key]=theLevel}}}function parseEnvironment(values){const environment={};for(const env in exports.DEFAULT_ENVIRONMENT){const key=env;switch(key){case"OTEL_LOG_LEVEL":setLogLevelFromEnv(key,environment,values);break;default:if(isEnvVarABoolean(key)){parseBoolean(key,environment,values)}else if(isEnvVarANumber(key)){parseNumber(key,environment,values)}else if(isEnvVarAList(key)){parseStringList(key,environment,values)}else{const value=values[key];if(typeof value!=="undefined"&&value!==null){environment[key]=String(value)}}}}return environment}exports.parseEnvironment=parseEnvironment;function getEnvWithoutDefaults(){return typeof process!=="undefined"?parseEnvironment(process.env):parseEnvironment(globalThis_1._globalThis)}exports.getEnvWithoutDefaults=getEnvWithoutDefaults}).call(this)}).call(this,require("_process"))},{"../platform/browser/globalThis":261,"./sampling":282,"@opentelemetry/api":19,_process:674}],279:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments)},{dup:131}],280:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments)},{"./lodash.merge":279,dup:132}],281:[function(require,module,exports){arguments[4][88][0].apply(exports,arguments)},{dup:88}],282:[function(require,module,exports){arguments[4][89][0].apply(exports,arguments)},{dup:89}],283:[function(require,module,exports){arguments[4][90][0].apply(exports,arguments)},{dup:90}],284:[function(require,module,exports){arguments[4][91][0].apply(exports,arguments)},{dup:91}],285:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.9.1"},{}],286:[function(require,module,exports){arguments[4][155][0].apply(exports,arguments)},{"./resource":288,"./trace":290,dup:155}],287:[function(require,module,exports){arguments[4][156][0].apply(exports,arguments)},{dup:156}],288:[function(require,module,exports){arguments[4][157][0].apply(exports,arguments)},{"./SemanticResourceAttributes":287,dup:157}],289:[function(require,module,exports){arguments[4][158][0].apply(exports,arguments)},{dup:158}],290:[function(require,module,exports){arguments[4][159][0].apply(exports,arguments)},{"./SemanticAttributes":289,dup:159}],291:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Resource=void 0;const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const core_1=require("@opentelemetry/core");const platform_1=require("./platform");class Resource{constructor(attributes){this.attributes=attributes}static empty(){return Resource.EMPTY}static default(){return new Resource({[semantic_conventions_1.SemanticResourceAttributes.SERVICE_NAME]:(0,platform_1.defaultServiceName)(),[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_NAME]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_NAME],[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_VERSION]})}merge(other){if(!other||!Object.keys(other.attributes).length)return this;const mergedAttributes=Object.assign({},this.attributes,other.attributes);return new Resource(mergedAttributes)}}exports.Resource=Resource;Resource.EMPTY=new Resource({})},{"./platform":303,"@opentelemetry/core":63,"@opentelemetry/semantic-conventions":540}],292:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],293:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.browserDetector=void 0;const api_1=require("@opentelemetry/api");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const __1=require("..");class BrowserDetector{async detect(config){const isBrowser=typeof navigator!=="undefined";if(!isBrowser){return __1.Resource.empty()}const browserResource={[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_NAME]:"browser",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]:"Web Browser",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]:navigator.userAgent};return this._getResourceAttributes(browserResource,config)}_getResourceAttributes(browserResource,_config){if(browserResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]===""){api_1.diag.debug("BrowserDetector failed: Unable to find required browser resources. ");return __1.Resource.empty()}else{return new __1.Resource(Object.assign({},browserResource))}}}exports.browserDetector=new BrowserDetector},{"..":298,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":540}],294:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.envDetector=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const Resource_1=require("../Resource");class EnvDetector{constructor(){this._MAX_LENGTH=255;this._COMMA_SEPARATOR=",";this._LABEL_KEY_VALUE_SPLITTER="=";this._ERROR_MESSAGE_INVALID_CHARS="should be a ASCII string with a length greater than 0 and not exceed "+this._MAX_LENGTH+" characters.";this._ERROR_MESSAGE_INVALID_VALUE="should be a ASCII string with a length not exceed "+this._MAX_LENGTH+" characters."}async detect(_config){const attributes={};const env=(0,core_1.getEnv)();const rawAttributes=env.OTEL_RESOURCE_ATTRIBUTES;const serviceName=env.OTEL_SERVICE_NAME;if(rawAttributes){try{const parsedAttributes=this._parseResourceAttributes(rawAttributes);Object.assign(attributes,parsedAttributes)}catch(e){api_1.diag.debug(`EnvDetector failed: ${e.message}`)}}if(serviceName){attributes[semantic_conventions_1.SemanticResourceAttributes.SERVICE_NAME]=serviceName}return new Resource_1.Resource(attributes)}_parseResourceAttributes(rawEnvAttributes){if(!rawEnvAttributes)return{};const attributes={};const rawAttributes=rawEnvAttributes.split(this._COMMA_SEPARATOR,-1);for(const rawAttribute of rawAttributes){const keyValuePair=rawAttribute.split(this._LABEL_KEY_VALUE_SPLITTER,-1);if(keyValuePair.length!==2){continue}let[key,value]=keyValuePair;key=key.trim();value=value.trim().split(/^"|"$/).join("");if(!this._isValidAndNotEmpty(key)){throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`)}if(!this._isValid(value)){throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`)}attributes[key]=decodeURIComponent(value)}return attributes}_isValid(name){return name.length<=this._MAX_LENGTH&&this._isBaggageOctetString(name)}_isBaggageOctetString(str){for(let i=0;i<str.length;i++){const ch=str.charCodeAt(i);if(ch<33||ch===44||ch===59||ch===92||ch>126){return false}}return true}_isValidAndNotEmpty(str){return str.length>0&&this._isValid(str)}}exports.envDetector=new EnvDetector},{"../Resource":291,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/semantic-conventions":540}],295:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.noopDetector=exports.NoopDetector=void 0;const Resource_1=require("../Resource");class NoopDetector{async detect(){return new Resource_1.Resource({})}}exports.NoopDetector=NoopDetector;exports.noopDetector=new NoopDetector},{"../Resource":291}],296:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.processDetector=void 0;const api_1=require("@opentelemetry/api");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const Resource_1=require("../Resource");class ProcessDetector{async detect(config){if(typeof process!=="object"){return Resource_1.Resource.empty()}const processResource={[semantic_conventions_1.SemanticResourceAttributes.PROCESS_PID]:process.pid,[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]:process.title||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND]:process.argv[1]||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND_LINE]:process.argv.join(" ")||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]:process.versions.node,[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_NAME]:"nodejs",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]:"Node.js"};return this._getResourceAttributes(processResource,config)}_getResourceAttributes(processResource,_config){if(processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND_LINE]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]===""){api_1.diag.debug("ProcessDetector failed: Unable to find required process resources. ");return Resource_1.Resource.empty()}else{return new Resource_1.Resource(Object.assign({},processResource))}}}exports.processDetector=new ProcessDetector}).call(this)}).call(this,require("_process"))},{"../Resource":291,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":540,_process:674}],297:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./BrowserDetector"),exports);__exportStar(require("./EnvDetector"),exports);__exportStar(require("./ProcessDetector"),exports)},{"./BrowserDetector":293,"./EnvDetector":294,"./ProcessDetector":296}],298:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./Resource"),exports);__exportStar(require("./platform"),exports);__exportStar(require("./types"),exports);__exportStar(require("./config"),exports);__exportStar(require("./detectors"),exports)},{"./Resource":291,"./config":292,"./detectors":297,"./platform":303,"./types":304}],299:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.hostDetector=void 0;const NoopDetector_1=require("../../detectors/NoopDetector");exports.hostDetector=NoopDetector_1.noopDetector},{"../../detectors/NoopDetector":295}],300:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.osDetector=void 0;const NoopDetector_1=require("../../detectors/NoopDetector");exports.osDetector=NoopDetector_1.noopDetector},{"../../detectors/NoopDetector":295}],301:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.defaultServiceName=void 0;function defaultServiceName(){return"unknown_service"}exports.defaultServiceName=defaultServiceName},{}],302:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.detectResources=void 0;const Resource_1=require("../../Resource");const api_1=require("@opentelemetry/api");const detectResources=async(config={})=>{const internalConfig=Object.assign(config);const resources=await Promise.all((internalConfig.detectors||[]).map((async d=>{try{const resource=await d.detect(internalConfig);api_1.diag.debug(`${d.constructor.name} found resource.`,resource);return resource}catch(e){api_1.diag.debug(`${d.constructor.name} failed: ${e.message}`);return Resource_1.Resource.empty()}})));return resources.reduce(((acc,resource)=>acc.merge(resource)),Resource_1.Resource.empty())};exports.detectResources=detectResources},{"../../Resource":291,"@opentelemetry/api":19}],303:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./default-service-name"),exports);__exportStar(require("./detect-resources"),exports);__exportStar(require("./HostDetector"),exports);__exportStar(require("./OSDetector"),exports)},{"./HostDetector":299,"./OSDetector":300,"./default-service-name":301,"./detect-resources":302}],304:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],305:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isDescriptorCompatibleWith=exports.createInstrumentDescriptorWithView=exports.createInstrumentDescriptor=exports.InstrumentType=void 0;const api_1=require("@opentelemetry/api");var InstrumentType;(function(InstrumentType){InstrumentType["COUNTER"]="COUNTER";InstrumentType["HISTOGRAM"]="HISTOGRAM";InstrumentType["UP_DOWN_COUNTER"]="UP_DOWN_COUNTER";InstrumentType["OBSERVABLE_COUNTER"]="OBSERVABLE_COUNTER";InstrumentType["OBSERVABLE_GAUGE"]="OBSERVABLE_GAUGE";InstrumentType["OBSERVABLE_UP_DOWN_COUNTER"]="OBSERVABLE_UP_DOWN_COUNTER"})(InstrumentType=exports.InstrumentType||(exports.InstrumentType={}));function createInstrumentDescriptor(name,type,options){var _a,_b,_c;return{name:name,type:type,description:(_a=options===null||options===void 0?void 0:options.description)!==null&&_a!==void 0?_a:"",unit:(_b=options===null||options===void 0?void 0:options.unit)!==null&&_b!==void 0?_b:"",valueType:(_c=options===null||options===void 0?void 0:options.valueType)!==null&&_c!==void 0?_c:api_1.ValueType.DOUBLE}}exports.createInstrumentDescriptor=createInstrumentDescriptor;function createInstrumentDescriptorWithView(view,instrument){var _a,_b;return{name:(_a=view.name)!==null&&_a!==void 0?_a:instrument.name,description:(_b=view.description)!==null&&_b!==void 0?_b:instrument.description,type:instrument.type,unit:instrument.unit,valueType:instrument.valueType}}exports.createInstrumentDescriptorWithView=createInstrumentDescriptorWithView;function isDescriptorCompatibleWith(descriptor,otherDescriptor){return descriptor.name===otherDescriptor.name&&descriptor.unit===otherDescriptor.unit&&descriptor.type===otherDescriptor.type&&descriptor.valueType===otherDescriptor.valueType}exports.isDescriptorCompatibleWith=isDescriptorCompatibleWith},{"@opentelemetry/api":19}],306:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isObservableInstrument=exports.ObservableUpDownCounterInstrument=exports.ObservableGaugeInstrument=exports.ObservableCounterInstrument=exports.ObservableInstrument=exports.HistogramInstrument=exports.CounterInstrument=exports.UpDownCounterInstrument=exports.SyncInstrument=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class SyncInstrument{constructor(_writableMetricStorage,_descriptor){this._writableMetricStorage=_writableMetricStorage;this._descriptor=_descriptor}_record(value,attributes={},context=api_1.context.active()){if(this._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}this._writableMetricStorage.record(value,attributes,context,(0,core_1.millisToHrTime)(Date.now()))}}exports.SyncInstrument=SyncInstrument;class UpDownCounterInstrument extends SyncInstrument{add(value,attributes,ctx){this._record(value,attributes,ctx)}}exports.UpDownCounterInstrument=UpDownCounterInstrument;class CounterInstrument extends SyncInstrument{add(value,attributes,ctx){if(value<0){api_1.diag.warn(`negative value provided to counter ${this._descriptor.name}: ${value}`);return}this._record(value,attributes,ctx)}}exports.CounterInstrument=CounterInstrument;class HistogramInstrument extends SyncInstrument{record(value,attributes,ctx){if(value<0){api_1.diag.warn(`negative value provided to histogram ${this._descriptor.name}: ${value}`);return}this._record(value,attributes,ctx)}}exports.HistogramInstrument=HistogramInstrument;class ObservableInstrument{constructor(descriptor,metricStorages,_observableRegistry){this._observableRegistry=_observableRegistry;this._descriptor=descriptor;this._metricStorages=metricStorages}addCallback(callback){this._observableRegistry.addCallback(callback,this)}removeCallback(callback){this._observableRegistry.removeCallback(callback,this)}}exports.ObservableInstrument=ObservableInstrument;class ObservableCounterInstrument extends ObservableInstrument{}exports.ObservableCounterInstrument=ObservableCounterInstrument;class ObservableGaugeInstrument extends ObservableInstrument{}exports.ObservableGaugeInstrument=ObservableGaugeInstrument;class ObservableUpDownCounterInstrument extends ObservableInstrument{}exports.ObservableUpDownCounterInstrument=ObservableUpDownCounterInstrument;function isObservableInstrument(it){return it instanceof ObservableInstrument}exports.isObservableInstrument=isObservableInstrument},{"@opentelemetry/api":19,"@opentelemetry/core":355}],307:[function(require,module,exports){arguments[4][182][0].apply(exports,arguments)},{"./InstrumentDescriptor":305,"./Instruments":306,dup:182}],308:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterProvider=void 0;const api_1=require("@opentelemetry/api");const resources_1=require("@opentelemetry/resources");const MeterProviderSharedState_1=require("./state/MeterProviderSharedState");const MetricCollector_1=require("./state/MetricCollector");class MeterProvider{constructor(options){var _a;this._shutdown=false;const resource=resources_1.Resource.default().merge((_a=options===null||options===void 0?void 0:options.resource)!==null&&_a!==void 0?_a:resources_1.Resource.empty());this._sharedState=new MeterProviderSharedState_1.MeterProviderSharedState(resource);if((options===null||options===void 0?void 0:options.views)!=null&&options.views.length>0){for(const view of options.views){this._sharedState.viewRegistry.addView(view)}}}getMeter(name,version="",options={}){if(this._shutdown){api_1.diag.warn("A shutdown MeterProvider cannot provide a Meter");return(0,api_1.createNoopMeter)()}return this._sharedState.getMeterSharedState({name:name,version:version,schemaUrl:options.schemaUrl}).meter}addMetricReader(metricReader){const collector=new MetricCollector_1.MetricCollector(this._sharedState,metricReader);metricReader.setMetricProducer(collector);this._sharedState.metricCollectors.push(collector)}async shutdown(options){if(this._shutdown){api_1.diag.warn("shutdown may only be called once per MeterProvider");return}this._shutdown=true;await Promise.all(this._sharedState.metricCollectors.map((collector=>collector.shutdown(options))))}async forceFlush(options){if(this._shutdown){api_1.diag.warn("invalid attempt to force flush after MeterProvider shutdown");return}await Promise.all(this._sharedState.metricCollectors.map((collector=>collector.forceFlush(options))))}}exports.MeterProvider=MeterProvider},{"./state/MeterProviderSharedState":327,"./state/MetricCollector":329,"@opentelemetry/api":19,"@opentelemetry/resources":398}],309:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchObservableResultImpl=exports.ObservableResultImpl=void 0;const api_1=require("@opentelemetry/api");const HashMap_1=require("./state/HashMap");const Instruments_1=require("./Instruments");class ObservableResultImpl{constructor(_descriptor){this._descriptor=_descriptor;this._buffer=new HashMap_1.AttributeHashMap}observe(value,attributes={}){if(this._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${this._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}this._buffer.set(attributes,value)}}exports.ObservableResultImpl=ObservableResultImpl;class BatchObservableResultImpl{constructor(){this._buffer=new Map}observe(metric,value,attributes={}){if(!(0,Instruments_1.isObservableInstrument)(metric)){return}let map=this._buffer.get(metric);if(map==null){map=new HashMap_1.AttributeHashMap;this._buffer.set(metric,map)}if(metric._descriptor.valueType===api_1.ValueType.INT&&!Number.isInteger(value)){api_1.diag.warn(`INT value type cannot accept a floating-point value for ${metric._descriptor.name}, ignoring the fractional digits.`);value=Math.trunc(value)}map.set(attributes,value)}}exports.BatchObservableResultImpl=BatchObservableResultImpl},{"./Instruments":306,"./state/HashMap":326,"@opentelemetry/api":19}],310:[function(require,module,exports){arguments[4][185][0].apply(exports,arguments)},{"./types":315,dup:185}],311:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.HistogramAggregator=exports.HistogramAccumulation=void 0;const types_1=require("./types");const MetricData_1=require("../export/MetricData");const InstrumentDescriptor_1=require("../InstrumentDescriptor");const utils_1=require("../utils");function createNewEmptyCheckpoint(boundaries){const counts=boundaries.map((()=>0));counts.push(0);return{buckets:{boundaries:boundaries,counts:counts},sum:0,count:0,hasMinMax:false,min:Infinity,max:-Infinity}}class HistogramAccumulation{constructor(startTime,_boundaries,_recordMinMax=true,_current=createNewEmptyCheckpoint(_boundaries)){this.startTime=startTime;this._boundaries=_boundaries;this._recordMinMax=_recordMinMax;this._current=_current}record(value){this._current.count+=1;this._current.sum+=value;if(this._recordMinMax){this._current.min=Math.min(value,this._current.min);this._current.max=Math.max(value,this._current.max);this._current.hasMinMax=true}const idx=(0,utils_1.binarySearchLB)(this._boundaries,value);this._current.buckets.counts[idx+1]+=1}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.HistogramAccumulation=HistogramAccumulation;class HistogramAggregator{constructor(_boundaries,_recordMinMax){this._boundaries=_boundaries;this._recordMinMax=_recordMinMax;this.kind=types_1.AggregatorKind.HISTOGRAM}createAccumulation(startTime){return new HistogramAccumulation(startTime,this._boundaries,this._recordMinMax)}merge(previous,delta){const previousValue=previous.toPointValue();const deltaValue=delta.toPointValue();const previousCounts=previousValue.buckets.counts;const deltaCounts=deltaValue.buckets.counts;const mergedCounts=new Array(previousCounts.length);for(let idx=0;idx<previousCounts.length;idx++){mergedCounts[idx]=previousCounts[idx]+deltaCounts[idx]}let min=Infinity;let max=-Infinity;if(this._recordMinMax){if(previousValue.hasMinMax&&deltaValue.hasMinMax){min=Math.min(previousValue.min,deltaValue.min);max=Math.max(previousValue.max,deltaValue.max)}else if(previousValue.hasMinMax){min=previousValue.min;max=previousValue.max}else if(deltaValue.hasMinMax){min=deltaValue.min;max=deltaValue.max}}return new HistogramAccumulation(previous.startTime,previousValue.buckets.boundaries,this._recordMinMax,{buckets:{boundaries:previousValue.buckets.boundaries,counts:mergedCounts},count:previousValue.count+deltaValue.count,sum:previousValue.sum+deltaValue.sum,hasMinMax:this._recordMinMax&&(previousValue.hasMinMax||deltaValue.hasMinMax),min:min,max:max})}diff(previous,current){const previousValue=previous.toPointValue();const currentValue=current.toPointValue();const previousCounts=previousValue.buckets.counts;const currentCounts=currentValue.buckets.counts;const diffedCounts=new Array(previousCounts.length);for(let idx=0;idx<previousCounts.length;idx++){diffedCounts[idx]=currentCounts[idx]-previousCounts[idx]}return new HistogramAccumulation(current.startTime,previousValue.buckets.boundaries,this._recordMinMax,{buckets:{boundaries:previousValue.buckets.boundaries,counts:diffedCounts},count:currentValue.count-previousValue.count,sum:currentValue.sum-previousValue.sum,hasMinMax:false,min:Infinity,max:-Infinity})}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.HISTOGRAM,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>{const pointValue=accumulation.toPointValue();const allowsNegativeValues=descriptor.type===InstrumentDescriptor_1.InstrumentType.UP_DOWN_COUNTER||descriptor.type===InstrumentDescriptor_1.InstrumentType.OBSERVABLE_GAUGE||descriptor.type===InstrumentDescriptor_1.InstrumentType.OBSERVABLE_UP_DOWN_COUNTER;return{attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:{min:pointValue.hasMinMax?pointValue.min:undefined,max:pointValue.hasMinMax?pointValue.max:undefined,sum:!allowsNegativeValues?pointValue.sum:undefined,buckets:pointValue.buckets,count:pointValue.count}}}))}}}exports.HistogramAggregator=HistogramAggregator},{"../InstrumentDescriptor":305,"../export/MetricData":320,"../utils":336,"./types":315}],312:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LastValueAggregator=exports.LastValueAccumulation=void 0;const types_1=require("./types");const core_1=require("@opentelemetry/core");const MetricData_1=require("../export/MetricData");class LastValueAccumulation{constructor(startTime,_current=0,sampleTime=[0,0]){this.startTime=startTime;this._current=_current;this.sampleTime=sampleTime}record(value){this._current=value;this.sampleTime=(0,core_1.millisToHrTime)(Date.now())}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.LastValueAccumulation=LastValueAccumulation;class LastValueAggregator{constructor(){this.kind=types_1.AggregatorKind.LAST_VALUE}createAccumulation(startTime){return new LastValueAccumulation(startTime)}merge(previous,delta){const latestAccumulation=(0,core_1.hrTimeToMicroseconds)(delta.sampleTime)>=(0,core_1.hrTimeToMicroseconds)(previous.sampleTime)?delta:previous;return new LastValueAccumulation(previous.startTime,latestAccumulation.toPointValue(),latestAccumulation.sampleTime)}diff(previous,current){const latestAccumulation=(0,core_1.hrTimeToMicroseconds)(current.sampleTime)>=(0,core_1.hrTimeToMicroseconds)(previous.sampleTime)?current:previous;return new LastValueAccumulation(current.startTime,latestAccumulation.toPointValue(),latestAccumulation.sampleTime)}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.GAUGE,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>({attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:accumulation.toPointValue()})))}}}exports.LastValueAggregator=LastValueAggregator},{"../export/MetricData":320,"./types":315,"@opentelemetry/core":355}],313:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SumAggregator=exports.SumAccumulation=void 0;const types_1=require("./types");const MetricData_1=require("../export/MetricData");class SumAccumulation{constructor(startTime,monotonic,_current=0,reset=false){this.startTime=startTime;this.monotonic=monotonic;this._current=_current;this.reset=reset}record(value){if(this.monotonic&&value<0){return}this._current+=value}setStartTime(startTime){this.startTime=startTime}toPointValue(){return this._current}}exports.SumAccumulation=SumAccumulation;class SumAggregator{constructor(monotonic){this.monotonic=monotonic;this.kind=types_1.AggregatorKind.SUM}createAccumulation(startTime){return new SumAccumulation(startTime,this.monotonic)}merge(previous,delta){const prevPv=previous.toPointValue();const deltaPv=delta.toPointValue();if(delta.reset){return new SumAccumulation(delta.startTime,this.monotonic,deltaPv,delta.reset)}return new SumAccumulation(previous.startTime,this.monotonic,prevPv+deltaPv)}diff(previous,current){const prevPv=previous.toPointValue();const currPv=current.toPointValue();if(this.monotonic&&prevPv>currPv){return new SumAccumulation(current.startTime,this.monotonic,currPv,true)}return new SumAccumulation(current.startTime,this.monotonic,currPv-prevPv)}toMetricData(descriptor,aggregationTemporality,accumulationByAttributes,endTime){return{descriptor:descriptor,aggregationTemporality:aggregationTemporality,dataPointType:MetricData_1.DataPointType.SUM,dataPoints:accumulationByAttributes.map((([attributes,accumulation])=>({attributes:attributes,startTime:accumulation.startTime,endTime:endTime,value:accumulation.toPointValue()}))),isMonotonic:this.monotonic}}}exports.SumAggregator=SumAggregator},{"../export/MetricData":320,"./types":315}],314:[function(require,module,exports){arguments[4][189][0].apply(exports,arguments)},{"./Drop":310,"./Histogram":311,"./LastValue":312,"./Sum":313,dup:189}],315:[function(require,module,exports){arguments[4][190][0].apply(exports,arguments)},{dup:190}],316:[function(require,module,exports){arguments[4][191][0].apply(exports,arguments)},{"../view/Aggregation":337,"./AggregationTemporality":317,dup:191}],317:[function(require,module,exports){arguments[4][192][0].apply(exports,arguments)},{dup:192}],318:[function(require,module,exports){(function(setImmediate){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ConsoleMetricExporter=void 0;const core_1=require("@opentelemetry/core");const AggregationSelector_1=require("./AggregationSelector");class ConsoleMetricExporter{constructor(options){var _a;this._shutdown=false;this._temporalitySelector=(_a=options===null||options===void 0?void 0:options.temporalitySelector)!==null&&_a!==void 0?_a:AggregationSelector_1.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR}export(metrics,resultCallback){if(this._shutdown){setImmediate(resultCallback,{code:core_1.ExportResultCode.FAILED});return}return ConsoleMetricExporter._sendMetrics(metrics,resultCallback)}forceFlush(){return Promise.resolve()}selectAggregationTemporality(_instrumentType){return this._temporalitySelector(_instrumentType)}shutdown(){this._shutdown=true;return Promise.resolve()}static _sendMetrics(metrics,done){for(const scopeMetrics of metrics.scopeMetrics){for(const metric of scopeMetrics.metrics){console.dir({descriptor:metric.descriptor,dataPointType:metric.dataPointType,dataPoints:metric.dataPoints})}}done({code:core_1.ExportResultCode.SUCCESS})}}exports.ConsoleMetricExporter=ConsoleMetricExporter}).call(this)}).call(this,require("timers").setImmediate)},{"./AggregationSelector":316,"@opentelemetry/core":355,timers:676}],319:[function(require,module,exports){arguments[4][194][0].apply(exports,arguments)},{"@opentelemetry/core":355,dup:194}],320:[function(require,module,exports){arguments[4][195][0].apply(exports,arguments)},{dup:195}],321:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricReader=void 0;const api=require("@opentelemetry/api");const utils_1=require("../utils");const AggregationSelector_1=require("./AggregationSelector");class MetricReader{constructor(options){var _a,_b;this._shutdown=false;this._aggregationSelector=(_a=options===null||options===void 0?void 0:options.aggregationSelector)!==null&&_a!==void 0?_a:AggregationSelector_1.DEFAULT_AGGREGATION_SELECTOR;this._aggregationTemporalitySelector=(_b=options===null||options===void 0?void 0:options.aggregationTemporalitySelector)!==null&&_b!==void 0?_b:AggregationSelector_1.DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR}setMetricProducer(metricProducer){if(this._metricProducer){throw new Error("MetricReader can not be bound to a MeterProvider again.")}this._metricProducer=metricProducer;this.onInitialized()}selectAggregation(instrumentType){return this._aggregationSelector(instrumentType)}selectAggregationTemporality(instrumentType){return this._aggregationTemporalitySelector(instrumentType)}onInitialized(){}async collect(options){if(this._metricProducer===undefined){throw new Error("MetricReader is not bound to a MetricProducer")}if(this._shutdown){throw new Error("MetricReader is shutdown")}return this._metricProducer.collect({timeoutMillis:options===null||options===void 0?void 0:options.timeoutMillis})}async shutdown(options){if(this._shutdown){api.diag.error("Cannot call shutdown twice.");return}if((options===null||options===void 0?void 0:options.timeoutMillis)==null){await this.onShutdown()}else{await(0,utils_1.callWithTimeout)(this.onShutdown(),options.timeoutMillis)}this._shutdown=true}async forceFlush(options){if(this._shutdown){api.diag.warn("Cannot forceFlush on already shutdown MetricReader.");return}if((options===null||options===void 0?void 0:options.timeoutMillis)==null){await this.onForceFlush();return}await(0,utils_1.callWithTimeout)(this.onForceFlush(),options.timeoutMillis)}}exports.MetricReader=MetricReader},{"../utils":336,"./AggregationSelector":316,"@opentelemetry/api":19}],322:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PeriodicExportingMetricReader=void 0;const api=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const MetricReader_1=require("./MetricReader");const utils_1=require("../utils");const api_1=require("@opentelemetry/api");class PeriodicExportingMetricReader extends MetricReader_1.MetricReader{constructor(options){var _a,_b,_c,_d;super({aggregationSelector:(_a=options.exporter.selectAggregation)===null||_a===void 0?void 0:_a.bind(options.exporter),aggregationTemporalitySelector:(_b=options.exporter.selectAggregationTemporality)===null||_b===void 0?void 0:_b.bind(options.exporter)});if(options.exportIntervalMillis!==undefined&&options.exportIntervalMillis<=0){throw Error("exportIntervalMillis must be greater than 0")}if(options.exportTimeoutMillis!==undefined&&options.exportTimeoutMillis<=0){throw Error("exportTimeoutMillis must be greater than 0")}if(options.exportTimeoutMillis!==undefined&&options.exportIntervalMillis!==undefined&&options.exportIntervalMillis<options.exportTimeoutMillis){throw Error("exportIntervalMillis must be greater than or equal to exportTimeoutMillis")}this._exportInterval=(_c=options.exportIntervalMillis)!==null&&_c!==void 0?_c:6e4;this._exportTimeout=(_d=options.exportTimeoutMillis)!==null&&_d!==void 0?_d:3e4;this._exporter=options.exporter}async _runOnce(){try{await(0,utils_1.callWithTimeout)(this._doRun(),this._exportTimeout)}catch(err){if(err instanceof utils_1.TimeoutError){api.diag.error("Export took longer than %s milliseconds and timed out.",this._exportTimeout);return}(0,core_1.globalErrorHandler)(err)}}async _doRun(){var _a,_b;const{resourceMetrics:resourceMetrics,errors:errors}=await this.collect({timeoutMillis:this._exportTimeout});if(errors.length>0){api.diag.error("PeriodicExportingMetricReader: metrics collection errors",...errors)}const doExport=async()=>{const result=await core_1.internal._export(this._exporter,resourceMetrics);if(result.code!==core_1.ExportResultCode.SUCCESS){throw new Error(`PeriodicExportingMetricReader: metrics export failed (error ${result.error})`)}};if(resourceMetrics.resource.asyncAttributesPending){(_b=(_a=resourceMetrics.resource).waitForAsyncAttributes)===null||_b===void 0?void 0:_b.call(_a).then(doExport,(err=>api_1.diag.debug("Error while resolving async portion of resource: ",err)))}else{await doExport()}}onInitialized(){this._interval=setInterval((()=>{void this._runOnce()}),this._exportInterval);(0,core_1.unrefTimer)(this._interval)}async onForceFlush(){await this._runOnce();await this._exporter.forceFlush()}async onShutdown(){if(this._interval){clearInterval(this._interval)}await this._exporter.shutdown()}}exports.PeriodicExportingMetricReader=PeriodicExportingMetricReader},{"../utils":336,"./MetricReader":321,"@opentelemetry/api":19,"@opentelemetry/core":355}],323:[function(require,module,exports){arguments[4][198][0].apply(exports,arguments)},{"./InstrumentDescriptor":305,"./MeterProvider":308,"./export/AggregationTemporality":317,"./export/ConsoleMetricExporter":318,"./export/InMemoryMetricExporter":319,"./export/MetricData":320,"./export/MetricReader":321,"./export/PeriodicExportingMetricReader":322,"./utils":336,"./view/Aggregation":337,"./view/View":343,dup:198}],324:[function(require,module,exports){arguments[4][199][0].apply(exports,arguments)},{"./DeltaMetricProcessor":325,"./HashMap":326,"./MetricStorage":330,"./TemporalMetricProcessor":335,dup:199}],325:[function(require,module,exports){arguments[4][200][0].apply(exports,arguments)},{"./HashMap":326,dup:200}],326:[function(require,module,exports){arguments[4][201][0].apply(exports,arguments)},{"../utils":336,dup:201}],327:[function(require,module,exports){arguments[4][202][0].apply(exports,arguments)},{"../utils":336,"../view/ViewRegistry":344,"./MeterSharedState":328,dup:202}],328:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MeterSharedState=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");const Meter_1=require("../Meter");const utils_1=require("../utils");const AsyncMetricStorage_1=require("./AsyncMetricStorage");const MetricStorageRegistry_1=require("./MetricStorageRegistry");const MultiWritableMetricStorage_1=require("./MultiWritableMetricStorage");const ObservableRegistry_1=require("./ObservableRegistry");const SyncMetricStorage_1=require("./SyncMetricStorage");const AttributesProcessor_1=require("../view/AttributesProcessor");class MeterSharedState{constructor(_meterProviderSharedState,_instrumentationScope){this._meterProviderSharedState=_meterProviderSharedState;this._instrumentationScope=_instrumentationScope;this.metricStorageRegistry=new MetricStorageRegistry_1.MetricStorageRegistry;this.observableRegistry=new ObservableRegistry_1.ObservableRegistry;this.meter=new Meter_1.Meter(this)}registerMetricStorage(descriptor){const storages=this._registerMetricStorage(descriptor,SyncMetricStorage_1.SyncMetricStorage);if(storages.length===1){return storages[0]}return new MultiWritableMetricStorage_1.MultiMetricStorage(storages)}registerAsyncMetricStorage(descriptor){const storages=this._registerMetricStorage(descriptor,AsyncMetricStorage_1.AsyncMetricStorage);return storages}async collect(collector,collectionTime,options){const errors=await this.observableRegistry.observe(collectionTime,options===null||options===void 0?void 0:options.timeoutMillis);const metricDataList=Array.from(this.metricStorageRegistry.getStorages(collector)).map((metricStorage=>metricStorage.collect(collector,this._meterProviderSharedState.metricCollectors,collectionTime))).filter(utils_1.isNotNullish);return{scopeMetrics:{scope:this._instrumentationScope,metrics:metricDataList.filter(utils_1.isNotNullish)},errors:errors}}_registerMetricStorage(descriptor,MetricStorageType){const views=this._meterProviderSharedState.viewRegistry.findViews(descriptor,this._instrumentationScope);let storages=views.map((view=>{const viewDescriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptorWithView)(view,descriptor);const compatibleStorage=this.metricStorageRegistry.findOrUpdateCompatibleStorage(viewDescriptor);if(compatibleStorage!=null){return compatibleStorage}const aggregator=view.aggregation.createAggregator(viewDescriptor);const viewStorage=new MetricStorageType(viewDescriptor,aggregator,view.attributesProcessor);this.metricStorageRegistry.register(viewStorage);return viewStorage}));if(storages.length===0){const perCollectorAggregations=this._meterProviderSharedState.selectAggregations(descriptor.type);const collectorStorages=perCollectorAggregations.map((([collector,aggregation])=>{const compatibleStorage=this.metricStorageRegistry.findOrUpdateCompatibleCollectorStorage(collector,descriptor);if(compatibleStorage!=null){return compatibleStorage}const aggregator=aggregation.createAggregator(descriptor);const storage=new MetricStorageType(descriptor,aggregator,AttributesProcessor_1.AttributesProcessor.Noop());this.metricStorageRegistry.registerForCollector(collector,storage);return storage}));storages=storages.concat(collectorStorages)}return storages}}exports.MeterSharedState=MeterSharedState},{"../InstrumentDescriptor":305,"../Meter":307,"../utils":336,"../view/AttributesProcessor":338,"./AsyncMetricStorage":324,"./MetricStorageRegistry":331,"./MultiWritableMetricStorage":332,"./ObservableRegistry":333,"./SyncMetricStorage":334}],329:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricCollector=void 0;const core_1=require("@opentelemetry/core");const utils_1=require("../utils");class MetricCollector{constructor(_sharedState,_metricReader){this._sharedState=_sharedState;this._metricReader=_metricReader}async collect(options){const collectionTime=(0,core_1.millisToHrTime)(Date.now());const meterCollectionPromises=Array.from(this._sharedState.meterSharedStates.values()).map((meterSharedState=>meterSharedState.collect(this,collectionTime,options)));const result=await Promise.all(meterCollectionPromises);return{resourceMetrics:{resource:this._sharedState.resource,scopeMetrics:result.map((it=>it.scopeMetrics))},errors:(0,utils_1.FlatMap)(result,(it=>it.errors))}}async forceFlush(options){await this._metricReader.forceFlush(options)}async shutdown(options){await this._metricReader.shutdown(options)}selectAggregationTemporality(instrumentType){return this._metricReader.selectAggregationTemporality(instrumentType)}selectAggregation(instrumentType){return this._metricReader.selectAggregation(instrumentType)}}exports.MetricCollector=MetricCollector},{"../utils":336,"@opentelemetry/core":355}],330:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricStorage=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");class MetricStorage{constructor(_instrumentDescriptor){this._instrumentDescriptor=_instrumentDescriptor}getInstrumentDescriptor(){return this._instrumentDescriptor}updateDescription(description){this._instrumentDescriptor=(0,InstrumentDescriptor_1.createInstrumentDescriptor)(this._instrumentDescriptor.name,this._instrumentDescriptor.type,{description:description,valueType:this._instrumentDescriptor.valueType,unit:this._instrumentDescriptor.unit})}}exports.MetricStorage=MetricStorage},{"../InstrumentDescriptor":305}],331:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MetricStorageRegistry=void 0;const InstrumentDescriptor_1=require("../InstrumentDescriptor");const api=require("@opentelemetry/api");const RegistrationConflicts_1=require("../view/RegistrationConflicts");class MetricStorageRegistry{constructor(){this._sharedRegistry=new Map;this._perCollectorRegistry=new Map}static create(){return new MetricStorageRegistry}getStorages(collector){let storages=[];for(const metricStorages of this._sharedRegistry.values()){storages=storages.concat(metricStorages)}const perCollectorStorages=this._perCollectorRegistry.get(collector);if(perCollectorStorages!=null){for(const metricStorages of perCollectorStorages.values()){storages=storages.concat(metricStorages)}}return storages}register(storage){this._registerStorage(storage,this._sharedRegistry)}registerForCollector(collector,storage){let storageMap=this._perCollectorRegistry.get(collector);if(storageMap==null){storageMap=new Map;this._perCollectorRegistry.set(collector,storageMap)}this._registerStorage(storage,storageMap)}findOrUpdateCompatibleStorage(expectedDescriptor){const storages=this._sharedRegistry.get(expectedDescriptor.name);if(storages===undefined){return null}return this._findOrUpdateCompatibleStorage(expectedDescriptor,storages)}findOrUpdateCompatibleCollectorStorage(collector,expectedDescriptor){const storageMap=this._perCollectorRegistry.get(collector);if(storageMap===undefined){return null}const storages=storageMap.get(expectedDescriptor.name);if(storages===undefined){return null}return this._findOrUpdateCompatibleStorage(expectedDescriptor,storages)}_registerStorage(storage,storageMap){const descriptor=storage.getInstrumentDescriptor();const storages=storageMap.get(descriptor.name);if(storages===undefined){storageMap.set(descriptor.name,[storage]);return}storages.push(storage)}_findOrUpdateCompatibleStorage(expectedDescriptor,existingStorages){let compatibleStorage=null;for(const existingStorage of existingStorages){const existingDescriptor=existingStorage.getInstrumentDescriptor();if((0,InstrumentDescriptor_1.isDescriptorCompatibleWith)(existingDescriptor,expectedDescriptor)){if(existingDescriptor.description!==expectedDescriptor.description){if(expectedDescriptor.description.length>existingDescriptor.description.length){existingStorage.updateDescription(expectedDescriptor.description)}api.diag.warn("A view or instrument with the name ",expectedDescriptor.name," has already been registered, but has a different description and is incompatible with another registered view.\n","Details:\n",(0,RegistrationConflicts_1.getIncompatibilityDetails)(existingDescriptor,expectedDescriptor),"The longer description will be used.\nTo resolve the conflict:",(0,RegistrationConflicts_1.getConflictResolutionRecipe)(existingDescriptor,expectedDescriptor))}compatibleStorage=existingStorage}else{api.diag.warn("A view or instrument with the name ",expectedDescriptor.name," has already been registered and is incompatible with another registered view.\n","Details:\n",(0,RegistrationConflicts_1.getIncompatibilityDetails)(existingDescriptor,expectedDescriptor),"To resolve the conflict:\n",(0,RegistrationConflicts_1.getConflictResolutionRecipe)(existingDescriptor,expectedDescriptor))}}return compatibleStorage}}exports.MetricStorageRegistry=MetricStorageRegistry},{"../InstrumentDescriptor":305,"../view/RegistrationConflicts":342,"@opentelemetry/api":19}],332:[function(require,module,exports){arguments[4][207][0].apply(exports,arguments)},{dup:207}],333:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ObservableRegistry=void 0;const api_1=require("@opentelemetry/api");const Instruments_1=require("../Instruments");const ObservableResult_1=require("../ObservableResult");const utils_1=require("../utils");class ObservableRegistry{constructor(){this._callbacks=[];this._batchCallbacks=[]}addCallback(callback,instrument){const idx=this._findCallback(callback,instrument);if(idx>=0){return}this._callbacks.push({callback:callback,instrument:instrument})}removeCallback(callback,instrument){const idx=this._findCallback(callback,instrument);if(idx<0){return}this._callbacks.splice(idx,1)}addBatchCallback(callback,instruments){const observableInstruments=new Set(instruments.filter(Instruments_1.isObservableInstrument));if(observableInstruments.size===0){api_1.diag.error("BatchObservableCallback is not associated with valid instruments",instruments);return}const idx=this._findBatchCallback(callback,observableInstruments);if(idx>=0){return}this._batchCallbacks.push({callback:callback,instruments:observableInstruments})}removeBatchCallback(callback,instruments){const observableInstruments=new Set(instruments.filter(Instruments_1.isObservableInstrument));const idx=this._findBatchCallback(callback,observableInstruments);if(idx<0){return}this._batchCallbacks.splice(idx,1)}async observe(collectionTime,timeoutMillis){const callbackFutures=this._observeCallbacks(collectionTime,timeoutMillis);const batchCallbackFutures=this._observeBatchCallbacks(collectionTime,timeoutMillis);const results=await(0,utils_1.PromiseAllSettled)([...callbackFutures,...batchCallbackFutures]);const rejections=results.filter(utils_1.isPromiseAllSettledRejectionResult).map((it=>it.reason));return rejections}_observeCallbacks(observationTime,timeoutMillis){return this._callbacks.map((async({callback:callback,instrument:instrument})=>{const observableResult=new ObservableResult_1.ObservableResultImpl(instrument._descriptor);let callPromise=Promise.resolve(callback(observableResult));if(timeoutMillis!=null){callPromise=(0,utils_1.callWithTimeout)(callPromise,timeoutMillis)}await callPromise;instrument._metricStorages.forEach((metricStorage=>{metricStorage.record(observableResult._buffer,observationTime)}))}))}_observeBatchCallbacks(observationTime,timeoutMillis){return this._batchCallbacks.map((async({callback:callback,instruments:instruments})=>{const observableResult=new ObservableResult_1.BatchObservableResultImpl;let callPromise=Promise.resolve(callback(observableResult));if(timeoutMillis!=null){callPromise=(0,utils_1.callWithTimeout)(callPromise,timeoutMillis)}await callPromise;instruments.forEach((instrument=>{const buffer=observableResult._buffer.get(instrument);if(buffer==null){return}instrument._metricStorages.forEach((metricStorage=>{metricStorage.record(buffer,observationTime)}))}))}))}_findCallback(callback,instrument){return this._callbacks.findIndex((record=>record.callback===callback&&record.instrument===instrument))}_findBatchCallback(callback,instruments){return this._batchCallbacks.findIndex((record=>record.callback===callback&&(0,utils_1.setEquals)(record.instruments,instruments)))}}exports.ObservableRegistry=ObservableRegistry},{"../Instruments":306,"../ObservableResult":309,"../utils":336,"@opentelemetry/api":19}],334:[function(require,module,exports){arguments[4][209][0].apply(exports,arguments)},{"./DeltaMetricProcessor":325,"./MetricStorage":330,"./TemporalMetricProcessor":335,dup:209}],335:[function(require,module,exports){arguments[4][210][0].apply(exports,arguments)},{"../export/AggregationTemporality":317,"./HashMap":326,dup:210}],336:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.binarySearchLB=exports.setEquals=exports.FlatMap=exports.isPromiseAllSettledRejectionResult=exports.PromiseAllSettled=exports.callWithTimeout=exports.TimeoutError=exports.instrumentationScopeId=exports.hashAttributes=exports.isNotNullish=void 0;function isNotNullish(item){return item!==undefined&&item!==null}exports.isNotNullish=isNotNullish;function hashAttributes(attributes){let keys=Object.keys(attributes);if(keys.length===0)return"";keys=keys.sort();return JSON.stringify(keys.map((key=>[key,attributes[key]])))}exports.hashAttributes=hashAttributes;function instrumentationScopeId(instrumentationScope){var _a,_b;return`${instrumentationScope.name}:${(_a=instrumentationScope.version)!==null&&_a!==void 0?_a:""}:${(_b=instrumentationScope.schemaUrl)!==null&&_b!==void 0?_b:""}`}exports.instrumentationScopeId=instrumentationScopeId;class TimeoutError extends Error{constructor(message){super(message);Object.setPrototypeOf(this,TimeoutError.prototype)}}exports.TimeoutError=TimeoutError;function callWithTimeout(promise,timeout){let timeoutHandle;const timeoutPromise=new Promise((function timeoutFunction(_resolve,reject){timeoutHandle=setTimeout((function timeoutHandler(){reject(new TimeoutError("Operation timed out."))}),timeout)}));return Promise.race([promise,timeoutPromise]).then((result=>{clearTimeout(timeoutHandle);return result}),(reason=>{clearTimeout(timeoutHandle);throw reason}))}exports.callWithTimeout=callWithTimeout;async function PromiseAllSettled(promises){return Promise.all(promises.map((async p=>{try{const ret=await p;return{status:"fulfilled",value:ret}}catch(e){return{status:"rejected",reason:e}}})))}exports.PromiseAllSettled=PromiseAllSettled;function isPromiseAllSettledRejectionResult(it){return it.status==="rejected"}exports.isPromiseAllSettledRejectionResult=isPromiseAllSettledRejectionResult;function FlatMap(arr,fn){const result=[];arr.forEach((it=>{result.push(...fn(it))}));return result}exports.FlatMap=FlatMap;function setEquals(lhs,rhs){if(lhs.size!==rhs.size){return false}for(const item of lhs){if(!rhs.has(item)){return false}}return true}exports.setEquals=setEquals;function binarySearchLB(arr,value){let lo=0;let hi=arr.length-1;while(hi-lo>1){const mid=Math.trunc((hi+lo)/2);if(arr[mid]<=value){lo=mid}else{hi=mid-1}}if(arr[hi]<=value){return hi}else if(arr[lo]<=value){return lo}return-1}exports.binarySearchLB=binarySearchLB},{}],337:[function(require,module,exports){arguments[4][212][0].apply(exports,arguments)},{"../InstrumentDescriptor":305,"../aggregator":314,"@opentelemetry/api":19,dup:212}],338:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.FilteringAttributesProcessor=exports.NoopAttributesProcessor=exports.AttributesProcessor=void 0;class AttributesProcessor{static Noop(){return NOOP}}exports.AttributesProcessor=AttributesProcessor;class NoopAttributesProcessor extends AttributesProcessor{process(incoming,_context){return incoming}}exports.NoopAttributesProcessor=NoopAttributesProcessor;class FilteringAttributesProcessor extends AttributesProcessor{constructor(_allowedAttributeNames){super();this._allowedAttributeNames=_allowedAttributeNames}process(incoming,_context){const filteredAttributes={};Object.keys(incoming).filter((attributeName=>this._allowedAttributeNames.includes(attributeName))).forEach((attributeName=>filteredAttributes[attributeName]=incoming[attributeName]));return filteredAttributes}}exports.FilteringAttributesProcessor=FilteringAttributesProcessor;const NOOP=new NoopAttributesProcessor},{}],339:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentSelector=void 0;const Predicate_1=require("./Predicate");class InstrumentSelector{constructor(criteria){var _a;this._nameFilter=new Predicate_1.PatternPredicate((_a=criteria===null||criteria===void 0?void 0:criteria.name)!==null&&_a!==void 0?_a:"*");this._type=criteria===null||criteria===void 0?void 0:criteria.type;this._unitFilter=new Predicate_1.ExactPredicate(criteria===null||criteria===void 0?void 0:criteria.unit)}getType(){return this._type}getNameFilter(){return this._nameFilter}getUnitFilter(){return this._unitFilter}}exports.InstrumentSelector=InstrumentSelector},{"./Predicate":341}],340:[function(require,module,exports){arguments[4][215][0].apply(exports,arguments)},{"./Predicate":341,dup:215}],341:[function(require,module,exports){arguments[4][216][0].apply(exports,arguments)},{dup:216}],342:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getConflictResolutionRecipe=exports.getDescriptionResolutionRecipe=exports.getTypeConflictResolutionRecipe=exports.getUnitConflictResolutionRecipe=exports.getValueTypeConflictResolutionRecipe=exports.getIncompatibilityDetails=void 0;function getIncompatibilityDetails(existing,otherDescriptor){let incompatibility="";if(existing.unit!==otherDescriptor.unit){incompatibility+=`\t- Unit '${existing.unit}' does not match '${otherDescriptor.unit}'\n`}if(existing.type!==otherDescriptor.type){incompatibility+=`\t- Type '${existing.type}' does not match '${otherDescriptor.type}'\n`}if(existing.valueType!==otherDescriptor.valueType){incompatibility+=`\t- Value Type '${existing.valueType}' does not match '${otherDescriptor.valueType}'\n`}if(existing.description!==otherDescriptor.description){incompatibility+=`\t- Description '${existing.description}' does not match '${otherDescriptor.description}'\n`}return incompatibility}exports.getIncompatibilityDetails=getIncompatibilityDetails;function getValueTypeConflictResolutionRecipe(existing,otherDescriptor){return`\t- use valueType '${existing.valueType}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`}exports.getValueTypeConflictResolutionRecipe=getValueTypeConflictResolutionRecipe;function getUnitConflictResolutionRecipe(existing,otherDescriptor){return`\t- use unit '${existing.unit}' on instrument creation or use an instrument name other than '${otherDescriptor.name}'`}exports.getUnitConflictResolutionRecipe=getUnitConflictResolutionRecipe;function getTypeConflictResolutionRecipe(existing,otherDescriptor){const selector={name:otherDescriptor.name,type:otherDescriptor.type,unit:otherDescriptor.unit};const selectorString=JSON.stringify(selector);return`\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'`}exports.getTypeConflictResolutionRecipe=getTypeConflictResolutionRecipe;function getDescriptionResolutionRecipe(existing,otherDescriptor){const selector={name:otherDescriptor.name,type:otherDescriptor.type,unit:otherDescriptor.unit};const selectorString=JSON.stringify(selector);return`\t- create a new view with a name other than '${existing.name}' and InstrumentSelector '${selectorString}'\n    \t- OR - create a new view with the name ${existing.name} and description '${existing.description}' and InstrumentSelector ${selectorString}\n    \t- OR - create a new view with the name ${otherDescriptor.name} and description '${existing.description}' and InstrumentSelector ${selectorString}`}exports.getDescriptionResolutionRecipe=getDescriptionResolutionRecipe;function getConflictResolutionRecipe(existing,otherDescriptor){if(existing.valueType!==otherDescriptor.valueType){return getValueTypeConflictResolutionRecipe(existing,otherDescriptor)}if(existing.unit!==otherDescriptor.unit){return getUnitConflictResolutionRecipe(existing,otherDescriptor)}if(existing.type!==otherDescriptor.type){return getTypeConflictResolutionRecipe(existing,otherDescriptor)}if(existing.description!==otherDescriptor.description){return getDescriptionResolutionRecipe(existing,otherDescriptor)}return""}exports.getConflictResolutionRecipe=getConflictResolutionRecipe},{}],343:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.View=void 0;const Predicate_1=require("./Predicate");const AttributesProcessor_1=require("./AttributesProcessor");const InstrumentSelector_1=require("./InstrumentSelector");const MeterSelector_1=require("./MeterSelector");const Aggregation_1=require("./Aggregation");function isSelectorNotProvided(options){return options.instrumentName==null&&options.instrumentType==null&&options.instrumentUnit==null&&options.meterName==null&&options.meterVersion==null&&options.meterSchemaUrl==null}class View{constructor(viewOptions){var _a;if(isSelectorNotProvided(viewOptions)){throw new Error("Cannot create view with no selector arguments supplied")}if(viewOptions.name!=null&&((viewOptions===null||viewOptions===void 0?void 0:viewOptions.instrumentName)==null||Predicate_1.PatternPredicate.hasWildcard(viewOptions.instrumentName))){throw new Error("Views with a specified name must be declared with an instrument selector that selects at most one instrument per meter.")}if(viewOptions.attributeKeys!=null){this.attributesProcessor=new AttributesProcessor_1.FilteringAttributesProcessor(viewOptions.attributeKeys)}else{this.attributesProcessor=AttributesProcessor_1.AttributesProcessor.Noop()}this.name=viewOptions.name;this.description=viewOptions.description;this.aggregation=(_a=viewOptions.aggregation)!==null&&_a!==void 0?_a:Aggregation_1.Aggregation.Default();this.instrumentSelector=new InstrumentSelector_1.InstrumentSelector({name:viewOptions.instrumentName,type:viewOptions.instrumentType,unit:viewOptions.instrumentUnit});this.meterSelector=new MeterSelector_1.MeterSelector({name:viewOptions.meterName,version:viewOptions.meterVersion,schemaUrl:viewOptions.meterSchemaUrl})}}exports.View=View},{"./Aggregation":337,"./AttributesProcessor":338,"./InstrumentSelector":339,"./MeterSelector":340,"./Predicate":341}],344:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ViewRegistry=void 0;class ViewRegistry{constructor(){this._registeredViews=[]}addView(view){this._registeredViews.push(view)}findViews(instrument,meter){const views=this._registeredViews.filter((registeredView=>this._matchInstrument(registeredView.instrumentSelector,instrument)&&this._matchMeter(registeredView.meterSelector,meter)));return views}_matchInstrument(selector,instrument){return(selector.getType()===undefined||instrument.type===selector.getType())&&selector.getNameFilter().match(instrument.name)&&selector.getUnitFilter().match(instrument.unit)}_matchMeter(selector,meter){return selector.getNameFilter().match(meter.name)&&(meter.version===undefined||selector.getVersionFilter().match(meter.version))&&(meter.schemaUrl===undefined||selector.getSchemaUrlFilter().match(meter.schemaUrl))}}exports.ViewRegistry=ViewRegistry},{}],345:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{dup:53}],346:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{dup:54}],347:[function(require,module,exports){arguments[4][100][0].apply(exports,arguments)},{"../../trace/suppress-tracing":375,"../constants":346,"../utils":348,"@opentelemetry/api":19,dup:100}],348:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./constants":346,"@opentelemetry/api":19,dup:56}],349:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],350:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:58}],351:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments)},{"./logging-error-handler":352,dup:59}],352:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:60}],353:[function(require,module,exports){arguments[4][106][0].apply(exports,arguments)},{"../platform":362,dup:106}],354:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],355:[function(require,module,exports){arguments[4][108][0].apply(exports,arguments)},{"./ExportResult":345,"./baggage/propagation/W3CBaggagePropagator":347,"./baggage/utils":348,"./common/anchored-clock":349,"./common/attributes":350,"./common/global-error-handler":351,"./common/logging-error-handler":352,"./common/time":353,"./common/types":354,"./internal/exporter":356,"./platform":362,"./propagation/composite":366,"./trace/IdGenerator":367,"./trace/TraceState":368,"./trace/W3CTraceContextPropagator":369,"./trace/rpc-metadata":370,"./trace/sampler/AlwaysOffSampler":371,"./trace/sampler/AlwaysOnSampler":372,"./trace/sampler/ParentBasedSampler":373,"./trace/sampler/TraceIdRatioBasedSampler":374,"./trace/suppress-tracing":375,"./utils/callback":376,"./utils/environment":377,"./utils/merge":379,"./utils/sampling":381,"./utils/url":382,"./utils/wrap":383,"./version":384,dup:108}],356:[function(require,module,exports){arguments[4][109][0].apply(exports,arguments)},{"../trace/suppress-tracing":375,"@opentelemetry/api":19,dup:109}],357:[function(require,module,exports){arguments[4][65][0].apply(exports,arguments)},{dup:65}],358:[function(require,module,exports){arguments[4][66][0].apply(exports,arguments)},{dup:66}],359:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{"../../utils/environment":377,"./globalThis":360,dup:67}],360:[function(require,module,exports){arguments[4][113][0].apply(exports,arguments)},{dup:113}],361:[function(require,module,exports){arguments[4][69][0].apply(exports,arguments)},{dup:69}],362:[function(require,module,exports){arguments[4][70][0].apply(exports,arguments)},{"./RandomIdGenerator":358,"./environment":359,"./globalThis":360,"./hex-to-base64":361,"./performance":363,"./sdk-info":364,"./timer-util":365,dup:70}],363:[function(require,module,exports){arguments[4][71][0].apply(exports,arguments)},{dup:71}],364:[function(require,module,exports){arguments[4][72][0].apply(exports,arguments)},{"../../version":384,"@opentelemetry/semantic-conventions":407,dup:72}],365:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73}],366:[function(require,module,exports){arguments[4][74][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:74}],367:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],368:[function(require,module,exports){arguments[4][76][0].apply(exports,arguments)},{"../internal/validators":357,dup:76}],369:[function(require,module,exports){arguments[4][77][0].apply(exports,arguments)},{"./TraceState":368,"./suppress-tracing":375,"@opentelemetry/api":19,dup:77}],370:[function(require,module,exports){arguments[4][78][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:78}],371:[function(require,module,exports){arguments[4][79][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:79}],372:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:80}],373:[function(require,module,exports){arguments[4][81][0].apply(exports,arguments)},{"../../common/global-error-handler":351,"./AlwaysOffSampler":371,"./AlwaysOnSampler":372,"@opentelemetry/api":19,dup:81}],374:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:82}],375:[function(require,module,exports){arguments[4][83][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:83}],376:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments)},{"./promise":380,dup:129}],377:[function(require,module,exports){arguments[4][130][0].apply(exports,arguments)},{"../platform/browser/globalThis":360,"./sampling":381,"@opentelemetry/api":19,_process:674,dup:130}],378:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments)},{dup:131}],379:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments)},{"./lodash.merge":378,dup:132}],380:[function(require,module,exports){arguments[4][88][0].apply(exports,arguments)},{dup:88}],381:[function(require,module,exports){arguments[4][89][0].apply(exports,arguments)},{dup:89}],382:[function(require,module,exports){arguments[4][90][0].apply(exports,arguments)},{dup:90}],383:[function(require,module,exports){arguments[4][91][0].apply(exports,arguments)},{dup:91}],384:[function(require,module,exports){arguments[4][137][0].apply(exports,arguments)},{dup:137}],385:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],386:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Resource=void 0;const api_1=require("@opentelemetry/api");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const core_1=require("@opentelemetry/core");const platform_1=require("./platform");class Resource{constructor(attributes,asyncAttributesPromise){var _a;this._attributes=attributes;this.asyncAttributesPending=asyncAttributesPromise!=null;this._syncAttributes=(_a=this._attributes)!==null&&_a!==void 0?_a:{};this._asyncAttributesPromise=asyncAttributesPromise===null||asyncAttributesPromise===void 0?void 0:asyncAttributesPromise.then((asyncAttributes=>{this._attributes=Object.assign({},this._attributes,asyncAttributes);this.asyncAttributesPending=false;return asyncAttributes}),(err=>{api_1.diag.debug("a resource's async attributes promise rejected: %s",err);this.asyncAttributesPending=false;return{}}))}static empty(){return Resource.EMPTY}static default(){return new Resource({[semantic_conventions_1.SemanticResourceAttributes.SERVICE_NAME]:(0,platform_1.defaultServiceName)(),[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_LANGUAGE],[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_NAME]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_NAME],[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_VERSION]:core_1.SDK_INFO[semantic_conventions_1.SemanticResourceAttributes.TELEMETRY_SDK_VERSION]})}get attributes(){var _a;if(this.asyncAttributesPending){api_1.diag.error("Accessing resource attributes before async attributes settled")}return(_a=this._attributes)!==null&&_a!==void 0?_a:{}}async waitForAsyncAttributes(){if(this.asyncAttributesPending){await this._asyncAttributesPromise}}merge(other){var _a;if(!other)return this;const mergedSyncAttributes=Object.assign(Object.assign({},this._syncAttributes),(_a=other._syncAttributes)!==null&&_a!==void 0?_a:other.attributes);if(!this._asyncAttributesPromise&&!other._asyncAttributesPromise){return new Resource(mergedSyncAttributes)}const mergedAttributesPromise=Promise.all([this._asyncAttributesPromise,other._asyncAttributesPromise]).then((([thisAsyncAttributes,otherAsyncAttributes])=>{var _a;return Object.assign(Object.assign(Object.assign(Object.assign({},this._syncAttributes),thisAsyncAttributes),(_a=other._syncAttributes)!==null&&_a!==void 0?_a:other.attributes),otherAsyncAttributes)}));return new Resource(mergedSyncAttributes,mergedAttributesPromise)}}exports.Resource=Resource;Resource.EMPTY=new Resource({})},{"./platform":404,"@opentelemetry/api":19,"@opentelemetry/core":355,"@opentelemetry/semantic-conventions":407}],387:[function(require,module,exports){arguments[4][292][0].apply(exports,arguments)},{dup:292}],388:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.detectResourcesSync=exports.detectResources=void 0;const Resource_1=require("./Resource");const api_1=require("@opentelemetry/api");const utils_1=require("./utils");const detectResources=async(config={})=>{const resources=await Promise.all((config.detectors||[]).map((async d=>{try{const resource=await d.detect(config);api_1.diag.debug(`${d.constructor.name} found resource.`,resource);return resource}catch(e){api_1.diag.debug(`${d.constructor.name} failed: ${e.message}`);return Resource_1.Resource.empty()}})));logResources(resources);return resources.reduce(((acc,resource)=>acc.merge(resource)),Resource_1.Resource.empty())};exports.detectResources=detectResources;const detectResourcesSync=(config={})=>{var _a;const resources=((_a=config.detectors)!==null&&_a!==void 0?_a:[]).map((d=>{try{const resourceOrPromise=d.detect(config);let resource;if((0,utils_1.isPromiseLike)(resourceOrPromise)){const createPromise=async()=>{const resolvedResource=await resourceOrPromise;return resolvedResource.attributes};resource=new Resource_1.Resource({},createPromise())}else{resource=resourceOrPromise}if(resource.waitForAsyncAttributes){void resource.waitForAsyncAttributes().then((()=>api_1.diag.debug(`${d.constructor.name} found resource.`,resource)))}else{api_1.diag.debug(`${d.constructor.name} found resource.`,resource)}return resource}catch(e){api_1.diag.error(`${d.constructor.name} failed: ${e.message}`);return Resource_1.Resource.empty()}}));const mergedResources=resources.reduce(((acc,resource)=>acc.merge(resource)),Resource_1.Resource.empty());if(mergedResources.waitForAsyncAttributes){void mergedResources.waitForAsyncAttributes().then((()=>{logResources(resources)}))}return mergedResources};exports.detectResourcesSync=detectResourcesSync;const logResources=resources=>{resources.forEach((resource=>{if(Object.keys(resource.attributes).length>0){const resourceDebugString=JSON.stringify(resource.attributes,null,4);api_1.diag.verbose(resourceDebugString)}}))}},{"./Resource":386,"./utils":406,"@opentelemetry/api":19}],389:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.browserDetector=void 0;const __1=require("..");class BrowserDetector{detect(config){return Promise.resolve(__1.browserDetectorSync.detect(config))}}exports.browserDetector=new BrowserDetector},{"..":398}],390:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.browserDetectorSync=void 0;const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const __1=require("..");const api_1=require("@opentelemetry/api");class BrowserDetectorSync{detect(config){const isBrowser=typeof navigator!=="undefined";if(!isBrowser){return __1.Resource.empty()}const browserResource={[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_NAME]:"browser",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]:"Web Browser",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]:navigator.userAgent};return this._getResourceAttributes(browserResource,config)}_getResourceAttributes(browserResource,_config){if(browserResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]===""){api_1.diag.debug("BrowserDetector failed: Unable to find required browser resources. ");return __1.Resource.empty()}else{return new __1.Resource(Object.assign({},browserResource))}}}exports.browserDetectorSync=new BrowserDetectorSync},{"..":398,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":407}],391:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.envDetector=void 0;const EnvDetectorSync_1=require("./EnvDetectorSync");class EnvDetector{detect(config){return Promise.resolve(EnvDetectorSync_1.envDetectorSync.detect(config))}}exports.envDetector=new EnvDetector},{"./EnvDetectorSync":392}],392:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.envDetectorSync=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const Resource_1=require("../Resource");class EnvDetectorSync{constructor(){this._MAX_LENGTH=255;this._COMMA_SEPARATOR=",";this._LABEL_KEY_VALUE_SPLITTER="=";this._ERROR_MESSAGE_INVALID_CHARS="should be a ASCII string with a length greater than 0 and not exceed "+this._MAX_LENGTH+" characters.";this._ERROR_MESSAGE_INVALID_VALUE="should be a ASCII string with a length not exceed "+this._MAX_LENGTH+" characters."}detect(_config){const attributes={};const env=(0,core_1.getEnv)();const rawAttributes=env.OTEL_RESOURCE_ATTRIBUTES;const serviceName=env.OTEL_SERVICE_NAME;if(rawAttributes){try{const parsedAttributes=this._parseResourceAttributes(rawAttributes);Object.assign(attributes,parsedAttributes)}catch(e){api_1.diag.debug(`EnvDetector failed: ${e.message}`)}}if(serviceName){attributes[semantic_conventions_1.SemanticResourceAttributes.SERVICE_NAME]=serviceName}return new Resource_1.Resource(attributes)}_parseResourceAttributes(rawEnvAttributes){if(!rawEnvAttributes)return{};const attributes={};const rawAttributes=rawEnvAttributes.split(this._COMMA_SEPARATOR,-1);for(const rawAttribute of rawAttributes){const keyValuePair=rawAttribute.split(this._LABEL_KEY_VALUE_SPLITTER,-1);if(keyValuePair.length!==2){continue}let[key,value]=keyValuePair;key=key.trim();value=value.trim().split(/^"|"$/).join("");if(!this._isValidAndNotEmpty(key)){throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`)}if(!this._isValid(value)){throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`)}attributes[key]=decodeURIComponent(value)}return attributes}_isValid(name){return name.length<=this._MAX_LENGTH&&this._isBaggageOctetString(name)}_isBaggageOctetString(str){for(let i=0;i<str.length;i++){const ch=str.charCodeAt(i);if(ch<33||ch===44||ch===59||ch===92||ch>126){return false}}return true}_isValidAndNotEmpty(str){return str.length>0&&this._isValid(str)}}exports.envDetectorSync=new EnvDetectorSync},{"../Resource":386,"@opentelemetry/api":19,"@opentelemetry/core":355,"@opentelemetry/semantic-conventions":407}],393:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.noopDetector=exports.NoopDetector=void 0;const NoopDetectorSync_1=require("./NoopDetectorSync");class NoopDetector{detect(){return Promise.resolve(NoopDetectorSync_1.noopDetectorSync.detect())}}exports.NoopDetector=NoopDetector;exports.noopDetector=new NoopDetector},{"./NoopDetectorSync":394}],394:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.noopDetectorSync=exports.NoopDetectorSync=void 0;const Resource_1=require("../Resource");class NoopDetectorSync{detect(){return new Resource_1.Resource({})}}exports.NoopDetectorSync=NoopDetectorSync;exports.noopDetectorSync=new NoopDetectorSync},{"../Resource":386}],395:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.processDetector=void 0;const ProcessDetectorSync_1=require("./ProcessDetectorSync");class ProcessDetector{detect(config){return Promise.resolve(ProcessDetectorSync_1.processDetectorSync.detect(config))}}exports.processDetector=new ProcessDetector},{"./ProcessDetectorSync":396}],396:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.processDetectorSync=void 0;const api_1=require("@opentelemetry/api");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const Resource_1=require("../Resource");class ProcessDetectorSync{detect(config){if(typeof process!=="object"){return Resource_1.Resource.empty()}const processResource={[semantic_conventions_1.SemanticResourceAttributes.PROCESS_PID]:process.pid,[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]:process.title||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND]:process.argv[1]||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND_LINE]:process.argv.join(" ")||"",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]:process.versions.node,[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_NAME]:"nodejs",[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_DESCRIPTION]:"Node.js"};return this._getResourceAttributes(processResource,config)}_getResourceAttributes(processResource,_config){if(processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_NAME]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_EXECUTABLE_PATH]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_COMMAND_LINE]===""||processResource[semantic_conventions_1.SemanticResourceAttributes.PROCESS_RUNTIME_VERSION]===""){api_1.diag.debug("ProcessDetector failed: Unable to find required process resources. ");return Resource_1.Resource.empty()}else{return new Resource_1.Resource(Object.assign({},processResource))}}}exports.processDetectorSync=new ProcessDetectorSync}).call(this)}).call(this,require("_process"))},{"../Resource":386,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":407,_process:674}],397:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./BrowserDetector"),exports);__exportStar(require("./EnvDetector"),exports);__exportStar(require("./ProcessDetector"),exports);__exportStar(require("./BrowserDetectorSync"),exports);__exportStar(require("./EnvDetectorSync"),exports);__exportStar(require("./ProcessDetectorSync"),exports)},{"./BrowserDetector":389,"./BrowserDetectorSync":390,"./EnvDetector":391,"./EnvDetectorSync":392,"./ProcessDetector":395,"./ProcessDetectorSync":396}],398:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./Resource"),exports);__exportStar(require("./IResource"),exports);__exportStar(require("./platform"),exports);__exportStar(require("./types"),exports);__exportStar(require("./config"),exports);__exportStar(require("./detectors"),exports);__exportStar(require("./detect-resources"),exports)},{"./IResource":385,"./Resource":386,"./config":387,"./detect-resources":388,"./detectors":397,"./platform":404,"./types":405}],399:[function(require,module,exports){arguments[4][299][0].apply(exports,arguments)},{"../../detectors/NoopDetector":393,dup:299}],400:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.hostDetectorSync=void 0;const NoopDetectorSync_1=require("../../detectors/NoopDetectorSync");exports.hostDetectorSync=NoopDetectorSync_1.noopDetectorSync},{"../../detectors/NoopDetectorSync":394}],401:[function(require,module,exports){arguments[4][300][0].apply(exports,arguments)},{"../../detectors/NoopDetector":393,dup:300}],402:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.osDetectorSync=void 0;const NoopDetectorSync_1=require("../../detectors/NoopDetectorSync");exports.osDetectorSync=NoopDetectorSync_1.noopDetectorSync},{"../../detectors/NoopDetectorSync":394}],403:[function(require,module,exports){arguments[4][301][0].apply(exports,arguments)},{dup:301}],404:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./default-service-name"),exports);__exportStar(require("./HostDetector"),exports);__exportStar(require("./OSDetector"),exports);__exportStar(require("./HostDetectorSync"),exports);__exportStar(require("./OSDetectorSync"),exports)},{"./HostDetector":399,"./HostDetectorSync":400,"./OSDetector":401,"./OSDetectorSync":402,"./default-service-name":403}],405:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],406:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isPromiseLike=void 0;const isPromiseLike=val=>val!==null&&typeof val==="object"&&typeof val.then==="function";exports.isPromiseLike=isPromiseLike},{}],407:[function(require,module,exports){arguments[4][155][0].apply(exports,arguments)},{"./resource":409,"./trace":411,dup:155}],408:[function(require,module,exports){arguments[4][156][0].apply(exports,arguments)},{dup:156}],409:[function(require,module,exports){arguments[4][157][0].apply(exports,arguments)},{"./SemanticResourceAttributes":408,dup:157}],410:[function(require,module,exports){arguments[4][158][0].apply(exports,arguments)},{dup:158}],411:[function(require,module,exports){arguments[4][159][0].apply(exports,arguments)},{"./SemanticAttributes":410,dup:159}],412:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BasicTracerProvider=exports.ForceFlushState=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const resources_1=require("@opentelemetry/resources");const _1=require(".");const config_1=require("./config");const MultiSpanProcessor_1=require("./MultiSpanProcessor");const NoopSpanProcessor_1=require("./export/NoopSpanProcessor");const platform_1=require("./platform");const utility_1=require("./utility");var ForceFlushState;(function(ForceFlushState){ForceFlushState[ForceFlushState["resolved"]=0]="resolved";ForceFlushState[ForceFlushState["timeout"]=1]="timeout";ForceFlushState[ForceFlushState["error"]=2]="error";ForceFlushState[ForceFlushState["unresolved"]=3]="unresolved"})(ForceFlushState=exports.ForceFlushState||(exports.ForceFlushState={}));class BasicTracerProvider{constructor(config={}){var _a;this._registeredSpanProcessors=[];this._tracers=new Map;const mergedConfig=(0,core_1.merge)({},(0,config_1.loadDefaultConfig)(),(0,utility_1.reconfigureLimits)(config));this.resource=(_a=mergedConfig.resource)!==null&&_a!==void 0?_a:resources_1.Resource.empty();this.resource=resources_1.Resource.default().merge(this.resource);this._config=Object.assign({},mergedConfig,{resource:this.resource});const defaultExporter=this._buildExporterFromEnv();if(defaultExporter!==undefined){const batchProcessor=new platform_1.BatchSpanProcessor(defaultExporter);this.activeSpanProcessor=batchProcessor}else{this.activeSpanProcessor=new NoopSpanProcessor_1.NoopSpanProcessor}}getTracer(name,version,options){const key=`${name}@${version||""}:${(options===null||options===void 0?void 0:options.schemaUrl)||""}`;if(!this._tracers.has(key)){this._tracers.set(key,new _1.Tracer({name:name,version:version,schemaUrl:options===null||options===void 0?void 0:options.schemaUrl},this._config,this))}return this._tracers.get(key)}addSpanProcessor(spanProcessor){if(this._registeredSpanProcessors.length===0){this.activeSpanProcessor.shutdown().catch((err=>api_1.diag.error("Error while trying to shutdown current span processor",err)))}this._registeredSpanProcessors.push(spanProcessor);this.activeSpanProcessor=new MultiSpanProcessor_1.MultiSpanProcessor(this._registeredSpanProcessors)}getActiveSpanProcessor(){return this.activeSpanProcessor}register(config={}){api_1.trace.setGlobalTracerProvider(this);if(config.propagator===undefined){config.propagator=this._buildPropagatorFromEnv()}if(config.contextManager){api_1.context.setGlobalContextManager(config.contextManager)}if(config.propagator){api_1.propagation.setGlobalPropagator(config.propagator)}}forceFlush(){const timeout=this._config.forceFlushTimeoutMillis;const promises=this._registeredSpanProcessors.map((spanProcessor=>new Promise((resolve=>{let state;const timeoutInterval=setTimeout((()=>{resolve(new Error(`Span processor did not completed within timeout period of ${timeout} ms`));state=ForceFlushState.timeout}),timeout);spanProcessor.forceFlush().then((()=>{clearTimeout(timeoutInterval);if(state!==ForceFlushState.timeout){state=ForceFlushState.resolved;resolve(state)}})).catch((error=>{clearTimeout(timeoutInterval);state=ForceFlushState.error;resolve(error)}))}))));return new Promise(((resolve,reject)=>{Promise.all(promises).then((results=>{const errors=results.filter((result=>result!==ForceFlushState.resolved));if(errors.length>0){reject(errors)}else{resolve()}})).catch((error=>reject([error])))}))}shutdown(){return this.activeSpanProcessor.shutdown()}_getPropagator(name){var _a;return(_a=this.constructor._registeredPropagators.get(name))===null||_a===void 0?void 0:_a()}_getSpanExporter(name){var _a;return(_a=this.constructor._registeredExporters.get(name))===null||_a===void 0?void 0:_a()}_buildPropagatorFromEnv(){const uniquePropagatorNames=Array.from(new Set((0,core_1.getEnv)().OTEL_PROPAGATORS));const propagators=uniquePropagatorNames.map((name=>{const propagator=this._getPropagator(name);if(!propagator){api_1.diag.warn(`Propagator "${name}" requested through environment variable is unavailable.`)}return propagator}));const validPropagators=propagators.reduce(((list,item)=>{if(item){list.push(item)}return list}),[]);if(validPropagators.length===0){return}else if(uniquePropagatorNames.length===1){return validPropagators[0]}else{return new core_1.CompositePropagator({propagators:validPropagators})}}_buildExporterFromEnv(){const exporterName=(0,core_1.getEnv)().OTEL_TRACES_EXPORTER;if(exporterName==="none")return;const exporter=this._getSpanExporter(exporterName);if(!exporter){api_1.diag.error(`Exporter "${exporterName}" requested through environment variable is unavailable.`)}return exporter}}exports.BasicTracerProvider=BasicTracerProvider;BasicTracerProvider._registeredPropagators=new Map([["tracecontext",()=>new core_1.W3CTraceContextPropagator],["baggage",()=>new core_1.W3CBaggagePropagator]]);BasicTracerProvider._registeredExporters=new Map},{".":429,"./MultiSpanProcessor":414,"./config":420,"./export/NoopSpanProcessor":425,"./platform":432,"./utility":438,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/resources":298}],413:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],414:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MultiSpanProcessor=void 0;const core_1=require("@opentelemetry/core");class MultiSpanProcessor{constructor(_spanProcessors){this._spanProcessors=_spanProcessors}forceFlush(){const promises=[];for(const spanProcessor of this._spanProcessors){promises.push(spanProcessor.forceFlush())}return new Promise((resolve=>{Promise.all(promises).then((()=>{resolve()})).catch((error=>{(0,core_1.globalErrorHandler)(error||new Error("MultiSpanProcessor: forceFlush failed"));resolve()}))}))}onStart(span,context){for(const spanProcessor of this._spanProcessors){spanProcessor.onStart(span,context)}}onEnd(span){for(const spanProcessor of this._spanProcessors){spanProcessor.onEnd(span)}}shutdown(){const promises=[];for(const spanProcessor of this._spanProcessors){promises.push(spanProcessor.shutdown())}return new Promise(((resolve,reject)=>{Promise.all(promises).then((()=>{resolve()}),reject)}))}}exports.MultiSpanProcessor=MultiSpanProcessor},{"@opentelemetry/core":63}],415:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SamplingDecision=void 0;var SamplingDecision;(function(SamplingDecision){SamplingDecision[SamplingDecision["NOT_RECORD"]=0]="NOT_RECORD";SamplingDecision[SamplingDecision["RECORD"]=1]="RECORD";SamplingDecision[SamplingDecision["RECORD_AND_SAMPLED"]=2]="RECORD_AND_SAMPLED"})(SamplingDecision=exports.SamplingDecision||(exports.SamplingDecision={}))},{}],416:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Span=void 0;const api=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const enums_1=require("./enums");class Span{constructor(parentTracer,context,spanName,spanContext,kind,parentSpanId,links=[],startTime,clock=core_1.otperformance){this.attributes={};this.links=[];this.events=[];this.status={code:api.SpanStatusCode.UNSET};this.endTime=[0,0];this._ended=false;this._duration=[-1,-1];this._clock=clock;this.name=spanName;this._spanContext=spanContext;this.parentSpanId=parentSpanId;this.kind=kind;this.links=links;this.startTime=(0,core_1.timeInputToHrTime)(startTime!==null&&startTime!==void 0?startTime:clock.now());this.resource=parentTracer.resource;this.instrumentationLibrary=parentTracer.instrumentationLibrary;this._spanLimits=parentTracer.getSpanLimits();this._spanProcessor=parentTracer.getActiveSpanProcessor();this._spanProcessor.onStart(this,context);this._attributeValueLengthLimit=this._spanLimits.attributeValueLengthLimit||0}spanContext(){return this._spanContext}setAttribute(key,value){if(value==null||this._isSpanEnded())return this;if(key.length===0){api.diag.warn(`Invalid attribute key: ${key}`);return this}if(!(0,core_1.isAttributeValue)(value)){api.diag.warn(`Invalid attribute value set for key: ${key}`);return this}if(Object.keys(this.attributes).length>=this._spanLimits.attributeCountLimit&&!Object.prototype.hasOwnProperty.call(this.attributes,key)){return this}this.attributes[key]=this._truncateToSize(value);return this}setAttributes(attributes){for(const[k,v]of Object.entries(attributes)){this.setAttribute(k,v)}return this}addEvent(name,attributesOrStartTime,startTime){if(this._isSpanEnded())return this;if(this._spanLimits.eventCountLimit===0){api.diag.warn("No events allowed.");return this}if(this.events.length>=this._spanLimits.eventCountLimit){api.diag.warn("Dropping extra events.");this.events.shift()}if((0,core_1.isTimeInput)(attributesOrStartTime)){if(typeof startTime==="undefined"){startTime=attributesOrStartTime}attributesOrStartTime=undefined}if(typeof startTime==="undefined"){startTime=this._clock.now()}const attributes=(0,core_1.sanitizeAttributes)(attributesOrStartTime);this.events.push({name:name,attributes:attributes,time:(0,core_1.timeInputToHrTime)(startTime)});return this}setStatus(status){if(this._isSpanEnded())return this;this.status=status;return this}updateName(name){if(this._isSpanEnded())return this;this.name=name;return this}end(endTime){if(this._isSpanEnded()){api.diag.error("You can only call end() on a span once.");return}this._ended=true;this.endTime=(0,core_1.timeInputToHrTime)(endTime!==null&&endTime!==void 0?endTime:this._clock.now());this._duration=(0,core_1.hrTimeDuration)(this.startTime,this.endTime);if(this._duration[0]<0){api.diag.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.",this.startTime,this.endTime);this.endTime=this.startTime.slice();this._duration=[0,0]}this._spanProcessor.onEnd(this)}isRecording(){return this._ended===false}recordException(exception,time=this._clock.now()){const attributes={};if(typeof exception==="string"){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]=exception}else if(exception){if(exception.code){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]=exception.code.toString()}else if(exception.name){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]=exception.name}if(exception.message){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]=exception.message}if(exception.stack){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_STACKTRACE]=exception.stack}}if(attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]||attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]){this.addEvent(enums_1.ExceptionEventName,attributes,time)}else{api.diag.warn(`Failed to record an exception ${exception}`)}}get duration(){return this._duration}get ended(){return this._ended}_isSpanEnded(){if(this._ended){api.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`)}return this._ended}_truncateToLimitUtil(value,limit){if(value.length<=limit){return value}return value.substr(0,limit)}_truncateToSize(value){const limit=this._attributeValueLengthLimit;if(limit<=0){api.diag.warn(`Attribute value limit must be positive, got ${limit}`);return value}if(typeof value==="string"){return this._truncateToLimitUtil(value,limit)}if(Array.isArray(value)){return value.map((val=>typeof val==="string"?this._truncateToLimitUtil(val,limit):val))}return value}}exports.Span=Span},{"./enums":421,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/semantic-conventions":540}],417:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],418:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],419:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Tracer=void 0;const api=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const Span_1=require("./Span");const utility_1=require("./utility");const platform_1=require("./platform");class Tracer{constructor(instrumentationLibrary,config,_tracerProvider){this._tracerProvider=_tracerProvider;const localConfig=(0,utility_1.mergeConfig)(config);this._sampler=localConfig.sampler;this._generalLimits=localConfig.generalLimits;this._spanLimits=localConfig.spanLimits;this._idGenerator=config.idGenerator||new platform_1.RandomIdGenerator;this.resource=_tracerProvider.resource;this.instrumentationLibrary=instrumentationLibrary}startSpan(name,options={},context=api.context.active()){var _a,_b;if(options.root){context=api.trace.deleteSpan(context)}const parentSpan=api.trace.getSpan(context);if((0,core_1.isTracingSuppressed)(context)){api.diag.debug("Instrumentation suppressed, returning Noop Span");const nonRecordingSpan=api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);return nonRecordingSpan}const parentSpanContext=parentSpan===null||parentSpan===void 0?void 0:parentSpan.spanContext();const spanId=this._idGenerator.generateSpanId();let traceId;let traceState;let parentSpanId;if(!parentSpanContext||!api.trace.isSpanContextValid(parentSpanContext)){traceId=this._idGenerator.generateTraceId()}else{traceId=parentSpanContext.traceId;traceState=parentSpanContext.traceState;parentSpanId=parentSpanContext.spanId}const spanKind=(_a=options.kind)!==null&&_a!==void 0?_a:api.SpanKind.INTERNAL;const links=((_b=options.links)!==null&&_b!==void 0?_b:[]).map((link=>({context:link.context,attributes:(0,core_1.sanitizeAttributes)(link.attributes)})));const attributes=(0,core_1.sanitizeAttributes)(options.attributes);const samplingResult=this._sampler.shouldSample(context,traceId,name,spanKind,attributes,links);const traceFlags=samplingResult.decision===api.SamplingDecision.RECORD_AND_SAMPLED?api.TraceFlags.SAMPLED:api.TraceFlags.NONE;const spanContext={traceId:traceId,spanId:spanId,traceFlags:traceFlags,traceState:traceState};if(samplingResult.decision===api.SamplingDecision.NOT_RECORD){api.diag.debug("Recording is off, propagating context in a non-recording span");const nonRecordingSpan=api.trace.wrapSpanContext(spanContext);return nonRecordingSpan}const span=new Span_1.Span(this,context,name,spanContext,spanKind,parentSpanId,links,options.startTime);const initAttributes=(0,core_1.sanitizeAttributes)(Object.assign(attributes,samplingResult.attributes));span.setAttributes(initAttributes);return span}startActiveSpan(name,arg2,arg3,arg4){let opts;let ctx;let fn;if(arguments.length<2){return}else if(arguments.length===2){fn=arg2}else if(arguments.length===3){opts=arg2;fn=arg3}else{opts=arg2;ctx=arg3;fn=arg4}const parentContext=ctx!==null&&ctx!==void 0?ctx:api.context.active();const span=this.startSpan(name,opts,parentContext);const contextWithSpanSet=api.trace.setSpan(parentContext,span);return api.context.with(contextWithSpanSet,fn,undefined,span)}getGeneralLimits(){return this._generalLimits}getSpanLimits(){return this._spanLimits}getActiveSpanProcessor(){return this._tracerProvider.getActiveSpanProcessor()}}exports.Tracer=Tracer},{"./Span":416,"./platform":432,"./utility":438,"@opentelemetry/api":19,"@opentelemetry/core":63}],420:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.buildSamplerFromEnv=exports.loadDefaultConfig=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const AlwaysOffSampler_1=require("./sampler/AlwaysOffSampler");const AlwaysOnSampler_1=require("./sampler/AlwaysOnSampler");const ParentBasedSampler_1=require("./sampler/ParentBasedSampler");const TraceIdRatioBasedSampler_1=require("./sampler/TraceIdRatioBasedSampler");const env=(0,core_1.getEnv)();const FALLBACK_OTEL_TRACES_SAMPLER=core_1.TracesSamplerValues.AlwaysOn;const DEFAULT_RATIO=1;function loadDefaultConfig(){return{sampler:buildSamplerFromEnv(env),forceFlushTimeoutMillis:3e4,generalLimits:{attributeValueLengthLimit:(0,core_1.getEnv)().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:(0,core_1.getEnv)().OTEL_ATTRIBUTE_COUNT_LIMIT},spanLimits:{attributeValueLengthLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,linkCountLimit:(0,core_1.getEnv)().OTEL_SPAN_LINK_COUNT_LIMIT,eventCountLimit:(0,core_1.getEnv)().OTEL_SPAN_EVENT_COUNT_LIMIT}}}exports.loadDefaultConfig=loadDefaultConfig;function buildSamplerFromEnv(environment=(0,core_1.getEnv)()){switch(environment.OTEL_TRACES_SAMPLER){case core_1.TracesSamplerValues.AlwaysOn:return new AlwaysOnSampler_1.AlwaysOnSampler;case core_1.TracesSamplerValues.AlwaysOff:return new AlwaysOffSampler_1.AlwaysOffSampler;case core_1.TracesSamplerValues.ParentBasedAlwaysOn:return new ParentBasedSampler_1.ParentBasedSampler({root:new AlwaysOnSampler_1.AlwaysOnSampler});case core_1.TracesSamplerValues.ParentBasedAlwaysOff:return new ParentBasedSampler_1.ParentBasedSampler({root:new AlwaysOffSampler_1.AlwaysOffSampler});case core_1.TracesSamplerValues.TraceIdRatio:return new TraceIdRatioBasedSampler_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));case core_1.TracesSamplerValues.ParentBasedTraceIdRatio:return new ParentBasedSampler_1.ParentBasedSampler({root:new TraceIdRatioBasedSampler_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment))});default:api_1.diag.error(`OTEL_TRACES_SAMPLER value "${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}".`);return new AlwaysOnSampler_1.AlwaysOnSampler}}exports.buildSamplerFromEnv=buildSamplerFromEnv;function getSamplerProbabilityFromEnv(environment){if(environment.OTEL_TRACES_SAMPLER_ARG===undefined||environment.OTEL_TRACES_SAMPLER_ARG===""){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}const probability=Number(environment.OTEL_TRACES_SAMPLER_ARG);if(isNaN(probability)){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}if(probability<0||probability>1){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}return probability}},{"./sampler/AlwaysOffSampler":433,"./sampler/AlwaysOnSampler":434,"./sampler/ParentBasedSampler":435,"./sampler/TraceIdRatioBasedSampler":436,"@opentelemetry/api":19,"@opentelemetry/core":63}],421:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ExceptionEventName=void 0;exports.ExceptionEventName="exception"},{}],422:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchSpanProcessorBase=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class BatchSpanProcessorBase{constructor(_exporter,config){this._exporter=_exporter;this._finishedSpans=[];const env=(0,core_1.getEnv)();this._maxExportBatchSize=typeof(config===null||config===void 0?void 0:config.maxExportBatchSize)==="number"?config.maxExportBatchSize:env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;this._maxQueueSize=typeof(config===null||config===void 0?void 0:config.maxQueueSize)==="number"?config.maxQueueSize:env.OTEL_BSP_MAX_QUEUE_SIZE;this._scheduledDelayMillis=typeof(config===null||config===void 0?void 0:config.scheduledDelayMillis)==="number"?config.scheduledDelayMillis:env.OTEL_BSP_SCHEDULE_DELAY;this._exportTimeoutMillis=typeof(config===null||config===void 0?void 0:config.exportTimeoutMillis)==="number"?config.exportTimeoutMillis:env.OTEL_BSP_EXPORT_TIMEOUT;this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this);if(this._maxExportBatchSize>this._maxQueueSize){api_1.diag.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize");this._maxExportBatchSize=this._maxQueueSize}}forceFlush(){if(this._shutdownOnce.isCalled){return this._shutdownOnce.promise}return this._flushAll()}onStart(_span,_parentContext){}onEnd(span){if(this._shutdownOnce.isCalled){return}if((span.spanContext().traceFlags&api_1.TraceFlags.SAMPLED)===0){return}this._addToBuffer(span)}shutdown(){return this._shutdownOnce.call()}_shutdown(){return Promise.resolve().then((()=>this.onShutdown())).then((()=>this._flushAll())).then((()=>this._exporter.shutdown()))}_addToBuffer(span){if(this._finishedSpans.length>=this._maxQueueSize){return}this._finishedSpans.push(span);this._maybeStartTimer()}_flushAll(){return new Promise(((resolve,reject)=>{const promises=[];const count=Math.ceil(this._finishedSpans.length/this._maxExportBatchSize);for(let i=0,j=count;i<j;i++){promises.push(this._flushOneBatch())}Promise.all(promises).then((()=>{resolve()})).catch(reject)}))}_flushOneBatch(){this._clearTimer();if(this._finishedSpans.length===0){return Promise.resolve()}return new Promise(((resolve,reject)=>{const timer=setTimeout((()=>{reject(new Error("Timeout"))}),this._exportTimeoutMillis);api_1.context.with((0,core_1.suppressTracing)(api_1.context.active()),(()=>{this._exporter.export(this._finishedSpans.splice(0,this._maxExportBatchSize),(result=>{var _a;clearTimeout(timer);if(result.code===core_1.ExportResultCode.SUCCESS){resolve()}else{reject((_a=result.error)!==null&&_a!==void 0?_a:new Error("BatchSpanProcessor: span export failed"))}}))}))}))}_maybeStartTimer(){if(this._timer!==undefined)return;this._timer=setTimeout((()=>{this._flushOneBatch().then((()=>{if(this._finishedSpans.length>0){this._clearTimer();this._maybeStartTimer()}})).catch((e=>{(0,core_1.globalErrorHandler)(e)}))}),this._scheduledDelayMillis);(0,core_1.unrefTimer)(this._timer)}_clearTimer(){if(this._timer!==undefined){clearTimeout(this._timer);this._timer=undefined}}}exports.BatchSpanProcessorBase=BatchSpanProcessorBase},{"@opentelemetry/api":19,"@opentelemetry/core":63}],423:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ConsoleSpanExporter=void 0;const core_1=require("@opentelemetry/core");class ConsoleSpanExporter{export(spans,resultCallback){return this._sendSpans(spans,resultCallback)}shutdown(){this._sendSpans([]);return Promise.resolve()}_exportInfo(span){return{traceId:span.spanContext().traceId,parentId:span.parentSpanId,name:span.name,id:span.spanContext().spanId,kind:span.kind,timestamp:(0,core_1.hrTimeToMicroseconds)(span.startTime),duration:(0,core_1.hrTimeToMicroseconds)(span.duration),attributes:span.attributes,status:span.status,events:span.events,links:span.links}}_sendSpans(spans,done){for(const span of spans){console.dir(this._exportInfo(span),{depth:3})}if(done){return done({code:core_1.ExportResultCode.SUCCESS})}}}exports.ConsoleSpanExporter=ConsoleSpanExporter},{"@opentelemetry/core":63}],424:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InMemorySpanExporter=void 0;const core_1=require("@opentelemetry/core");class InMemorySpanExporter{constructor(){this._finishedSpans=[];this._stopped=false}export(spans,resultCallback){if(this._stopped)return resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Exporter has been stopped")});this._finishedSpans.push(...spans);setTimeout((()=>resultCallback({code:core_1.ExportResultCode.SUCCESS})),0)}shutdown(){this._stopped=true;this._finishedSpans=[];return Promise.resolve()}reset(){this._finishedSpans=[]}getFinishedSpans(){return this._finishedSpans}}exports.InMemorySpanExporter=InMemorySpanExporter},{"@opentelemetry/core":63}],425:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.NoopSpanProcessor=void 0;class NoopSpanProcessor{onStart(_span,_context){}onEnd(_span){}shutdown(){return Promise.resolve()}forceFlush(){return Promise.resolve()}}exports.NoopSpanProcessor=NoopSpanProcessor},{}],426:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],427:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SimpleSpanProcessor=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class SimpleSpanProcessor{constructor(_exporter){this._exporter=_exporter;this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this)}forceFlush(){return Promise.resolve()}onStart(_span,_parentContext){}onEnd(span){if(this._shutdownOnce.isCalled){return}if((span.spanContext().traceFlags&api_1.TraceFlags.SAMPLED)===0){return}core_1.internal._export(this._exporter,[span]).then((result=>{var _a;if(result.code!==core_1.ExportResultCode.SUCCESS){(0,core_1.globalErrorHandler)((_a=result.error)!==null&&_a!==void 0?_a:new Error(`SimpleSpanProcessor: span export failed (status ${result})`))}})).catch((error=>{(0,core_1.globalErrorHandler)(error)}))}shutdown(){return this._shutdownOnce.call()}_shutdown(){return this._exporter.shutdown()}}exports.SimpleSpanProcessor=SimpleSpanProcessor},{"@opentelemetry/api":19,"@opentelemetry/core":63}],428:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})},{}],429:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./Tracer"),exports);__exportStar(require("./BasicTracerProvider"),exports);__exportStar(require("./platform"),exports);__exportStar(require("./export/ConsoleSpanExporter"),exports);__exportStar(require("./export/InMemorySpanExporter"),exports);__exportStar(require("./export/ReadableSpan"),exports);__exportStar(require("./export/SimpleSpanProcessor"),exports);__exportStar(require("./export/SpanExporter"),exports);__exportStar(require("./export/NoopSpanProcessor"),exports);__exportStar(require("./sampler/AlwaysOffSampler"),exports);__exportStar(require("./sampler/AlwaysOnSampler"),exports);__exportStar(require("./sampler/ParentBasedSampler"),exports);__exportStar(require("./sampler/TraceIdRatioBasedSampler"),exports);__exportStar(require("./Sampler"),exports);__exportStar(require("./Span"),exports);__exportStar(require("./SpanProcessor"),exports);__exportStar(require("./TimedEvent"),exports);__exportStar(require("./types"),exports);__exportStar(require("./IdGenerator"),exports)},{"./BasicTracerProvider":412,"./IdGenerator":413,"./Sampler":415,"./Span":416,"./SpanProcessor":417,"./TimedEvent":418,"./Tracer":419,"./export/ConsoleSpanExporter":423,"./export/InMemorySpanExporter":424,"./export/NoopSpanProcessor":425,"./export/ReadableSpan":426,"./export/SimpleSpanProcessor":427,"./export/SpanExporter":428,"./platform":432,"./sampler/AlwaysOffSampler":433,"./sampler/AlwaysOnSampler":434,"./sampler/ParentBasedSampler":435,"./sampler/TraceIdRatioBasedSampler":436,"./types":437}],430:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.RandomIdGenerator=void 0;const SPAN_ID_BYTES=8;const TRACE_ID_BYTES=16;class RandomIdGenerator{constructor(){this.generateTraceId=getIdGenerator(TRACE_ID_BYTES);this.generateSpanId=getIdGenerator(SPAN_ID_BYTES)}}exports.RandomIdGenerator=RandomIdGenerator;const SHARED_CHAR_CODES_ARRAY=Array(32);function getIdGenerator(bytes){return function generateId(){for(let i=0;i<bytes*2;i++){SHARED_CHAR_CODES_ARRAY[i]=Math.floor(Math.random()*16)+48;if(SHARED_CHAR_CODES_ARRAY[i]>=58){SHARED_CHAR_CODES_ARRAY[i]+=39}}return String.fromCharCode.apply(null,SHARED_CHAR_CODES_ARRAY.slice(0,bytes*2))}}},{}],431:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchSpanProcessor=void 0;const BatchSpanProcessorBase_1=require("../../../export/BatchSpanProcessorBase");class BatchSpanProcessor extends BatchSpanProcessorBase_1.BatchSpanProcessorBase{constructor(_exporter,config){super(_exporter,config);this.onInit(config)}onInit(config){if((config===null||config===void 0?void 0:config.disableAutoFlushOnDocumentHide)!==true&&typeof document!=="undefined"){this._visibilityChangeListener=()=>{if(document.visibilityState==="hidden"){void this.forceFlush()}};this._pageHideListener=()=>{void this.forceFlush()};document.addEventListener("visibilitychange",this._visibilityChangeListener);document.addEventListener("pagehide",this._pageHideListener)}}onShutdown(){if(typeof document!=="undefined"){if(this._visibilityChangeListener){document.removeEventListener("visibilitychange",this._visibilityChangeListener)}if(this._pageHideListener){document.removeEventListener("pagehide",this._pageHideListener)}}}}exports.BatchSpanProcessor=BatchSpanProcessor},{"../../../export/BatchSpanProcessorBase":422}],432:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./export/BatchSpanProcessor"),exports);__exportStar(require("./RandomIdGenerator"),exports)},{"./RandomIdGenerator":430,"./export/BatchSpanProcessor":431}],433:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AlwaysOffSampler=void 0;const Sampler_1=require("../Sampler");class AlwaysOffSampler{shouldSample(){return{decision:Sampler_1.SamplingDecision.NOT_RECORD}}toString(){return"AlwaysOffSampler"}}exports.AlwaysOffSampler=AlwaysOffSampler},{"../Sampler":415}],434:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AlwaysOnSampler=void 0;const Sampler_1=require("../Sampler");class AlwaysOnSampler{shouldSample(){return{decision:Sampler_1.SamplingDecision.RECORD_AND_SAMPLED}}toString(){return"AlwaysOnSampler"}}exports.AlwaysOnSampler=AlwaysOnSampler},{"../Sampler":415}],435:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ParentBasedSampler=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const AlwaysOffSampler_1=require("./AlwaysOffSampler");const AlwaysOnSampler_1=require("./AlwaysOnSampler");class ParentBasedSampler{constructor(config){var _a,_b,_c,_d;this._root=config.root;if(!this._root){(0,core_1.globalErrorHandler)(new Error("ParentBasedSampler must have a root sampler configured"));this._root=new AlwaysOnSampler_1.AlwaysOnSampler}this._remoteParentSampled=(_a=config.remoteParentSampled)!==null&&_a!==void 0?_a:new AlwaysOnSampler_1.AlwaysOnSampler;this._remoteParentNotSampled=(_b=config.remoteParentNotSampled)!==null&&_b!==void 0?_b:new AlwaysOffSampler_1.AlwaysOffSampler;this._localParentSampled=(_c=config.localParentSampled)!==null&&_c!==void 0?_c:new AlwaysOnSampler_1.AlwaysOnSampler;this._localParentNotSampled=(_d=config.localParentNotSampled)!==null&&_d!==void 0?_d:new AlwaysOffSampler_1.AlwaysOffSampler}shouldSample(context,traceId,spanName,spanKind,attributes,links){const parentContext=api_1.trace.getSpanContext(context);if(!parentContext||!(0,api_1.isSpanContextValid)(parentContext)){return this._root.shouldSample(context,traceId,spanName,spanKind,attributes,links)}if(parentContext.isRemote){if(parentContext.traceFlags&api_1.TraceFlags.SAMPLED){return this._remoteParentSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}return this._remoteParentNotSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}if(parentContext.traceFlags&api_1.TraceFlags.SAMPLED){return this._localParentSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}return this._localParentNotSampled.shouldSample(context,traceId,spanName,spanKind,attributes,links)}toString(){return`ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`}}exports.ParentBasedSampler=ParentBasedSampler},{"./AlwaysOffSampler":433,"./AlwaysOnSampler":434,"@opentelemetry/api":19,"@opentelemetry/core":63}],436:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TraceIdRatioBasedSampler=void 0;const api_1=require("@opentelemetry/api");const Sampler_1=require("../Sampler");class TraceIdRatioBasedSampler{constructor(_ratio=0){this._ratio=_ratio;this._ratio=this._normalize(_ratio);this._upperBound=Math.floor(this._ratio*4294967295)}shouldSample(context,traceId){return{decision:(0,api_1.isValidTraceId)(traceId)&&this._accumulate(traceId)<this._upperBound?Sampler_1.SamplingDecision.RECORD_AND_SAMPLED:Sampler_1.SamplingDecision.NOT_RECORD}}toString(){return`TraceIdRatioBased{${this._ratio}}`}_normalize(ratio){if(typeof ratio!=="number"||isNaN(ratio))return 0;return ratio>=1?1:ratio<=0?0:ratio}_accumulate(traceId){let accumulation=0;for(let i=0;i<traceId.length/8;i++){const pos=i*8;const part=parseInt(traceId.slice(pos,pos+8),16);accumulation=(accumulation^part)>>>0}return accumulation}}exports.TraceIdRatioBasedSampler=TraceIdRatioBasedSampler},{"../Sampler":415,"@opentelemetry/api":19}],437:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],438:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.reconfigureLimits=exports.mergeConfig=void 0;const config_1=require("./config");const core_1=require("@opentelemetry/core");function mergeConfig(userConfig){const perInstanceDefaults={sampler:(0,config_1.buildSamplerFromEnv)()};const DEFAULT_CONFIG=(0,config_1.loadDefaultConfig)();const target=Object.assign({},DEFAULT_CONFIG,perInstanceDefaults,userConfig);target.generalLimits=Object.assign({},DEFAULT_CONFIG.generalLimits,userConfig.generalLimits||{});target.spanLimits=Object.assign({},DEFAULT_CONFIG.spanLimits,userConfig.spanLimits||{});return target}exports.mergeConfig=mergeConfig;function reconfigureLimits(userConfig){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const spanLimits=Object.assign({},userConfig.spanLimits);const parsedEnvConfig=(0,core_1.getEnvWithoutDefaults)();spanLimits.attributeCountLimit=(_f=(_e=(_d=(_b=(_a=userConfig.spanLimits)===null||_a===void 0?void 0:_a.attributeCountLimit)!==null&&_b!==void 0?_b:(_c=userConfig.generalLimits)===null||_c===void 0?void 0:_c.attributeCountLimit)!==null&&_d!==void 0?_d:parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT)!==null&&_e!==void 0?_e:parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT)!==null&&_f!==void 0?_f:core_1.DEFAULT_ATTRIBUTE_COUNT_LIMIT;spanLimits.attributeValueLengthLimit=(_m=(_l=(_k=(_h=(_g=userConfig.spanLimits)===null||_g===void 0?void 0:_g.attributeValueLengthLimit)!==null&&_h!==void 0?_h:(_j=userConfig.generalLimits)===null||_j===void 0?void 0:_j.attributeValueLengthLimit)!==null&&_k!==void 0?_k:parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT)!==null&&_l!==void 0?_l:parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT)!==null&&_m!==void 0?_m:core_1.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;return Object.assign({},userConfig,{spanLimits:spanLimits})}exports.reconfigureLimits=reconfigureLimits},{"./config":420,"@opentelemetry/core":63}],439:[function(require,module,exports){arguments[4][224][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:224}],440:[function(require,module,exports){arguments[4][225][0].apply(exports,arguments)},{"./StackContextManager":439,"@opentelemetry/sdk-trace-base":525,dup:225}],441:[function(require,module,exports){arguments[4][226][0].apply(exports,arguments)},{dup:226}],442:[function(require,module,exports){arguments[4][227][0].apply(exports,arguments)},{"./StackContextManager":439,"./WebTracerProvider":440,"./enums/PerformanceTimingNames":441,"./types":443,"./utils":444,"@opentelemetry/sdk-trace-base":525,dup:227}],443:[function(require,module,exports){arguments[4][228][0].apply(exports,arguments)},{"./enums/PerformanceTimingNames":441,dup:228}],444:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.shouldPropagateTraceHeaders=exports.getElementXPath=exports.normalizeUrl=exports.parseUrl=exports.getResource=exports.sortResources=exports.addSpanNetworkEvents=exports.addSpanNetworkEvent=exports.hasKey=void 0;const PerformanceTimingNames_1=require("./enums/PerformanceTimingNames");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");let urlNormalizingAnchor;function getUrlNormalizingAnchor(){if(!urlNormalizingAnchor){urlNormalizingAnchor=document.createElement("a")}return urlNormalizingAnchor}function hasKey(obj,key){return key in obj}exports.hasKey=hasKey;function addSpanNetworkEvent(span,performanceName,entries){if(hasKey(entries,performanceName)&&typeof entries[performanceName]==="number"){span.addEvent(performanceName,entries[performanceName]);return span}return undefined}exports.addSpanNetworkEvent=addSpanNetworkEvent;function addSpanNetworkEvents(span,resource){addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.DOMAIN_LOOKUP_END,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_START,resource);if(hasKey(resource,"name")&&resource["name"].startsWith("https:")){addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.SECURE_CONNECTION_START,resource)}addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.CONNECT_END,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.REQUEST_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_START,resource);addSpanNetworkEvent(span,PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END,resource);const encodedLength=resource[PerformanceTimingNames_1.PerformanceTimingNames.ENCODED_BODY_SIZE];if(encodedLength!==undefined){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH,encodedLength)}const decodedLength=resource[PerformanceTimingNames_1.PerformanceTimingNames.DECODED_BODY_SIZE];if(decodedLength!==undefined&&encodedLength!==decodedLength){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,decodedLength)}}exports.addSpanNetworkEvents=addSpanNetworkEvents;function sortResources(filteredResources){return filteredResources.slice().sort(((a,b)=>{const valueA=a[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];const valueB=b[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];if(valueA>valueB){return 1}else if(valueA<valueB){return-1}return 0}))}exports.sortResources=sortResources;function getResource(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources=new WeakSet,initiatorType){const parsedSpanUrl=parseUrl(spanUrl);spanUrl=parsedSpanUrl.toString();const filteredResources=filterResourcesForSpan(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources,initiatorType);if(filteredResources.length===0){return{mainRequest:undefined}}if(filteredResources.length===1){return{mainRequest:filteredResources[0]}}const sorted=sortResources(filteredResources);if(parsedSpanUrl.origin!==location.origin&&sorted.length>1){let corsPreFlightRequest=sorted[0];let mainRequest=findMainRequest(sorted,corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END],endTimeHR);const responseEnd=corsPreFlightRequest[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END];const fetchStart=mainRequest[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START];if(fetchStart<responseEnd){mainRequest=corsPreFlightRequest;corsPreFlightRequest=undefined}return{corsPreFlightRequest:corsPreFlightRequest,mainRequest:mainRequest}}else{return{mainRequest:filteredResources[0]}}}exports.getResource=getResource;function findMainRequest(resources,corsPreFlightRequestEndTime,spanEndTimeHR){const spanEndTime=(0,core_1.hrTimeToNanoseconds)(spanEndTimeHR);const minTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(corsPreFlightRequestEndTime));let mainRequest=resources[1];let bestGap;const length=resources.length;for(let i=1;i<length;i++){const resource=resources[i];const resourceStartTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));const resourceEndTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));const currentGap=spanEndTime-resourceEndTime;if(resourceStartTime>=minTime&&(!bestGap||currentGap<bestGap)){bestGap=currentGap;mainRequest=resource}}return mainRequest}function filterResourcesForSpan(spanUrl,startTimeHR,endTimeHR,resources,ignoredResources,initiatorType){const startTime=(0,core_1.hrTimeToNanoseconds)(startTimeHR);const endTime=(0,core_1.hrTimeToNanoseconds)(endTimeHR);let filteredResources=resources.filter((resource=>{const resourceStartTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.FETCH_START]));const resourceEndTime=(0,core_1.hrTimeToNanoseconds)((0,core_1.timeInputToHrTime)(resource[PerformanceTimingNames_1.PerformanceTimingNames.RESPONSE_END]));return resource.initiatorType.toLowerCase()===(initiatorType||"xmlhttprequest")&&resource.name===spanUrl&&resourceStartTime>=startTime&&resourceEndTime<=endTime}));if(filteredResources.length>0){filteredResources=filteredResources.filter((resource=>!ignoredResources.has(resource)))}return filteredResources}function parseUrl(url){if(typeof URL==="function"){return new URL(url,typeof document!=="undefined"?document.baseURI:typeof location!=="undefined"?location.href:undefined)}const element=getUrlNormalizingAnchor();element.href=url;return element}exports.parseUrl=parseUrl;function normalizeUrl(url){const urlLike=parseUrl(url);return urlLike.href}exports.normalizeUrl=normalizeUrl;function getElementXPath(target,optimised){if(target.nodeType===Node.DOCUMENT_NODE){return"/"}const targetValue=getNodeValue(target,optimised);if(optimised&&targetValue.indexOf("@id")>0){return targetValue}let xpath="";if(target.parentNode){xpath+=getElementXPath(target.parentNode,false)}xpath+=targetValue;return xpath}exports.getElementXPath=getElementXPath;function getNodeIndex(target){if(!target.parentNode){return 0}const allowedTypes=[target.nodeType];if(target.nodeType===Node.CDATA_SECTION_NODE){allowedTypes.push(Node.TEXT_NODE)}let elements=Array.from(target.parentNode.childNodes);elements=elements.filter((element=>{const localName=element.localName;return allowedTypes.indexOf(element.nodeType)>=0&&localName===target.localName}));if(elements.length>=1){return elements.indexOf(target)+1}return 0}function getNodeValue(target,optimised){const nodeType=target.nodeType;const index=getNodeIndex(target);let nodeValue="";if(nodeType===Node.ELEMENT_NODE){const id=target.getAttribute("id");if(optimised&&id){return`//*[@id="${id}"]`}nodeValue=target.localName}else if(nodeType===Node.TEXT_NODE||nodeType===Node.CDATA_SECTION_NODE){nodeValue="text()"}else if(nodeType===Node.COMMENT_NODE){nodeValue="comment()"}else{return""}if(nodeValue&&index>1){return`/${nodeValue}[${index}]`}return`/${nodeValue}`}function shouldPropagateTraceHeaders(spanUrl,propagateTraceHeaderCorsUrls){let propagateTraceHeaderUrls=propagateTraceHeaderCorsUrls||[];if(typeof propagateTraceHeaderUrls==="string"||propagateTraceHeaderUrls instanceof RegExp){propagateTraceHeaderUrls=[propagateTraceHeaderUrls]}const parsedSpanUrl=parseUrl(spanUrl);if(parsedSpanUrl.origin===location.origin){return true}else{return propagateTraceHeaderUrls.some((propagateTraceHeaderUrl=>(0,core_1.urlMatches)(spanUrl,propagateTraceHeaderUrl)))}}exports.shouldPropagateTraceHeaders=shouldPropagateTraceHeaders},{"./enums/PerformanceTimingNames":441,"@opentelemetry/core":455,"@opentelemetry/semantic-conventions":535}],445:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{dup:53}],446:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{dup:54}],447:[function(require,module,exports){arguments[4][100][0].apply(exports,arguments)},{"../../trace/suppress-tracing":475,"../constants":446,"../utils":448,"@opentelemetry/api":19,dup:100}],448:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./constants":446,"@opentelemetry/api":19,dup:56}],449:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],450:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:58}],451:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments)},{"./logging-error-handler":452,dup:59}],452:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:60}],453:[function(require,module,exports){arguments[4][106][0].apply(exports,arguments)},{"../platform":462,dup:106}],454:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],455:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});exports.internal=exports.baggageUtils=void 0;__exportStar(require("./baggage/propagation/W3CBaggagePropagator"),exports);__exportStar(require("./common/anchored-clock"),exports);__exportStar(require("./common/attributes"),exports);__exportStar(require("./common/global-error-handler"),exports);__exportStar(require("./common/logging-error-handler"),exports);__exportStar(require("./common/time"),exports);__exportStar(require("./common/types"),exports);__exportStar(require("./ExportResult"),exports);__exportStar(require("./version"),exports);exports.baggageUtils=require("./baggage/utils");__exportStar(require("./platform"),exports);__exportStar(require("./propagation/composite"),exports);__exportStar(require("./trace/W3CTraceContextPropagator"),exports);__exportStar(require("./trace/IdGenerator"),exports);__exportStar(require("./trace/rpc-metadata"),exports);__exportStar(require("./trace/sampler/AlwaysOffSampler"),exports);__exportStar(require("./trace/sampler/AlwaysOnSampler"),exports);__exportStar(require("./trace/sampler/ParentBasedSampler"),exports);__exportStar(require("./trace/sampler/TraceIdRatioBasedSampler"),exports);__exportStar(require("./trace/suppress-tracing"),exports);__exportStar(require("./trace/TraceState"),exports);__exportStar(require("./utils/environment"),exports);__exportStar(require("./utils/merge"),exports);__exportStar(require("./utils/sampling"),exports);__exportStar(require("./utils/timeout"),exports);__exportStar(require("./utils/url"),exports);__exportStar(require("./utils/wrap"),exports);__exportStar(require("./utils/callback"),exports);__exportStar(require("./version"),exports);const exporter_1=require("./internal/exporter");exports.internal={_export:exporter_1._export}},{"./ExportResult":445,"./baggage/propagation/W3CBaggagePropagator":447,"./baggage/utils":448,"./common/anchored-clock":449,"./common/attributes":450,"./common/global-error-handler":451,"./common/logging-error-handler":452,"./common/time":453,"./common/types":454,"./internal/exporter":456,"./platform":462,"./propagation/composite":466,"./trace/IdGenerator":467,"./trace/TraceState":468,"./trace/W3CTraceContextPropagator":469,"./trace/rpc-metadata":470,"./trace/sampler/AlwaysOffSampler":471,"./trace/sampler/AlwaysOnSampler":472,"./trace/sampler/ParentBasedSampler":473,"./trace/sampler/TraceIdRatioBasedSampler":474,"./trace/suppress-tracing":475,"./utils/callback":476,"./utils/environment":477,"./utils/merge":479,"./utils/sampling":481,"./utils/timeout":482,"./utils/url":483,"./utils/wrap":484,"./version":485}],456:[function(require,module,exports){arguments[4][109][0].apply(exports,arguments)},{"../trace/suppress-tracing":475,"@opentelemetry/api":19,dup:109}],457:[function(require,module,exports){arguments[4][65][0].apply(exports,arguments)},{dup:65}],458:[function(require,module,exports){arguments[4][66][0].apply(exports,arguments)},{dup:66}],459:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{"../../utils/environment":477,"./globalThis":460,dup:67}],460:[function(require,module,exports){arguments[4][113][0].apply(exports,arguments)},{dup:113}],461:[function(require,module,exports){arguments[4][69][0].apply(exports,arguments)},{dup:69}],462:[function(require,module,exports){arguments[4][70][0].apply(exports,arguments)},{"./RandomIdGenerator":458,"./environment":459,"./globalThis":460,"./hex-to-base64":461,"./performance":463,"./sdk-info":464,"./timer-util":465,dup:70}],463:[function(require,module,exports){arguments[4][71][0].apply(exports,arguments)},{dup:71}],464:[function(require,module,exports){arguments[4][72][0].apply(exports,arguments)},{"../../version":485,"@opentelemetry/semantic-conventions":535,dup:72}],465:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73}],466:[function(require,module,exports){arguments[4][74][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:74}],467:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],468:[function(require,module,exports){arguments[4][76][0].apply(exports,arguments)},{"../internal/validators":457,dup:76}],469:[function(require,module,exports){arguments[4][77][0].apply(exports,arguments)},{"./TraceState":468,"./suppress-tracing":475,"@opentelemetry/api":19,dup:77}],470:[function(require,module,exports){arguments[4][78][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:78}],471:[function(require,module,exports){arguments[4][79][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:79}],472:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:80}],473:[function(require,module,exports){arguments[4][81][0].apply(exports,arguments)},{"../../common/global-error-handler":451,"./AlwaysOffSampler":471,"./AlwaysOnSampler":472,"@opentelemetry/api":19,dup:81}],474:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:82}],475:[function(require,module,exports){arguments[4][83][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:83}],476:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments)},{"./promise":480,dup:129}],477:[function(require,module,exports){(function(process){(function(){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getEnvWithoutDefaults=exports.parseEnvironment=exports.DEFAULT_ENVIRONMENT=exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT=exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=void 0;const api_1=require("@opentelemetry/api");const sampling_1=require("./sampling");const globalThis_1=require("../platform/browser/globalThis");const DEFAULT_LIST_SEPARATOR=",";const ENVIRONMENT_BOOLEAN_KEYS=["OTEL_SDK_DISABLED"];function isEnvVarABoolean(key){return ENVIRONMENT_BOOLEAN_KEYS.indexOf(key)>-1}const ENVIRONMENT_NUMBERS_KEYS=["OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_BLRP_EXPORT_TIMEOUT","OTEL_BLRP_MAX_EXPORT_BATCH_SIZE","OTEL_BLRP_MAX_QUEUE_SIZE","OTEL_BLRP_SCHEDULE_DELAY","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_OTLP_LOGS_TIMEOUT","OTEL_EXPORTER_JAEGER_AGENT_PORT"];function isEnvVarANumber(key){return ENVIRONMENT_NUMBERS_KEYS.indexOf(key)>-1}const ENVIRONMENT_LISTS_KEYS=["OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS"];function isEnvVarAList(key){return ENVIRONMENT_LISTS_KEYS.indexOf(key)>-1}exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT=Infinity;exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT=128;exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT=128;exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT=128;exports.DEFAULT_ENVIRONMENT={OTEL_SDK_DISABLED:false,CONTAINER_NAME:"",ECS_CONTAINER_METADATA_URI_V4:"",ECS_CONTAINER_METADATA_URI:"",HOSTNAME:"",KUBERNETES_SERVICE_HOST:"",NAMESPACE:"",OTEL_BSP_EXPORT_TIMEOUT:3e4,OTEL_BSP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BSP_MAX_QUEUE_SIZE:2048,OTEL_BSP_SCHEDULE_DELAY:5e3,OTEL_BLRP_EXPORT_TIMEOUT:3e4,OTEL_BLRP_MAX_EXPORT_BATCH_SIZE:512,OTEL_BLRP_MAX_QUEUE_SIZE:2048,OTEL_BLRP_SCHEDULE_DELAY:5e3,OTEL_EXPORTER_JAEGER_AGENT_HOST:"",OTEL_EXPORTER_JAEGER_AGENT_PORT:6832,OTEL_EXPORTER_JAEGER_ENDPOINT:"",OTEL_EXPORTER_JAEGER_PASSWORD:"",OTEL_EXPORTER_JAEGER_USER:"",OTEL_EXPORTER_OTLP_ENDPOINT:"",OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:"",OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:"",OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:"",OTEL_EXPORTER_OTLP_HEADERS:"",OTEL_EXPORTER_OTLP_TRACES_HEADERS:"",OTEL_EXPORTER_OTLP_METRICS_HEADERS:"",OTEL_EXPORTER_OTLP_LOGS_HEADERS:"",OTEL_EXPORTER_OTLP_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_TRACES_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_METRICS_TIMEOUT:1e4,OTEL_EXPORTER_OTLP_LOGS_TIMEOUT:1e4,OTEL_EXPORTER_ZIPKIN_ENDPOINT:"http://localhost:9411/api/v2/spans",OTEL_LOG_LEVEL:api_1.DiagLogLevel.INFO,OTEL_NO_PATCH_MODULES:[],OTEL_PROPAGATORS:["tracecontext","baggage"],OTEL_RESOURCE_ATTRIBUTES:"",OTEL_SERVICE_NAME:"",OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:exports.DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT:exports.DEFAULT_ATTRIBUTE_COUNT_LIMIT,OTEL_SPAN_EVENT_COUNT_LIMIT:128,OTEL_SPAN_LINK_COUNT_LIMIT:128,OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:exports.DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:exports.DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,OTEL_TRACES_EXPORTER:"",OTEL_TRACES_SAMPLER:sampling_1.TracesSamplerValues.ParentBasedAlwaysOn,OTEL_TRACES_SAMPLER_ARG:"",OTEL_LOGS_EXPORTER:"",OTEL_EXPORTER_OTLP_INSECURE:"",OTEL_EXPORTER_OTLP_TRACES_INSECURE:"",OTEL_EXPORTER_OTLP_METRICS_INSECURE:"",OTEL_EXPORTER_OTLP_LOGS_INSECURE:"",OTEL_EXPORTER_OTLP_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE:"",OTEL_EXPORTER_OTLP_COMPRESSION:"",OTEL_EXPORTER_OTLP_TRACES_COMPRESSION:"",OTEL_EXPORTER_OTLP_METRICS_COMPRESSION:"",OTEL_EXPORTER_OTLP_LOGS_COMPRESSION:"",OTEL_EXPORTER_OTLP_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY:"",OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE:"",OTEL_EXPORTER_OTLP_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_LOGS_PROTOCOL:"http/protobuf",OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE:"cumulative"};function parseBoolean(key,environment,values){if(typeof values[key]==="undefined"){return}const value=String(values[key]);environment[key]=value.toLowerCase()==="true"}function parseNumber(name,environment,values,min=-Infinity,max=Infinity){if(typeof values[name]!=="undefined"){const value=Number(values[name]);if(!isNaN(value)){if(value<min){environment[name]=min}else if(value>max){environment[name]=max}else{environment[name]=value}}}}function parseStringList(name,output,input,separator=DEFAULT_LIST_SEPARATOR){const givenValue=input[name];if(typeof givenValue==="string"){output[name]=givenValue.split(separator).map((v=>v.trim()))}}const logLevelMap={ALL:api_1.DiagLogLevel.ALL,VERBOSE:api_1.DiagLogLevel.VERBOSE,DEBUG:api_1.DiagLogLevel.DEBUG,INFO:api_1.DiagLogLevel.INFO,WARN:api_1.DiagLogLevel.WARN,ERROR:api_1.DiagLogLevel.ERROR,NONE:api_1.DiagLogLevel.NONE};function setLogLevelFromEnv(key,environment,values){const value=values[key];if(typeof value==="string"){const theLevel=logLevelMap[value.toUpperCase()];if(theLevel!=null){environment[key]=theLevel}}}function parseEnvironment(values){const environment={};for(const env in exports.DEFAULT_ENVIRONMENT){const key=env;switch(key){case"OTEL_LOG_LEVEL":setLogLevelFromEnv(key,environment,values);break;default:if(isEnvVarABoolean(key)){parseBoolean(key,environment,values)}else if(isEnvVarANumber(key)){parseNumber(key,environment,values)}else if(isEnvVarAList(key)){parseStringList(key,environment,values)}else{const value=values[key];if(typeof value!=="undefined"&&value!==null){environment[key]=String(value)}}}}return environment}exports.parseEnvironment=parseEnvironment;function getEnvWithoutDefaults(){return typeof process!=="undefined"&&process&&process.env?parseEnvironment(process.env):parseEnvironment(globalThis_1._globalThis)}exports.getEnvWithoutDefaults=getEnvWithoutDefaults}).call(this)}).call(this,require("_process"))},{"../platform/browser/globalThis":460,"./sampling":481,"@opentelemetry/api":19,_process:674}],478:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments)},{dup:131}],479:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments)},{"./lodash.merge":478,dup:132}],480:[function(require,module,exports){arguments[4][88][0].apply(exports,arguments)},{dup:88}],481:[function(require,module,exports){arguments[4][89][0].apply(exports,arguments)},{dup:89}],482:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.callWithTimeout=exports.TimeoutError=void 0;class TimeoutError extends Error{constructor(message){super(message);Object.setPrototypeOf(this,TimeoutError.prototype)}}exports.TimeoutError=TimeoutError;function callWithTimeout(promise,timeout){let timeoutHandle;const timeoutPromise=new Promise((function timeoutFunction(_resolve,reject){timeoutHandle=setTimeout((function timeoutHandler(){reject(new TimeoutError("Operation timed out."))}),timeout)}));return Promise.race([promise,timeoutPromise]).then((result=>{clearTimeout(timeoutHandle);return result}),(reason=>{clearTimeout(timeoutHandle);throw reason}))}exports.callWithTimeout=callWithTimeout},{}],483:[function(require,module,exports){arguments[4][90][0].apply(exports,arguments)},{dup:90}],484:[function(require,module,exports){arguments[4][91][0].apply(exports,arguments)},{dup:91}],485:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.15.1"},{}],486:[function(require,module,exports){arguments[4][385][0].apply(exports,arguments)},{dup:385}],487:[function(require,module,exports){arguments[4][386][0].apply(exports,arguments)},{"./platform":505,"@opentelemetry/api":19,"@opentelemetry/core":455,"@opentelemetry/semantic-conventions":535,dup:386}],488:[function(require,module,exports){arguments[4][292][0].apply(exports,arguments)},{dup:292}],489:[function(require,module,exports){arguments[4][388][0].apply(exports,arguments)},{"./Resource":487,"./utils":507,"@opentelemetry/api":19,dup:388}],490:[function(require,module,exports){arguments[4][389][0].apply(exports,arguments)},{"..":497,dup:389}],491:[function(require,module,exports){arguments[4][390][0].apply(exports,arguments)},{"..":497,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":535,dup:390}],492:[function(require,module,exports){arguments[4][391][0].apply(exports,arguments)},{"./EnvDetectorSync":493,dup:391}],493:[function(require,module,exports){arguments[4][392][0].apply(exports,arguments)},{"../Resource":487,"@opentelemetry/api":19,"@opentelemetry/core":455,"@opentelemetry/semantic-conventions":535,dup:392}],494:[function(require,module,exports){arguments[4][393][0].apply(exports,arguments)},{"./NoopDetectorSync":495,dup:393}],495:[function(require,module,exports){arguments[4][394][0].apply(exports,arguments)},{"../Resource":487,dup:394}],496:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./BrowserDetector"),exports);__exportStar(require("./EnvDetector"),exports);__exportStar(require("./BrowserDetectorSync"),exports);__exportStar(require("./EnvDetectorSync"),exports)},{"./BrowserDetector":490,"./BrowserDetectorSync":491,"./EnvDetector":492,"./EnvDetectorSync":493}],497:[function(require,module,exports){arguments[4][398][0].apply(exports,arguments)},{"./IResource":486,"./Resource":487,"./config":488,"./detect-resources":489,"./detectors":496,"./platform":505,"./types":506,dup:398}],498:[function(require,module,exports){arguments[4][299][0].apply(exports,arguments)},{"../../detectors/NoopDetector":494,dup:299}],499:[function(require,module,exports){arguments[4][400][0].apply(exports,arguments)},{"../../detectors/NoopDetectorSync":495,dup:400}],500:[function(require,module,exports){arguments[4][300][0].apply(exports,arguments)},{"../../detectors/NoopDetector":494,dup:300}],501:[function(require,module,exports){arguments[4][402][0].apply(exports,arguments)},{"../../detectors/NoopDetectorSync":495,dup:402}],502:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.processDetector=void 0;const NoopDetector_1=require("../../detectors/NoopDetector");exports.processDetector=NoopDetector_1.noopDetector},{"../../detectors/NoopDetector":494}],503:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.processDetectorSync=void 0;const NoopDetector_1=require("../../detectors/NoopDetector");exports.processDetectorSync=NoopDetector_1.noopDetector},{"../../detectors/NoopDetector":494}],504:[function(require,module,exports){arguments[4][301][0].apply(exports,arguments)},{dup:301}],505:[function(require,module,exports){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;Object.defineProperty(o,k2,{enumerable:true,get:function(){return m[k]}})}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]});var __exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(exports,p))__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:true});__exportStar(require("./default-service-name"),exports);__exportStar(require("./HostDetector"),exports);__exportStar(require("./OSDetector"),exports);__exportStar(require("./HostDetectorSync"),exports);__exportStar(require("./OSDetectorSync"),exports);__exportStar(require("./ProcessDetector"),exports);__exportStar(require("./ProcessDetectorSync"),exports)},{"./HostDetector":498,"./HostDetectorSync":499,"./OSDetector":500,"./OSDetectorSync":501,"./ProcessDetector":502,"./ProcessDetectorSync":503,"./default-service-name":504}],506:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],507:[function(require,module,exports){arguments[4][406][0].apply(exports,arguments)},{dup:406}],508:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BasicTracerProvider=exports.ForceFlushState=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const resources_1=require("@opentelemetry/resources");const _1=require(".");const config_1=require("./config");const MultiSpanProcessor_1=require("./MultiSpanProcessor");const NoopSpanProcessor_1=require("./export/NoopSpanProcessor");const platform_1=require("./platform");const utility_1=require("./utility");var ForceFlushState;(function(ForceFlushState){ForceFlushState[ForceFlushState["resolved"]=0]="resolved";ForceFlushState[ForceFlushState["timeout"]=1]="timeout";ForceFlushState[ForceFlushState["error"]=2]="error";ForceFlushState[ForceFlushState["unresolved"]=3]="unresolved"})(ForceFlushState=exports.ForceFlushState||(exports.ForceFlushState={}));class BasicTracerProvider{constructor(config={}){var _a;this._registeredSpanProcessors=[];this._tracers=new Map;const mergedConfig=(0,core_1.merge)({},(0,config_1.loadDefaultConfig)(),(0,utility_1.reconfigureLimits)(config));this.resource=(_a=mergedConfig.resource)!==null&&_a!==void 0?_a:resources_1.Resource.empty();this.resource=resources_1.Resource.default().merge(this.resource);this._config=Object.assign({},mergedConfig,{resource:this.resource});const defaultExporter=this._buildExporterFromEnv();if(defaultExporter!==undefined){const batchProcessor=new platform_1.BatchSpanProcessor(defaultExporter);this.activeSpanProcessor=batchProcessor}else{this.activeSpanProcessor=new NoopSpanProcessor_1.NoopSpanProcessor}}getTracer(name,version,options){const key=`${name}@${version||""}:${(options===null||options===void 0?void 0:options.schemaUrl)||""}`;if(!this._tracers.has(key)){this._tracers.set(key,new _1.Tracer({name:name,version:version,schemaUrl:options===null||options===void 0?void 0:options.schemaUrl},this._config,this))}return this._tracers.get(key)}addSpanProcessor(spanProcessor){if(this._registeredSpanProcessors.length===0){this.activeSpanProcessor.shutdown().catch((err=>api_1.diag.error("Error while trying to shutdown current span processor",err)))}this._registeredSpanProcessors.push(spanProcessor);this.activeSpanProcessor=new MultiSpanProcessor_1.MultiSpanProcessor(this._registeredSpanProcessors)}getActiveSpanProcessor(){return this.activeSpanProcessor}register(config={}){api_1.trace.setGlobalTracerProvider(this);if(config.propagator===undefined){config.propagator=this._buildPropagatorFromEnv()}if(config.contextManager){api_1.context.setGlobalContextManager(config.contextManager)}if(config.propagator){api_1.propagation.setGlobalPropagator(config.propagator)}}forceFlush(){const timeout=this._config.forceFlushTimeoutMillis;const promises=this._registeredSpanProcessors.map((spanProcessor=>new Promise((resolve=>{let state;const timeoutInterval=setTimeout((()=>{resolve(new Error(`Span processor did not completed within timeout period of ${timeout} ms`));state=ForceFlushState.timeout}),timeout);spanProcessor.forceFlush().then((()=>{clearTimeout(timeoutInterval);if(state!==ForceFlushState.timeout){state=ForceFlushState.resolved;resolve(state)}})).catch((error=>{clearTimeout(timeoutInterval);state=ForceFlushState.error;resolve(error)}))}))));return new Promise(((resolve,reject)=>{Promise.all(promises).then((results=>{const errors=results.filter((result=>result!==ForceFlushState.resolved));if(errors.length>0){reject(errors)}else{resolve()}})).catch((error=>reject([error])))}))}shutdown(){return this.activeSpanProcessor.shutdown()}_getPropagator(name){var _a;return(_a=this.constructor._registeredPropagators.get(name))===null||_a===void 0?void 0:_a()}_getSpanExporter(name){var _a;return(_a=this.constructor._registeredExporters.get(name))===null||_a===void 0?void 0:_a()}_buildPropagatorFromEnv(){const uniquePropagatorNames=Array.from(new Set((0,core_1.getEnv)().OTEL_PROPAGATORS));const propagators=uniquePropagatorNames.map((name=>{const propagator=this._getPropagator(name);if(!propagator){api_1.diag.warn(`Propagator "${name}" requested through environment variable is unavailable.`)}return propagator}));const validPropagators=propagators.reduce(((list,item)=>{if(item){list.push(item)}return list}),[]);if(validPropagators.length===0){return}else if(uniquePropagatorNames.length===1){return validPropagators[0]}else{return new core_1.CompositePropagator({propagators:validPropagators})}}_buildExporterFromEnv(){const exporterName=(0,core_1.getEnv)().OTEL_TRACES_EXPORTER;if(exporterName==="none"||exporterName==="")return;const exporter=this._getSpanExporter(exporterName);if(!exporter){api_1.diag.error(`Exporter "${exporterName}" requested through environment variable is unavailable.`)}return exporter}}exports.BasicTracerProvider=BasicTracerProvider;BasicTracerProvider._registeredPropagators=new Map([["tracecontext",()=>new core_1.W3CTraceContextPropagator],["baggage",()=>new core_1.W3CBaggagePropagator]]);BasicTracerProvider._registeredExporters=new Map},{".":525,"./MultiSpanProcessor":510,"./config":516,"./export/NoopSpanProcessor":521,"./platform":528,"./utility":534,"@opentelemetry/api":19,"@opentelemetry/core":455,"@opentelemetry/resources":497}],509:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],510:[function(require,module,exports){arguments[4][414][0].apply(exports,arguments)},{"@opentelemetry/core":455,dup:414}],511:[function(require,module,exports){arguments[4][415][0].apply(exports,arguments)},{dup:415}],512:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Span=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const enums_1=require("./enums");class Span{constructor(parentTracer,context,spanName,spanContext,kind,parentSpanId,links=[],startTime,_deprecatedClock){this.attributes={};this.links=[];this.events=[];this._droppedAttributesCount=0;this._droppedEventsCount=0;this._droppedLinksCount=0;this.status={code:api_1.SpanStatusCode.UNSET};this.endTime=[0,0];this._ended=false;this._duration=[-1,-1];this.name=spanName;this._spanContext=spanContext;this.parentSpanId=parentSpanId;this.kind=kind;this.links=links;const now=Date.now();this._performanceStartTime=core_1.otperformance.now();this._performanceOffset=now-(this._performanceStartTime+(0,core_1.getTimeOrigin)());this._startTimeProvided=startTime!=null;this.startTime=this._getTime(startTime!==null&&startTime!==void 0?startTime:now);this.resource=parentTracer.resource;this.instrumentationLibrary=parentTracer.instrumentationLibrary;this._spanLimits=parentTracer.getSpanLimits();this._spanProcessor=parentTracer.getActiveSpanProcessor();this._spanProcessor.onStart(this,context);this._attributeValueLengthLimit=this._spanLimits.attributeValueLengthLimit||0}spanContext(){return this._spanContext}setAttribute(key,value){if(value==null||this._isSpanEnded())return this;if(key.length===0){api_1.diag.warn(`Invalid attribute key: ${key}`);return this}if(!(0,core_1.isAttributeValue)(value)){api_1.diag.warn(`Invalid attribute value set for key: ${key}`);return this}if(Object.keys(this.attributes).length>=this._spanLimits.attributeCountLimit&&!Object.prototype.hasOwnProperty.call(this.attributes,key)){this._droppedAttributesCount++;return this}this.attributes[key]=this._truncateToSize(value);return this}setAttributes(attributes){for(const[k,v]of Object.entries(attributes)){this.setAttribute(k,v)}return this}addEvent(name,attributesOrStartTime,timeStamp){if(this._isSpanEnded())return this;if(this._spanLimits.eventCountLimit===0){api_1.diag.warn("No events allowed.");this._droppedEventsCount++;return this}if(this.events.length>=this._spanLimits.eventCountLimit){api_1.diag.warn("Dropping extra events.");this.events.shift();this._droppedEventsCount++}if((0,core_1.isTimeInput)(attributesOrStartTime)){if(!(0,core_1.isTimeInput)(timeStamp)){timeStamp=attributesOrStartTime}attributesOrStartTime=undefined}const attributes=(0,core_1.sanitizeAttributes)(attributesOrStartTime);this.events.push({name:name,attributes:attributes,time:this._getTime(timeStamp),droppedAttributesCount:0});return this}setStatus(status){if(this._isSpanEnded())return this;this.status=status;return this}updateName(name){if(this._isSpanEnded())return this;this.name=name;return this}end(endTime){if(this._isSpanEnded()){api_1.diag.error(`${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`);return}this._ended=true;this.endTime=this._getTime(endTime);this._duration=(0,core_1.hrTimeDuration)(this.startTime,this.endTime);if(this._duration[0]<0){api_1.diag.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.",this.startTime,this.endTime);this.endTime=this.startTime.slice();this._duration=[0,0]}this._spanProcessor.onEnd(this)}_getTime(inp){if(typeof inp==="number"&&inp<core_1.otperformance.now()){return(0,core_1.hrTime)(inp+this._performanceOffset)}if(typeof inp==="number"){return(0,core_1.millisToHrTime)(inp)}if(inp instanceof Date){return(0,core_1.millisToHrTime)(inp.getTime())}if((0,core_1.isTimeInputHrTime)(inp)){return inp}if(this._startTimeProvided){return(0,core_1.millisToHrTime)(Date.now())}const msDuration=core_1.otperformance.now()-this._performanceStartTime;return(0,core_1.addHrTimes)(this.startTime,(0,core_1.millisToHrTime)(msDuration))}isRecording(){return this._ended===false}recordException(exception,time){const attributes={};if(typeof exception==="string"){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]=exception}else if(exception){if(exception.code){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]=exception.code.toString()}else if(exception.name){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]=exception.name}if(exception.message){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]=exception.message}if(exception.stack){attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_STACKTRACE]=exception.stack}}if(attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_TYPE]||attributes[semantic_conventions_1.SemanticAttributes.EXCEPTION_MESSAGE]){this.addEvent(enums_1.ExceptionEventName,attributes,time)}else{api_1.diag.warn(`Failed to record an exception ${exception}`)}}get duration(){return this._duration}get ended(){return this._ended}get droppedAttributesCount(){return this._droppedAttributesCount}get droppedEventsCount(){return this._droppedEventsCount}get droppedLinksCount(){return this._droppedLinksCount}_isSpanEnded(){if(this._ended){api_1.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`)}return this._ended}_truncateToLimitUtil(value,limit){if(value.length<=limit){return value}return value.substr(0,limit)}_truncateToSize(value){const limit=this._attributeValueLengthLimit;if(limit<=0){api_1.diag.warn(`Attribute value limit must be positive, got ${limit}`);return value}if(typeof value==="string"){return this._truncateToLimitUtil(value,limit)}if(Array.isArray(value)){return value.map((val=>typeof val==="string"?this._truncateToLimitUtil(val,limit):val))}return value}}exports.Span=Span},{"./enums":517,"@opentelemetry/api":19,"@opentelemetry/core":455,"@opentelemetry/semantic-conventions":535}],513:[function(require,module,exports){arguments[4][417][0].apply(exports,arguments)},{dup:417}],514:[function(require,module,exports){arguments[4][418][0].apply(exports,arguments)},{dup:418}],515:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.Tracer=void 0;const api=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const Span_1=require("./Span");const utility_1=require("./utility");const platform_1=require("./platform");class Tracer{constructor(instrumentationLibrary,config,_tracerProvider){this._tracerProvider=_tracerProvider;const localConfig=(0,utility_1.mergeConfig)(config);this._sampler=localConfig.sampler;this._generalLimits=localConfig.generalLimits;this._spanLimits=localConfig.spanLimits;this._idGenerator=config.idGenerator||new platform_1.RandomIdGenerator;this.resource=_tracerProvider.resource;this.instrumentationLibrary=instrumentationLibrary}startSpan(name,options={},context=api.context.active()){var _a,_b,_c;if(options.root){context=api.trace.deleteSpan(context)}const parentSpan=api.trace.getSpan(context);if((0,core_1.isTracingSuppressed)(context)){api.diag.debug("Instrumentation suppressed, returning Noop Span");const nonRecordingSpan=api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);return nonRecordingSpan}const parentSpanContext=parentSpan===null||parentSpan===void 0?void 0:parentSpan.spanContext();const spanId=this._idGenerator.generateSpanId();let traceId;let traceState;let parentSpanId;if(!parentSpanContext||!api.trace.isSpanContextValid(parentSpanContext)){traceId=this._idGenerator.generateTraceId()}else{traceId=parentSpanContext.traceId;traceState=parentSpanContext.traceState;parentSpanId=parentSpanContext.spanId}const spanKind=(_a=options.kind)!==null&&_a!==void 0?_a:api.SpanKind.INTERNAL;const links=((_b=options.links)!==null&&_b!==void 0?_b:[]).map((link=>({context:link.context,attributes:(0,core_1.sanitizeAttributes)(link.attributes)})));const attributes=(0,core_1.sanitizeAttributes)(options.attributes);const samplingResult=this._sampler.shouldSample(context,traceId,name,spanKind,attributes,links);traceState=(_c=samplingResult.traceState)!==null&&_c!==void 0?_c:traceState;const traceFlags=samplingResult.decision===api.SamplingDecision.RECORD_AND_SAMPLED?api.TraceFlags.SAMPLED:api.TraceFlags.NONE;const spanContext={traceId:traceId,spanId:spanId,traceFlags:traceFlags,traceState:traceState};if(samplingResult.decision===api.SamplingDecision.NOT_RECORD){api.diag.debug("Recording is off, propagating context in a non-recording span");const nonRecordingSpan=api.trace.wrapSpanContext(spanContext);return nonRecordingSpan}const span=new Span_1.Span(this,context,name,spanContext,spanKind,parentSpanId,links,options.startTime);const initAttributes=(0,core_1.sanitizeAttributes)(Object.assign(attributes,samplingResult.attributes));span.setAttributes(initAttributes);return span}startActiveSpan(name,arg2,arg3,arg4){let opts;let ctx;let fn;if(arguments.length<2){return}else if(arguments.length===2){fn=arg2}else if(arguments.length===3){opts=arg2;fn=arg3}else{opts=arg2;ctx=arg3;fn=arg4}const parentContext=ctx!==null&&ctx!==void 0?ctx:api.context.active();const span=this.startSpan(name,opts,parentContext);const contextWithSpanSet=api.trace.setSpan(parentContext,span);return api.context.with(contextWithSpanSet,fn,undefined,span)}getGeneralLimits(){return this._generalLimits}getSpanLimits(){return this._spanLimits}getActiveSpanProcessor(){return this._tracerProvider.getActiveSpanProcessor()}}exports.Tracer=Tracer},{"./Span":512,"./platform":528,"./utility":534,"@opentelemetry/api":19,"@opentelemetry/core":455}],516:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.buildSamplerFromEnv=exports.loadDefaultConfig=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const AlwaysOffSampler_1=require("./sampler/AlwaysOffSampler");const AlwaysOnSampler_1=require("./sampler/AlwaysOnSampler");const ParentBasedSampler_1=require("./sampler/ParentBasedSampler");const TraceIdRatioBasedSampler_1=require("./sampler/TraceIdRatioBasedSampler");const env=(0,core_1.getEnv)();const FALLBACK_OTEL_TRACES_SAMPLER=core_1.TracesSamplerValues.AlwaysOn;const DEFAULT_RATIO=1;function loadDefaultConfig(){return{sampler:buildSamplerFromEnv(env),forceFlushTimeoutMillis:3e4,generalLimits:{attributeValueLengthLimit:(0,core_1.getEnv)().OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:(0,core_1.getEnv)().OTEL_ATTRIBUTE_COUNT_LIMIT},spanLimits:{attributeValueLengthLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,attributeCountLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,linkCountLimit:(0,core_1.getEnv)().OTEL_SPAN_LINK_COUNT_LIMIT,eventCountLimit:(0,core_1.getEnv)().OTEL_SPAN_EVENT_COUNT_LIMIT,attributePerEventCountLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,attributePerLinkCountLimit:(0,core_1.getEnv)().OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT}}}exports.loadDefaultConfig=loadDefaultConfig;function buildSamplerFromEnv(environment=(0,core_1.getEnv)()){switch(environment.OTEL_TRACES_SAMPLER){case core_1.TracesSamplerValues.AlwaysOn:return new AlwaysOnSampler_1.AlwaysOnSampler;case core_1.TracesSamplerValues.AlwaysOff:return new AlwaysOffSampler_1.AlwaysOffSampler;case core_1.TracesSamplerValues.ParentBasedAlwaysOn:return new ParentBasedSampler_1.ParentBasedSampler({root:new AlwaysOnSampler_1.AlwaysOnSampler});case core_1.TracesSamplerValues.ParentBasedAlwaysOff:return new ParentBasedSampler_1.ParentBasedSampler({root:new AlwaysOffSampler_1.AlwaysOffSampler});case core_1.TracesSamplerValues.TraceIdRatio:return new TraceIdRatioBasedSampler_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment));case core_1.TracesSamplerValues.ParentBasedTraceIdRatio:return new ParentBasedSampler_1.ParentBasedSampler({root:new TraceIdRatioBasedSampler_1.TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv(environment))});default:api_1.diag.error(`OTEL_TRACES_SAMPLER value "${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}".`);return new AlwaysOnSampler_1.AlwaysOnSampler}}exports.buildSamplerFromEnv=buildSamplerFromEnv;function getSamplerProbabilityFromEnv(environment){if(environment.OTEL_TRACES_SAMPLER_ARG===undefined||environment.OTEL_TRACES_SAMPLER_ARG===""){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}const probability=Number(environment.OTEL_TRACES_SAMPLER_ARG);if(isNaN(probability)){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}if(probability<0||probability>1){api_1.diag.error(`OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`);return DEFAULT_RATIO}return probability}},{"./sampler/AlwaysOffSampler":529,"./sampler/AlwaysOnSampler":530,"./sampler/ParentBasedSampler":531,"./sampler/TraceIdRatioBasedSampler":532,"@opentelemetry/api":19,"@opentelemetry/core":455}],517:[function(require,module,exports){arguments[4][421][0].apply(exports,arguments)},{dup:421}],518:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchSpanProcessorBase=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class BatchSpanProcessorBase{constructor(_exporter,config){this._exporter=_exporter;this._finishedSpans=[];this._droppedSpansCount=0;const env=(0,core_1.getEnv)();this._maxExportBatchSize=typeof(config===null||config===void 0?void 0:config.maxExportBatchSize)==="number"?config.maxExportBatchSize:env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;this._maxQueueSize=typeof(config===null||config===void 0?void 0:config.maxQueueSize)==="number"?config.maxQueueSize:env.OTEL_BSP_MAX_QUEUE_SIZE;this._scheduledDelayMillis=typeof(config===null||config===void 0?void 0:config.scheduledDelayMillis)==="number"?config.scheduledDelayMillis:env.OTEL_BSP_SCHEDULE_DELAY;this._exportTimeoutMillis=typeof(config===null||config===void 0?void 0:config.exportTimeoutMillis)==="number"?config.exportTimeoutMillis:env.OTEL_BSP_EXPORT_TIMEOUT;this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this);if(this._maxExportBatchSize>this._maxQueueSize){api_1.diag.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize");this._maxExportBatchSize=this._maxQueueSize}}forceFlush(){if(this._shutdownOnce.isCalled){return this._shutdownOnce.promise}return this._flushAll()}onStart(_span,_parentContext){}onEnd(span){if(this._shutdownOnce.isCalled){return}if((span.spanContext().traceFlags&api_1.TraceFlags.SAMPLED)===0){return}this._addToBuffer(span)}shutdown(){return this._shutdownOnce.call()}_shutdown(){return Promise.resolve().then((()=>this.onShutdown())).then((()=>this._flushAll())).then((()=>this._exporter.shutdown()))}_addToBuffer(span){if(this._finishedSpans.length>=this._maxQueueSize){if(this._droppedSpansCount===0){api_1.diag.debug("maxQueueSize reached, dropping spans")}this._droppedSpansCount++;return}if(this._droppedSpansCount>0){api_1.diag.warn(`Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`);this._droppedSpansCount=0}this._finishedSpans.push(span);this._maybeStartTimer()}_flushAll(){return new Promise(((resolve,reject)=>{const promises=[];const count=Math.ceil(this._finishedSpans.length/this._maxExportBatchSize);for(let i=0,j=count;i<j;i++){promises.push(this._flushOneBatch())}Promise.all(promises).then((()=>{resolve()})).catch(reject)}))}_flushOneBatch(){this._clearTimer();if(this._finishedSpans.length===0){return Promise.resolve()}return new Promise(((resolve,reject)=>{const timer=setTimeout((()=>{reject(new Error("Timeout"))}),this._exportTimeoutMillis);api_1.context.with((0,core_1.suppressTracing)(api_1.context.active()),(()=>{const spans=this._finishedSpans.splice(0,this._maxExportBatchSize);const doExport=()=>this._exporter.export(spans,(result=>{var _a;clearTimeout(timer);if(result.code===core_1.ExportResultCode.SUCCESS){resolve()}else{reject((_a=result.error)!==null&&_a!==void 0?_a:new Error("BatchSpanProcessor: span export failed"))}}));const pendingResources=spans.map((span=>span.resource)).filter((resource=>resource.asyncAttributesPending));if(pendingResources.length===0){doExport()}else{Promise.all(pendingResources.map((resource=>{var _a;return(_a=resource.waitForAsyncAttributes)===null||_a===void 0?void 0:_a.call(resource)}))).then(doExport,(err=>{(0,core_1.globalErrorHandler)(err);reject(err)}))}}))}))}_maybeStartTimer(){if(this._timer!==undefined)return;this._timer=setTimeout((()=>{this._flushOneBatch().then((()=>{if(this._finishedSpans.length>0){this._clearTimer();this._maybeStartTimer()}})).catch((e=>{(0,core_1.globalErrorHandler)(e)}))}),this._scheduledDelayMillis);(0,core_1.unrefTimer)(this._timer)}_clearTimer(){if(this._timer!==undefined){clearTimeout(this._timer);this._timer=undefined}}}exports.BatchSpanProcessorBase=BatchSpanProcessorBase},{"@opentelemetry/api":19,"@opentelemetry/core":455}],519:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ConsoleSpanExporter=void 0;const core_1=require("@opentelemetry/core");class ConsoleSpanExporter{export(spans,resultCallback){return this._sendSpans(spans,resultCallback)}shutdown(){this._sendSpans([]);return this.forceFlush()}forceFlush(){return Promise.resolve()}_exportInfo(span){var _a;return{traceId:span.spanContext().traceId,parentId:span.parentSpanId,traceState:(_a=span.spanContext().traceState)===null||_a===void 0?void 0:_a.serialize(),name:span.name,id:span.spanContext().spanId,kind:span.kind,timestamp:(0,core_1.hrTimeToMicroseconds)(span.startTime),duration:(0,core_1.hrTimeToMicroseconds)(span.duration),attributes:span.attributes,status:span.status,events:span.events,links:span.links}}_sendSpans(spans,done){for(const span of spans){console.dir(this._exportInfo(span),{depth:3})}if(done){return done({code:core_1.ExportResultCode.SUCCESS})}}}exports.ConsoleSpanExporter=ConsoleSpanExporter},{"@opentelemetry/core":455}],520:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InMemorySpanExporter=void 0;const core_1=require("@opentelemetry/core");class InMemorySpanExporter{constructor(){this._finishedSpans=[];this._stopped=false}export(spans,resultCallback){if(this._stopped)return resultCallback({code:core_1.ExportResultCode.FAILED,error:new Error("Exporter has been stopped")});this._finishedSpans.push(...spans);setTimeout((()=>resultCallback({code:core_1.ExportResultCode.SUCCESS})),0)}shutdown(){this._stopped=true;this._finishedSpans=[];return this.forceFlush()}forceFlush(){return Promise.resolve()}reset(){this._finishedSpans=[]}getFinishedSpans(){return this._finishedSpans}}exports.InMemorySpanExporter=InMemorySpanExporter},{"@opentelemetry/core":455}],521:[function(require,module,exports){arguments[4][425][0].apply(exports,arguments)},{dup:425}],522:[function(require,module,exports){arguments[4][426][0].apply(exports,arguments)},{dup:426}],523:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SimpleSpanProcessor=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");class SimpleSpanProcessor{constructor(_exporter){this._exporter=_exporter;this._shutdownOnce=new core_1.BindOnceFuture(this._shutdown,this);this._unresolvedExports=new Set}async forceFlush(){await Promise.all(Array.from(this._unresolvedExports));if(this._exporter.forceFlush){await this._exporter.forceFlush()}}onStart(_span,_parentContext){}onEnd(span){var _a,_b;if(this._shutdownOnce.isCalled){return}if((span.spanContext().traceFlags&api_1.TraceFlags.SAMPLED)===0){return}const doExport=()=>core_1.internal._export(this._exporter,[span]).then((result=>{var _a;if(result.code!==core_1.ExportResultCode.SUCCESS){(0,core_1.globalErrorHandler)((_a=result.error)!==null&&_a!==void 0?_a:new Error(`SimpleSpanProcessor: span export failed (status ${result})`))}})).catch((error=>{(0,core_1.globalErrorHandler)(error)}));if(span.resource.asyncAttributesPending){const exportPromise=(_b=(_a=span.resource).waitForAsyncAttributes)===null||_b===void 0?void 0:_b.call(_a).then((()=>{if(exportPromise!=null){this._unresolvedExports.delete(exportPromise)}return doExport()}),(err=>(0,core_1.globalErrorHandler)(err)));if(exportPromise!=null){this._unresolvedExports.add(exportPromise)}}else{void doExport()}}shutdown(){return this._shutdownOnce.call()}_shutdown(){return this._exporter.shutdown()}}exports.SimpleSpanProcessor=SimpleSpanProcessor},{"@opentelemetry/api":19,"@opentelemetry/core":455}],524:[function(require,module,exports){arguments[4][428][0].apply(exports,arguments)},{dup:428}],525:[function(require,module,exports){arguments[4][429][0].apply(exports,arguments)},{"./BasicTracerProvider":508,"./IdGenerator":509,"./Sampler":511,"./Span":512,"./SpanProcessor":513,"./TimedEvent":514,"./Tracer":515,"./export/ConsoleSpanExporter":519,"./export/InMemorySpanExporter":520,"./export/NoopSpanProcessor":521,"./export/ReadableSpan":522,"./export/SimpleSpanProcessor":523,"./export/SpanExporter":524,"./platform":528,"./sampler/AlwaysOffSampler":529,"./sampler/AlwaysOnSampler":530,"./sampler/ParentBasedSampler":531,"./sampler/TraceIdRatioBasedSampler":532,"./types":533,dup:429}],526:[function(require,module,exports){arguments[4][430][0].apply(exports,arguments)},{dup:430}],527:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BatchSpanProcessor=void 0;const BatchSpanProcessorBase_1=require("../../../export/BatchSpanProcessorBase");class BatchSpanProcessor extends BatchSpanProcessorBase_1.BatchSpanProcessorBase{constructor(_exporter,config){super(_exporter,config);this.onInit(config)}onInit(config){if((config===null||config===void 0?void 0:config.disableAutoFlushOnDocumentHide)!==true&&typeof document!=="undefined"){this._visibilityChangeListener=()=>{if(document.visibilityState==="hidden"){void this.forceFlush()}};this._pageHideListener=()=>{void this.forceFlush()};document.addEventListener("visibilitychange",this._visibilityChangeListener);document.addEventListener("pagehide",this._pageHideListener)}}onShutdown(){if(typeof document!=="undefined"){if(this._visibilityChangeListener){document.removeEventListener("visibilitychange",this._visibilityChangeListener)}if(this._pageHideListener){document.removeEventListener("pagehide",this._pageHideListener)}}}}exports.BatchSpanProcessor=BatchSpanProcessor},{"../../../export/BatchSpanProcessorBase":518}],528:[function(require,module,exports){arguments[4][432][0].apply(exports,arguments)},{"./RandomIdGenerator":526,"./export/BatchSpanProcessor":527,dup:432}],529:[function(require,module,exports){arguments[4][433][0].apply(exports,arguments)},{"../Sampler":511,dup:433}],530:[function(require,module,exports){arguments[4][434][0].apply(exports,arguments)},{"../Sampler":511,dup:434}],531:[function(require,module,exports){arguments[4][435][0].apply(exports,arguments)},{"./AlwaysOffSampler":529,"./AlwaysOnSampler":530,"@opentelemetry/api":19,"@opentelemetry/core":455,dup:435}],532:[function(require,module,exports){arguments[4][436][0].apply(exports,arguments)},{"../Sampler":511,"@opentelemetry/api":19,dup:436}],533:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],534:[function(require,module,exports){arguments[4][438][0].apply(exports,arguments)},{"./config":516,"@opentelemetry/core":455,dup:438}],535:[function(require,module,exports){arguments[4][155][0].apply(exports,arguments)},{"./resource":537,"./trace":539,dup:155}],536:[function(require,module,exports){arguments[4][156][0].apply(exports,arguments)},{dup:156}],537:[function(require,module,exports){arguments[4][157][0].apply(exports,arguments)},{"./SemanticResourceAttributes":536,dup:157}],538:[function(require,module,exports){arguments[4][158][0].apply(exports,arguments)},{dup:158}],539:[function(require,module,exports){arguments[4][159][0].apply(exports,arguments)},{"./SemanticAttributes":538,dup:159}],540:[function(require,module,exports){arguments[4][155][0].apply(exports,arguments)},{"./resource":542,"./trace":544,dup:155}],541:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.TelemetrySdkLanguageValues=exports.OsTypeValues=exports.HostArchValues=exports.AwsEcsLaunchtypeValues=exports.CloudPlatformValues=exports.CloudProviderValues=exports.SemanticResourceAttributes=void 0;exports.SemanticResourceAttributes={CLOUD_PROVIDER:"cloud.provider",CLOUD_ACCOUNT_ID:"cloud.account.id",CLOUD_REGION:"cloud.region",CLOUD_AVAILABILITY_ZONE:"cloud.availability_zone",CLOUD_PLATFORM:"cloud.platform",AWS_ECS_CONTAINER_ARN:"aws.ecs.container.arn",AWS_ECS_CLUSTER_ARN:"aws.ecs.cluster.arn",AWS_ECS_LAUNCHTYPE:"aws.ecs.launchtype",AWS_ECS_TASK_ARN:"aws.ecs.task.arn",AWS_ECS_TASK_FAMILY:"aws.ecs.task.family",AWS_ECS_TASK_REVISION:"aws.ecs.task.revision",AWS_EKS_CLUSTER_ARN:"aws.eks.cluster.arn",AWS_LOG_GROUP_NAMES:"aws.log.group.names",AWS_LOG_GROUP_ARNS:"aws.log.group.arns",AWS_LOG_STREAM_NAMES:"aws.log.stream.names",AWS_LOG_STREAM_ARNS:"aws.log.stream.arns",CONTAINER_NAME:"container.name",CONTAINER_ID:"container.id",CONTAINER_RUNTIME:"container.runtime",CONTAINER_IMAGE_NAME:"container.image.name",CONTAINER_IMAGE_TAG:"container.image.tag",DEPLOYMENT_ENVIRONMENT:"deployment.environment",DEVICE_ID:"device.id",DEVICE_MODEL_IDENTIFIER:"device.model.identifier",DEVICE_MODEL_NAME:"device.model.name",FAAS_NAME:"faas.name",FAAS_ID:"faas.id",FAAS_VERSION:"faas.version",FAAS_INSTANCE:"faas.instance",FAAS_MAX_MEMORY:"faas.max_memory",HOST_ID:"host.id",HOST_NAME:"host.name",HOST_TYPE:"host.type",HOST_ARCH:"host.arch",HOST_IMAGE_NAME:"host.image.name",HOST_IMAGE_ID:"host.image.id",HOST_IMAGE_VERSION:"host.image.version",K8S_CLUSTER_NAME:"k8s.cluster.name",K8S_NODE_NAME:"k8s.node.name",K8S_NODE_UID:"k8s.node.uid",K8S_NAMESPACE_NAME:"k8s.namespace.name",K8S_POD_UID:"k8s.pod.uid",K8S_POD_NAME:"k8s.pod.name",K8S_CONTAINER_NAME:"k8s.container.name",K8S_REPLICASET_UID:"k8s.replicaset.uid",K8S_REPLICASET_NAME:"k8s.replicaset.name",K8S_DEPLOYMENT_UID:"k8s.deployment.uid",K8S_DEPLOYMENT_NAME:"k8s.deployment.name",K8S_STATEFULSET_UID:"k8s.statefulset.uid",K8S_STATEFULSET_NAME:"k8s.statefulset.name",K8S_DAEMONSET_UID:"k8s.daemonset.uid",K8S_DAEMONSET_NAME:"k8s.daemonset.name",K8S_JOB_UID:"k8s.job.uid",K8S_JOB_NAME:"k8s.job.name",K8S_CRONJOB_UID:"k8s.cronjob.uid",K8S_CRONJOB_NAME:"k8s.cronjob.name",OS_TYPE:"os.type",OS_DESCRIPTION:"os.description",OS_NAME:"os.name",OS_VERSION:"os.version",PROCESS_PID:"process.pid",PROCESS_EXECUTABLE_NAME:"process.executable.name",PROCESS_EXECUTABLE_PATH:"process.executable.path",PROCESS_COMMAND:"process.command",PROCESS_COMMAND_LINE:"process.command_line",PROCESS_COMMAND_ARGS:"process.command_args",PROCESS_OWNER:"process.owner",PROCESS_RUNTIME_NAME:"process.runtime.name",PROCESS_RUNTIME_VERSION:"process.runtime.version",PROCESS_RUNTIME_DESCRIPTION:"process.runtime.description",SERVICE_NAME:"service.name",SERVICE_NAMESPACE:"service.namespace",SERVICE_INSTANCE_ID:"service.instance.id",SERVICE_VERSION:"service.version",TELEMETRY_SDK_NAME:"telemetry.sdk.name",TELEMETRY_SDK_LANGUAGE:"telemetry.sdk.language",TELEMETRY_SDK_VERSION:"telemetry.sdk.version",TELEMETRY_AUTO_VERSION:"telemetry.auto.version",WEBENGINE_NAME:"webengine.name",WEBENGINE_VERSION:"webengine.version",WEBENGINE_DESCRIPTION:"webengine.description"};exports.CloudProviderValues={ALIBABA_CLOUD:"alibaba_cloud",AWS:"aws",AZURE:"azure",GCP:"gcp"};exports.CloudPlatformValues={ALIBABA_CLOUD_ECS:"alibaba_cloud_ecs",ALIBABA_CLOUD_FC:"alibaba_cloud_fc",AWS_EC2:"aws_ec2",AWS_ECS:"aws_ecs",AWS_EKS:"aws_eks",AWS_LAMBDA:"aws_lambda",AWS_ELASTIC_BEANSTALK:"aws_elastic_beanstalk",AZURE_VM:"azure_vm",AZURE_CONTAINER_INSTANCES:"azure_container_instances",AZURE_AKS:"azure_aks",AZURE_FUNCTIONS:"azure_functions",AZURE_APP_SERVICE:"azure_app_service",GCP_COMPUTE_ENGINE:"gcp_compute_engine",GCP_CLOUD_RUN:"gcp_cloud_run",GCP_KUBERNETES_ENGINE:"gcp_kubernetes_engine",GCP_CLOUD_FUNCTIONS:"gcp_cloud_functions",GCP_APP_ENGINE:"gcp_app_engine"};exports.AwsEcsLaunchtypeValues={EC2:"ec2",FARGATE:"fargate"};exports.HostArchValues={AMD64:"amd64",ARM32:"arm32",ARM64:"arm64",IA64:"ia64",PPC32:"ppc32",PPC64:"ppc64",X86:"x86"};exports.OsTypeValues={WINDOWS:"windows",LINUX:"linux",DARWIN:"darwin",FREEBSD:"freebsd",NETBSD:"netbsd",OPENBSD:"openbsd",DRAGONFLYBSD:"dragonflybsd",HPUX:"hpux",AIX:"aix",SOLARIS:"solaris",Z_OS:"z_os"};exports.TelemetrySdkLanguageValues={CPP:"cpp",DOTNET:"dotnet",ERLANG:"erlang",GO:"go",JAVA:"java",NODEJS:"nodejs",PHP:"php",PYTHON:"python",RUBY:"ruby",WEBJS:"webjs"}},{}],542:[function(require,module,exports){arguments[4][157][0].apply(exports,arguments)},{"./SemanticResourceAttributes":541,dup:157}],543:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.MessageTypeValues=exports.RpcGrpcStatusCodeValues=exports.MessagingOperationValues=exports.MessagingDestinationKindValues=exports.HttpFlavorValues=exports.NetHostConnectionSubtypeValues=exports.NetHostConnectionTypeValues=exports.NetTransportValues=exports.FaasInvokedProviderValues=exports.FaasDocumentOperationValues=exports.FaasTriggerValues=exports.DbCassandraConsistencyLevelValues=exports.DbSystemValues=exports.SemanticAttributes=void 0;exports.SemanticAttributes={AWS_LAMBDA_INVOKED_ARN:"aws.lambda.invoked_arn",DB_SYSTEM:"db.system",DB_CONNECTION_STRING:"db.connection_string",DB_USER:"db.user",DB_JDBC_DRIVER_CLASSNAME:"db.jdbc.driver_classname",DB_NAME:"db.name",DB_STATEMENT:"db.statement",DB_OPERATION:"db.operation",DB_MSSQL_INSTANCE_NAME:"db.mssql.instance_name",DB_CASSANDRA_KEYSPACE:"db.cassandra.keyspace",DB_CASSANDRA_PAGE_SIZE:"db.cassandra.page_size",DB_CASSANDRA_CONSISTENCY_LEVEL:"db.cassandra.consistency_level",DB_CASSANDRA_TABLE:"db.cassandra.table",DB_CASSANDRA_IDEMPOTENCE:"db.cassandra.idempotence",DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT:"db.cassandra.speculative_execution_count",DB_CASSANDRA_COORDINATOR_ID:"db.cassandra.coordinator.id",DB_CASSANDRA_COORDINATOR_DC:"db.cassandra.coordinator.dc",DB_HBASE_NAMESPACE:"db.hbase.namespace",DB_REDIS_DATABASE_INDEX:"db.redis.database_index",DB_MONGODB_COLLECTION:"db.mongodb.collection",DB_SQL_TABLE:"db.sql.table",EXCEPTION_TYPE:"exception.type",EXCEPTION_MESSAGE:"exception.message",EXCEPTION_STACKTRACE:"exception.stacktrace",EXCEPTION_ESCAPED:"exception.escaped",FAAS_TRIGGER:"faas.trigger",FAAS_EXECUTION:"faas.execution",FAAS_DOCUMENT_COLLECTION:"faas.document.collection",FAAS_DOCUMENT_OPERATION:"faas.document.operation",FAAS_DOCUMENT_TIME:"faas.document.time",FAAS_DOCUMENT_NAME:"faas.document.name",FAAS_TIME:"faas.time",FAAS_CRON:"faas.cron",FAAS_COLDSTART:"faas.coldstart",FAAS_INVOKED_NAME:"faas.invoked_name",FAAS_INVOKED_PROVIDER:"faas.invoked_provider",FAAS_INVOKED_REGION:"faas.invoked_region",NET_TRANSPORT:"net.transport",NET_PEER_IP:"net.peer.ip",NET_PEER_PORT:"net.peer.port",NET_PEER_NAME:"net.peer.name",NET_HOST_IP:"net.host.ip",NET_HOST_PORT:"net.host.port",NET_HOST_NAME:"net.host.name",NET_HOST_CONNECTION_TYPE:"net.host.connection.type",NET_HOST_CONNECTION_SUBTYPE:"net.host.connection.subtype",NET_HOST_CARRIER_NAME:"net.host.carrier.name",NET_HOST_CARRIER_MCC:"net.host.carrier.mcc",NET_HOST_CARRIER_MNC:"net.host.carrier.mnc",NET_HOST_CARRIER_ICC:"net.host.carrier.icc",PEER_SERVICE:"peer.service",ENDUSER_ID:"enduser.id",ENDUSER_ROLE:"enduser.role",ENDUSER_SCOPE:"enduser.scope",THREAD_ID:"thread.id",THREAD_NAME:"thread.name",CODE_FUNCTION:"code.function",CODE_NAMESPACE:"code.namespace",CODE_FILEPATH:"code.filepath",CODE_LINENO:"code.lineno",HTTP_METHOD:"http.method",HTTP_URL:"http.url",HTTP_TARGET:"http.target",HTTP_HOST:"http.host",HTTP_SCHEME:"http.scheme",HTTP_STATUS_CODE:"http.status_code",HTTP_FLAVOR:"http.flavor",HTTP_USER_AGENT:"http.user_agent",HTTP_REQUEST_CONTENT_LENGTH:"http.request_content_length",HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED:"http.request_content_length_uncompressed",HTTP_RESPONSE_CONTENT_LENGTH:"http.response_content_length",HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED:"http.response_content_length_uncompressed",HTTP_SERVER_NAME:"http.server_name",HTTP_ROUTE:"http.route",HTTP_CLIENT_IP:"http.client_ip",AWS_DYNAMODB_TABLE_NAMES:"aws.dynamodb.table_names",AWS_DYNAMODB_CONSUMED_CAPACITY:"aws.dynamodb.consumed_capacity",AWS_DYNAMODB_ITEM_COLLECTION_METRICS:"aws.dynamodb.item_collection_metrics",AWS_DYNAMODB_PROVISIONED_READ_CAPACITY:"aws.dynamodb.provisioned_read_capacity",AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY:"aws.dynamodb.provisioned_write_capacity",AWS_DYNAMODB_CONSISTENT_READ:"aws.dynamodb.consistent_read",AWS_DYNAMODB_PROJECTION:"aws.dynamodb.projection",AWS_DYNAMODB_LIMIT:"aws.dynamodb.limit",AWS_DYNAMODB_ATTRIBUTES_TO_GET:"aws.dynamodb.attributes_to_get",AWS_DYNAMODB_INDEX_NAME:"aws.dynamodb.index_name",AWS_DYNAMODB_SELECT:"aws.dynamodb.select",AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES:"aws.dynamodb.global_secondary_indexes",AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES:"aws.dynamodb.local_secondary_indexes",AWS_DYNAMODB_EXCLUSIVE_START_TABLE:"aws.dynamodb.exclusive_start_table",AWS_DYNAMODB_TABLE_COUNT:"aws.dynamodb.table_count",AWS_DYNAMODB_SCAN_FORWARD:"aws.dynamodb.scan_forward",AWS_DYNAMODB_SEGMENT:"aws.dynamodb.segment",AWS_DYNAMODB_TOTAL_SEGMENTS:"aws.dynamodb.total_segments",AWS_DYNAMODB_COUNT:"aws.dynamodb.count",AWS_DYNAMODB_SCANNED_COUNT:"aws.dynamodb.scanned_count",AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS:"aws.dynamodb.attribute_definitions",AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES:"aws.dynamodb.global_secondary_index_updates",MESSAGING_SYSTEM:"messaging.system",MESSAGING_DESTINATION:"messaging.destination",MESSAGING_DESTINATION_KIND:"messaging.destination_kind",MESSAGING_TEMP_DESTINATION:"messaging.temp_destination",MESSAGING_PROTOCOL:"messaging.protocol",MESSAGING_PROTOCOL_VERSION:"messaging.protocol_version",MESSAGING_URL:"messaging.url",MESSAGING_MESSAGE_ID:"messaging.message_id",MESSAGING_CONVERSATION_ID:"messaging.conversation_id",MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES:"messaging.message_payload_size_bytes",MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES:"messaging.message_payload_compressed_size_bytes",MESSAGING_OPERATION:"messaging.operation",MESSAGING_CONSUMER_ID:"messaging.consumer_id",MESSAGING_RABBITMQ_ROUTING_KEY:"messaging.rabbitmq.routing_key",MESSAGING_KAFKA_MESSAGE_KEY:"messaging.kafka.message_key",MESSAGING_KAFKA_CONSUMER_GROUP:"messaging.kafka.consumer_group",MESSAGING_KAFKA_CLIENT_ID:"messaging.kafka.client_id",MESSAGING_KAFKA_PARTITION:"messaging.kafka.partition",MESSAGING_KAFKA_TOMBSTONE:"messaging.kafka.tombstone",RPC_SYSTEM:"rpc.system",RPC_SERVICE:"rpc.service",RPC_METHOD:"rpc.method",RPC_GRPC_STATUS_CODE:"rpc.grpc.status_code",RPC_JSONRPC_VERSION:"rpc.jsonrpc.version",RPC_JSONRPC_REQUEST_ID:"rpc.jsonrpc.request_id",RPC_JSONRPC_ERROR_CODE:"rpc.jsonrpc.error_code",RPC_JSONRPC_ERROR_MESSAGE:"rpc.jsonrpc.error_message",MESSAGE_TYPE:"message.type",MESSAGE_ID:"message.id",MESSAGE_COMPRESSED_SIZE:"message.compressed_size",MESSAGE_UNCOMPRESSED_SIZE:"message.uncompressed_size"};exports.DbSystemValues={OTHER_SQL:"other_sql",MSSQL:"mssql",MYSQL:"mysql",ORACLE:"oracle",DB2:"db2",POSTGRESQL:"postgresql",REDSHIFT:"redshift",HIVE:"hive",CLOUDSCAPE:"cloudscape",HSQLDB:"hsqldb",PROGRESS:"progress",MAXDB:"maxdb",HANADB:"hanadb",INGRES:"ingres",FIRSTSQL:"firstsql",EDB:"edb",CACHE:"cache",ADABAS:"adabas",FIREBIRD:"firebird",DERBY:"derby",FILEMAKER:"filemaker",INFORMIX:"informix",INSTANTDB:"instantdb",INTERBASE:"interbase",MARIADB:"mariadb",NETEZZA:"netezza",PERVASIVE:"pervasive",POINTBASE:"pointbase",SQLITE:"sqlite",SYBASE:"sybase",TERADATA:"teradata",VERTICA:"vertica",H2:"h2",COLDFUSION:"coldfusion",CASSANDRA:"cassandra",HBASE:"hbase",MONGODB:"mongodb",REDIS:"redis",COUCHBASE:"couchbase",COUCHDB:"couchdb",COSMOSDB:"cosmosdb",DYNAMODB:"dynamodb",NEO4J:"neo4j",GEODE:"geode",ELASTICSEARCH:"elasticsearch",MEMCACHED:"memcached",COCKROACHDB:"cockroachdb"};exports.DbCassandraConsistencyLevelValues={ALL:"all",EACH_QUORUM:"each_quorum",QUORUM:"quorum",LOCAL_QUORUM:"local_quorum",ONE:"one",TWO:"two",THREE:"three",LOCAL_ONE:"local_one",ANY:"any",SERIAL:"serial",LOCAL_SERIAL:"local_serial"};exports.FaasTriggerValues={DATASOURCE:"datasource",HTTP:"http",PUBSUB:"pubsub",TIMER:"timer",OTHER:"other"};exports.FaasDocumentOperationValues={INSERT:"insert",EDIT:"edit",DELETE:"delete"};exports.FaasInvokedProviderValues={ALIBABA_CLOUD:"alibaba_cloud",AWS:"aws",AZURE:"azure",GCP:"gcp"};exports.NetTransportValues={IP_TCP:"ip_tcp",IP_UDP:"ip_udp",IP:"ip",UNIX:"unix",PIPE:"pipe",INPROC:"inproc",OTHER:"other"};exports.NetHostConnectionTypeValues={WIFI:"wifi",WIRED:"wired",CELL:"cell",UNAVAILABLE:"unavailable",UNKNOWN:"unknown"};exports.NetHostConnectionSubtypeValues={GPRS:"gprs",EDGE:"edge",UMTS:"umts",CDMA:"cdma",EVDO_0:"evdo_0",EVDO_A:"evdo_a",CDMA2000_1XRTT:"cdma2000_1xrtt",HSDPA:"hsdpa",HSUPA:"hsupa",HSPA:"hspa",IDEN:"iden",EVDO_B:"evdo_b",LTE:"lte",EHRPD:"ehrpd",HSPAP:"hspap",GSM:"gsm",TD_SCDMA:"td_scdma",IWLAN:"iwlan",NR:"nr",NRNSA:"nrnsa",LTE_CA:"lte_ca"};exports.HttpFlavorValues={HTTP_1_0:"1.0",HTTP_1_1:"1.1",HTTP_2_0:"2.0",SPDY:"SPDY",QUIC:"QUIC"};exports.MessagingDestinationKindValues={QUEUE:"queue",TOPIC:"topic"};exports.MessagingOperationValues={RECEIVE:"receive",PROCESS:"process"};exports.RpcGrpcStatusCodeValues={OK:0,CANCELLED:1,UNKNOWN:2,INVALID_ARGUMENT:3,DEADLINE_EXCEEDED:4,NOT_FOUND:5,ALREADY_EXISTS:6,PERMISSION_DENIED:7,RESOURCE_EXHAUSTED:8,FAILED_PRECONDITION:9,ABORTED:10,OUT_OF_RANGE:11,UNIMPLEMENTED:12,INTERNAL:13,UNAVAILABLE:14,DATA_LOSS:15,UNAUTHENTICATED:16};exports.MessageTypeValues={SENT:"SENT",RECEIVED:"RECEIVED"}},{}],544:[function(require,module,exports){arguments[4][159][0].apply(exports,arguments)},{"./SemanticAttributes":543,dup:159}],545:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AttributeNames=void 0;var AttributeNames;(function(AttributeNames){AttributeNames["DOCUMENT_LOAD"]="documentLoad";AttributeNames["DOCUMENT_FETCH"]="documentFetch";AttributeNames["RESOURCE_FETCH"]="resourceFetch"})(AttributeNames=exports.AttributeNames||(exports.AttributeNames={}))},{}],546:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.EventNames=void 0;var EventNames;(function(EventNames){EventNames["FIRST_PAINT"]="firstPaint";EventNames["FIRST_CONTENTFUL_PAINT"]="firstContentfulPaint"})(EventNames=exports.EventNames||(exports.EventNames={}))},{}],547:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./instrumentation"),exports);(0,tslib_1.__exportStar)(require("./enums/AttributeNames"),exports);(0,tslib_1.__exportStar)(require("./types"),exports)},{"./enums/AttributeNames":545,"./instrumentation":548,"./types":549,tslib:677}],548:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DocumentLoadInstrumentation=void 0;const api_1=require("@opentelemetry/api");const core_1=require("@opentelemetry/core");const sdk_trace_web_1=require("@opentelemetry/sdk-trace-web");const instrumentation_1=require("@opentelemetry/instrumentation");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const utils_1=require("./utils");class DocumentLoadInstrumentation extends instrumentation_1.InstrumentationBase{constructor(config={}){super("@middleware-labs/instrumentation-document-load","0.1",config);this.component="document-load";this.version="1";this.moduleName=this.component}init(){}_onDocumentLoaded(){window.setTimeout((()=>{this._collectPerformance()}))}_addResourcesSpans(rootSpan){var _a,_b;const resources=(_b=(_a=core_1.otperformance).getEntriesByType)===null||_b===void 0?void 0:_b.call(_a,"resource");if(resources){resources.forEach((resource=>{this._initResourceSpan(resource,rootSpan)}))}}_collectPerformance(){const metaElement=Array.from(document.getElementsByTagName("meta")).find((e=>e.getAttribute("name")===core_1.TRACE_PARENT_HEADER));const entries=(0,utils_1.getPerformanceNavigationEntries)();const traceparent=metaElement&&metaElement.content||"";api_1.context.with(api_1.propagation.extract(api_1.ROOT_CONTEXT,{traceparent:traceparent}),(()=>{var _a;const rootSpan=this._startSpan("document load "+location.href,sdk_trace_web_1.PerformanceTimingNames.FETCH_START,entries);if(!rootSpan){return}rootSpan.setAttribute("event.type","load");api_1.context.with(api_1.trace.setSpan(api_1.context.active(),rootSpan),(()=>{const fetchSpan=this._startSpan("document fetch "+location.href,sdk_trace_web_1.PerformanceTimingNames.FETCH_START,entries);if(fetchSpan){fetchSpan.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_URL,location.href);fetchSpan.setAttribute("event.type","fetch");api_1.context.with(api_1.trace.setSpan(api_1.context.active(),fetchSpan),(()=>{var _a;(0,sdk_trace_web_1.addSpanNetworkEvents)(fetchSpan,entries);this._addCustomAttributesOnSpan(fetchSpan,(_a=this._getConfig().applyCustomAttributesOnSpan)===null||_a===void 0?void 0:_a.documentFetch);this._endSpan(fetchSpan,sdk_trace_web_1.PerformanceTimingNames.RESPONSE_END,entries)}))}}));rootSpan.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_URL,location.href);rootSpan.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_USER_AGENT,navigator.userAgent);this._addResourcesSpans(rootSpan);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.FETCH_START,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.UNLOAD_EVENT_START,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.UNLOAD_EVENT_END,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.DOM_INTERACTIVE,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_START,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.DOM_CONTENT_LOADED_EVENT_END,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.DOM_COMPLETE,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.LOAD_EVENT_START,entries);(0,sdk_trace_web_1.addSpanNetworkEvent)(rootSpan,sdk_trace_web_1.PerformanceTimingNames.LOAD_EVENT_END,entries);(0,utils_1.addSpanPerformancePaintEvents)(rootSpan);this._addCustomAttributesOnSpan(rootSpan,(_a=this._getConfig().applyCustomAttributesOnSpan)===null||_a===void 0?void 0:_a.documentLoad);this._endSpan(rootSpan,sdk_trace_web_1.PerformanceTimingNames.LOAD_EVENT_END,entries)}))}_endSpan(span,performanceName,entries){if(span){if((0,sdk_trace_web_1.hasKey)(entries,performanceName)){span.end(entries[performanceName])}else{span.end()}}}_initResourceSpan(resource,parentSpan){var _a;const span=this._startSpan("resource fetch"+resource.name,sdk_trace_web_1.PerformanceTimingNames.FETCH_START,resource,parentSpan);if(span){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_URL,resource.name);(0,sdk_trace_web_1.addSpanNetworkEvents)(span,resource);this._addCustomAttributesOnResourceSpan(span,resource,(_a=this._getConfig().applyCustomAttributesOnSpan)===null||_a===void 0?void 0:_a.resourceFetch);this._endSpan(span,sdk_trace_web_1.PerformanceTimingNames.RESPONSE_END,resource)}}_startSpan(spanName,performanceName,entries,parentSpan){if((0,sdk_trace_web_1.hasKey)(entries,performanceName)&&typeof entries[performanceName]==="number"){const span=this.tracer.startSpan(spanName,{startTime:entries[performanceName]},parentSpan?api_1.trace.setSpan(api_1.context.active(),parentSpan):undefined);return span}return undefined}_waitForPageLoad(){if(window.document.readyState==="complete"){this._onDocumentLoaded()}else{this._onDocumentLoaded=this._onDocumentLoaded.bind(this);window.addEventListener("load",this._onDocumentLoaded)}}_getConfig(){return this._config}_addCustomAttributesOnSpan(span,applyCustomAttributesOnSpan){if(applyCustomAttributesOnSpan){(0,instrumentation_1.safeExecuteInTheMiddle)((()=>applyCustomAttributesOnSpan(span)),(error=>{if(!error){return}this._diag.error("addCustomAttributesOnSpan",error)}),true)}}_addCustomAttributesOnResourceSpan(span,resource,applyCustomAttributesOnSpan){if(applyCustomAttributesOnSpan){(0,instrumentation_1.safeExecuteInTheMiddle)((()=>applyCustomAttributesOnSpan(span,resource)),(error=>{if(!error){return}this._diag.error("addCustomAttributesOnResourceSpan",error)}),true)}}enable(){window.removeEventListener("load",this._onDocumentLoaded);this._waitForPageLoad()}disable(){window.removeEventListener("load",this._onDocumentLoaded)}}exports.DocumentLoadInstrumentation=DocumentLoadInstrumentation},{"./utils":550,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/instrumentation":553,"@opentelemetry/sdk-trace-web":442,"@opentelemetry/semantic-conventions":540}],549:[function(require,module,exports){arguments[4][150][0].apply(exports,arguments)},{dup:150}],550:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.addSpanPerformancePaintEvents=exports.getPerformanceNavigationEntries=void 0;const core_1=require("@opentelemetry/core");const sdk_trace_web_1=require("@opentelemetry/sdk-trace-web");const EventNames_1=require("./enums/EventNames");const getPerformanceNavigationEntries=()=>{var _a,_b;const entries={};const performanceNavigationTiming=(_b=(_a=core_1.otperformance).getEntriesByType)===null||_b===void 0?void 0:_b.call(_a,"navigation")[0];if(performanceNavigationTiming){const keys=Object.values(sdk_trace_web_1.PerformanceTimingNames);keys.forEach((key=>{if((0,sdk_trace_web_1.hasKey)(performanceNavigationTiming,key)){const value=performanceNavigationTiming[key];if(typeof value==="number"){entries[key]=value}}}))}else{const perf=core_1.otperformance;const performanceTiming=perf.timing;if(performanceTiming){const keys=Object.values(sdk_trace_web_1.PerformanceTimingNames);keys.forEach((key=>{if((0,sdk_trace_web_1.hasKey)(performanceTiming,key)){const value=performanceTiming[key];if(typeof value==="number"){entries[key]=value}}}))}}return entries};exports.getPerformanceNavigationEntries=getPerformanceNavigationEntries;const performancePaintNames={"first-paint":EventNames_1.EventNames.FIRST_PAINT,"first-contentful-paint":EventNames_1.EventNames.FIRST_CONTENTFUL_PAINT};const addSpanPerformancePaintEvents=span=>{var _a,_b;const performancePaintTiming=(_b=(_a=core_1.otperformance).getEntriesByType)===null||_b===void 0?void 0:_b.call(_a,"paint");if(performancePaintTiming){performancePaintTiming.forEach((({name:name,startTime:startTime})=>{if((0,sdk_trace_web_1.hasKey)(performancePaintNames,name)){span.addEvent(performancePaintNames[name],startTime)}}))}};exports.addSpanPerformancePaintEvents=addSpanPerformancePaintEvents},{"./enums/EventNames":546,"@opentelemetry/core":63,"@opentelemetry/sdk-trace-web":442}],551:[function(require,module,exports){arguments[4][230][0].apply(exports,arguments)},{"./autoLoaderUtils":552,"@opentelemetry/api":19,dup:230}],552:[function(require,module,exports){arguments[4][231][0].apply(exports,arguments)},{dup:231}],553:[function(require,module,exports){arguments[4][232][0].apply(exports,arguments)},{"./autoLoader":551,"./platform/index":555,"./types":557,"./types_internal":558,"./utils":559,dup:232}],554:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentationAbstract=void 0;const api_1=require("@opentelemetry/api");const shimmer=require("shimmer");class InstrumentationAbstract{constructor(instrumentationName,instrumentationVersion,config={}){this.instrumentationName=instrumentationName;this.instrumentationVersion=instrumentationVersion;this._wrap=shimmer.wrap;this._unwrap=shimmer.unwrap;this._massWrap=shimmer.massWrap;this._massUnwrap=shimmer.massUnwrap;this._config=Object.assign({enabled:true},config);this._diag=api_1.diag.createComponentLogger({namespace:instrumentationName});this._tracer=api_1.trace.getTracer(instrumentationName,instrumentationVersion);this._meter=api_1.metrics.getMeter(instrumentationName,instrumentationVersion);this._updateMetricInstruments()}get meter(){return this._meter}setMeterProvider(meterProvider){this._meter=meterProvider.getMeter(this.instrumentationName,this.instrumentationVersion);this._updateMetricInstruments()}_updateMetricInstruments(){return}getConfig(){return this._config}setConfig(config={}){this._config=Object.assign({},config)}setTracerProvider(tracerProvider){this._tracer=tracerProvider.getTracer(this.instrumentationName,this.instrumentationVersion)}get tracer(){return this._tracer}}exports.InstrumentationAbstract=InstrumentationAbstract},{"@opentelemetry/api":19,shimmer:675}],555:[function(require,module,exports){arguments[4][234][0].apply(exports,arguments)},{"./instrumentation":556,dup:234}],556:[function(require,module,exports){arguments[4][235][0].apply(exports,arguments)},{"../../instrumentation":554,dup:235}],557:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],558:[function(require,module,exports){arguments[4][237][0].apply(exports,arguments)},{dup:237}],559:[function(require,module,exports){arguments[4][238][0].apply(exports,arguments)},{dup:238}],560:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AttributeNames=void 0;var AttributeNames;(function(AttributeNames){AttributeNames["HTTP_STATUS_TEXT"]="http.status_text"})(AttributeNames=exports.AttributeNames||(exports.AttributeNames={}))},{}],561:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.EventNames=void 0;var EventNames;(function(EventNames){EventNames["METHOD_OPEN"]="open";EventNames["METHOD_SEND"]="send";EventNames["EVENT_ABORT"]="abort";EventNames["EVENT_ERROR"]="error";EventNames["EVENT_LOAD"]="loaded";EventNames["EVENT_TIMEOUT"]="timeout"})(EventNames=exports.EventNames||(exports.EventNames={}))},{}],562:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./xhr"),exports)},{"./xhr":563,tslib:677}],563:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.XMLHttpRequestInstrumentation=void 0;const api=require("@opentelemetry/api");const instrumentation_1=require("@opentelemetry/instrumentation");const core_1=require("@opentelemetry/core");const semantic_conventions_1=require("@opentelemetry/semantic-conventions");const sdk_trace_web_1=require("@opentelemetry/sdk-trace-web");const EventNames_1=require("./enums/EventNames");const AttributeNames_1=require("./enums/AttributeNames");const OBSERVER_WAIT_TIME_MS=300;class XMLHttpRequestInstrumentation extends instrumentation_1.InstrumentationBase{constructor(config){super("middleware.io-instrumentation-xml-http-request","0.1",config);this.component="xml-http-request";this.moduleName=this.component;this._tasksCount=0;this._xhrMem=new WeakMap;this._usedResources=new WeakSet}init(){}_getConfig(){return this._config}_addHeaders(xhr,spanUrl){const url=(0,sdk_trace_web_1.parseUrl)(spanUrl).href;if(!(0,sdk_trace_web_1.shouldPropagateTraceHeaders)(url,this._getConfig().propagateTraceHeaderCorsUrls)){const headers={};api.propagation.inject(api.context.active(),headers);if(Object.keys(headers).length>0){this._diag.debug("headers inject skipped due to CORS policy")}return}const headers={};api.propagation.inject(api.context.active(),headers);Object.keys(headers).forEach((key=>{xhr.setRequestHeader(key,String(headers[key]))}))}_addChildSpan(span,corsPreFlightRequest){api.context.with(api.trace.setSpan(api.context.active(),span),(()=>{const childSpan=this.tracer.startSpan("CORS Preflight",{startTime:corsPreFlightRequest[sdk_trace_web_1.PerformanceTimingNames.FETCH_START]});(0,sdk_trace_web_1.addSpanNetworkEvents)(childSpan,corsPreFlightRequest);childSpan.end(corsPreFlightRequest[sdk_trace_web_1.PerformanceTimingNames.RESPONSE_END])}))}_addFinalSpanAttributes(span,xhrMem,spanUrl){if(typeof spanUrl==="string"){const parsedUrl=(0,sdk_trace_web_1.parseUrl)(spanUrl);if(xhrMem.status!==undefined){span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_STATUS_CODE,xhrMem.status)}if(xhrMem.statusText!==undefined){span.setAttribute(AttributeNames_1.AttributeNames.HTTP_STATUS_TEXT,xhrMem.statusText)}span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_HOST,parsedUrl.host);span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_SCHEME,parsedUrl.protocol.replace(":",""));span.setAttribute(semantic_conventions_1.SemanticAttributes.HTTP_USER_AGENT,navigator.userAgent)}}_applyAttributesAfterXHR(span,xhr){const applyCustomAttributesOnSpan=this._getConfig().applyCustomAttributesOnSpan;if(typeof applyCustomAttributesOnSpan==="function"){(0,instrumentation_1.safeExecuteInTheMiddle)((()=>applyCustomAttributesOnSpan(span,xhr)),(error=>{if(!error){return}this._diag.error("applyCustomAttributesOnSpan",error)}),true)}}_addResourceObserver(xhr,spanUrl){const xhrMem=this._xhrMem.get(xhr);if(!xhrMem||typeof PerformanceObserver!=="function"||typeof PerformanceResourceTiming!=="function"){return}xhrMem.createdResources={observer:new PerformanceObserver((list=>{const entries=list.getEntries();const parsedUrl=(0,sdk_trace_web_1.parseUrl)(spanUrl);entries.forEach((entry=>{if(entry.initiatorType==="xmlhttprequest"&&entry.name===parsedUrl.href){if(xhrMem.createdResources){xhrMem.createdResources.entries.push(entry)}}}))})),entries:[]};xhrMem.createdResources.observer.observe({entryTypes:["resource"]})}_clearResources(){if(this._tasksCount===0&&this._getConfig().clearTimingResources){core_1.otperformance.clearResourceTimings();this._xhrMem=new WeakMap;this._usedResources=new WeakSet}}_findResourceAndAddNetworkEvents(xhrMem,span,spanUrl,startTime,endTime){if(!spanUrl||!startTime||!endTime||!xhrMem.createdResources){return}let resources=xhrMem.createdResources.entries;if(!resources||!resources.length){resources=core_1.otperformance.getEntriesByType("resource")}const resource=(0,sdk_trace_web_1.getResource)((0,sdk_trace_web_1.parseUrl)(spanUrl).href,startTime,endTime,resources,this._usedResources);if(resource.mainRequest){const mainRequest=resource.mainRequest;this._markResourceAsUsed(mainRequest);const corsPreFlightRequest=resource.corsPreFlightRequest;if(corsPreFlightRequest){this._addChildSpan(span,corsPreFlightRequest);this._markResourceAsUsed(corsPreFlightRequest)}(0,sdk_trace_web_1.addSpanNetworkEvents)(span,mainRequest)}}_cleanPreviousSpanInformation(xhr){const xhrMem=this._xhrMem.get(xhr);if(xhrMem){const callbackToRemoveEvents=xhrMem.callbackToRemoveEvents;if(callbackToRemoveEvents){callbackToRemoveEvents()}this._xhrMem.delete(xhr)}}_createSpan(xhr,url,method){if((0,core_1.isUrlIgnored)(url,this._getConfig().ignoreUrls)){this._diag.debug("ignoring span as url matches ignored url");return}const spanName=method.toUpperCase()+" "+(0,sdk_trace_web_1.parseUrl)(url).toString();const currentSpan=this.tracer.startSpan(spanName,{kind:api.SpanKind.CLIENT,attributes:{[semantic_conventions_1.SemanticAttributes.HTTP_METHOD]:method,[semantic_conventions_1.SemanticAttributes.HTTP_URL]:(0,sdk_trace_web_1.parseUrl)(url).toString()}});currentSpan.addEvent(EventNames_1.EventNames.METHOD_OPEN);this._cleanPreviousSpanInformation(xhr);this._xhrMem.set(xhr,{span:currentSpan,spanUrl:url});return currentSpan}_markResourceAsUsed(resource){this._usedResources.add(resource)}_patchOpen(){return original=>{const plugin=this;return function patchOpen(...args){const method=args[0];const url=args[1];plugin._createSpan(this,url,method);return original.apply(this,args)}}}_patchSend(){const plugin=this;function endSpanTimeout(eventName,xhrMem,performanceEndTime,endTime){const callbackToRemoveEvents=xhrMem.callbackToRemoveEvents;if(typeof callbackToRemoveEvents==="function"){callbackToRemoveEvents()}const{span:span,spanUrl:spanUrl,sendStartTime:sendStartTime}=xhrMem;if(span){plugin._findResourceAndAddNetworkEvents(xhrMem,span,spanUrl,sendStartTime,performanceEndTime);span.addEvent(eventName,endTime);plugin._addFinalSpanAttributes(span,xhrMem,spanUrl);span.end(endTime);plugin._tasksCount--}plugin._clearResources()}function endSpan(eventName,xhr){const xhrMem=plugin._xhrMem.get(xhr);if(!xhrMem){return}xhrMem.status=xhr.status;xhrMem.statusText=xhr.statusText;plugin._xhrMem.delete(xhr);if(xhrMem.span){plugin._applyAttributesAfterXHR(xhrMem.span,xhr)}const performanceEndTime=(0,core_1.hrTime)();const endTime=Date.now();setTimeout((()=>{endSpanTimeout(eventName,xhrMem,performanceEndTime,endTime)}),OBSERVER_WAIT_TIME_MS)}function onError(){endSpan(EventNames_1.EventNames.EVENT_ERROR,this)}function onAbort(){endSpan(EventNames_1.EventNames.EVENT_ABORT,this)}function onTimeout(){endSpan(EventNames_1.EventNames.EVENT_TIMEOUT,this)}function onLoad(){if(this.status<299){endSpan(EventNames_1.EventNames.EVENT_LOAD,this)}else{endSpan(EventNames_1.EventNames.EVENT_ERROR,this)}}function unregister(xhr){xhr.removeEventListener("abort",onAbort);xhr.removeEventListener("error",onError);xhr.removeEventListener("load",onLoad);xhr.removeEventListener("timeout",onTimeout);const xhrMem=plugin._xhrMem.get(xhr);if(xhrMem){xhrMem.callbackToRemoveEvents=undefined}}return original=>function patchSend(...args){const xhrMem=plugin._xhrMem.get(this);if(!xhrMem){return original.apply(this,args)}const currentSpan=xhrMem.span;const spanUrl=xhrMem.spanUrl;if(currentSpan&&spanUrl){api.context.with(api.trace.setSpan(api.context.active(),currentSpan),(()=>{plugin._tasksCount++;xhrMem.sendStartTime=(0,core_1.hrTime)();currentSpan.addEvent(EventNames_1.EventNames.METHOD_SEND);this.addEventListener("abort",onAbort);this.addEventListener("error",onError);this.addEventListener("load",onLoad);this.addEventListener("timeout",onTimeout);xhrMem.callbackToRemoveEvents=()=>{unregister(this);if(xhrMem.createdResources){xhrMem.createdResources.observer.disconnect()}};plugin._addHeaders(this,spanUrl);plugin._addResourceObserver(this,spanUrl)}))}return original.apply(this,args)}}enable(){this._diag.debug("applying patch to",this.moduleName,.1);if((0,instrumentation_1.isWrapped)(XMLHttpRequest.prototype.open)){this._unwrap(XMLHttpRequest.prototype,"open");this._diag.debug("removing previous patch from method open")}if((0,instrumentation_1.isWrapped)(XMLHttpRequest.prototype.send)){this._unwrap(XMLHttpRequest.prototype,"send");this._diag.debug("removing previous patch from method send")}this._wrap(XMLHttpRequest.prototype,"open",this._patchOpen());this._wrap(XMLHttpRequest.prototype,"send",this._patchSend())}disable(){this._diag.debug("removing patch from",this.moduleName,.1);this._unwrap(XMLHttpRequest.prototype,"open");this._unwrap(XMLHttpRequest.prototype,"send");this._tasksCount=0;this._xhrMem=new WeakMap;this._usedResources=new WeakSet}}exports.XMLHttpRequestInstrumentation=XMLHttpRequestInstrumentation},{"./enums/AttributeNames":560,"./enums/EventNames":561,"@opentelemetry/api":19,"@opentelemetry/core":574,"@opentelemetry/instrumentation":607,"@opentelemetry/sdk-trace-web":666,"@opentelemetry/semantic-conventions":669}],564:[function(require,module,exports){arguments[4][53][0].apply(exports,arguments)},{dup:53}],565:[function(require,module,exports){arguments[4][54][0].apply(exports,arguments)},{dup:54}],566:[function(require,module,exports){arguments[4][100][0].apply(exports,arguments)},{"../../trace/suppress-tracing":594,"../constants":565,"../utils":567,"@opentelemetry/api":19,dup:100}],567:[function(require,module,exports){arguments[4][56][0].apply(exports,arguments)},{"./constants":565,"@opentelemetry/api":19,dup:56}],568:[function(require,module,exports){arguments[4][57][0].apply(exports,arguments)},{dup:57}],569:[function(require,module,exports){arguments[4][58][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:58}],570:[function(require,module,exports){arguments[4][59][0].apply(exports,arguments)},{"./logging-error-handler":571,dup:59}],571:[function(require,module,exports){arguments[4][60][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:60}],572:[function(require,module,exports){arguments[4][106][0].apply(exports,arguments)},{"../platform":581,dup:106}],573:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],574:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.internal=exports.baggageUtils=void 0;const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./baggage/propagation/W3CBaggagePropagator"),exports);(0,tslib_1.__exportStar)(require("./common/anchored-clock"),exports);(0,tslib_1.__exportStar)(require("./common/attributes"),exports);(0,tslib_1.__exportStar)(require("./common/global-error-handler"),exports);(0,tslib_1.__exportStar)(require("./common/logging-error-handler"),exports);(0,tslib_1.__exportStar)(require("./common/time"),exports);(0,tslib_1.__exportStar)(require("./common/types"),exports);(0,tslib_1.__exportStar)(require("./ExportResult"),exports);(0,tslib_1.__exportStar)(require("./version"),exports);exports.baggageUtils=require("./baggage/utils");(0,tslib_1.__exportStar)(require("./platform"),exports);(0,tslib_1.__exportStar)(require("./propagation/composite"),exports);(0,tslib_1.__exportStar)(require("./trace/W3CTraceContextPropagator"),exports);(0,tslib_1.__exportStar)(require("./trace/IdGenerator"),exports);(0,tslib_1.__exportStar)(require("./trace/rpc-metadata"),exports);(0,tslib_1.__exportStar)(require("./trace/sampler/AlwaysOffSampler"),exports);(0,tslib_1.__exportStar)(require("./trace/sampler/AlwaysOnSampler"),exports);(0,tslib_1.__exportStar)(require("./trace/sampler/ParentBasedSampler"),exports);(0,tslib_1.__exportStar)(require("./trace/sampler/TraceIdRatioBasedSampler"),exports);(0,tslib_1.__exportStar)(require("./trace/suppress-tracing"),exports);(0,tslib_1.__exportStar)(require("./trace/TraceState"),exports);(0,tslib_1.__exportStar)(require("./utils/environment"),exports);(0,tslib_1.__exportStar)(require("./utils/merge"),exports);(0,tslib_1.__exportStar)(require("./utils/sampling"),exports);(0,tslib_1.__exportStar)(require("./utils/timeout"),exports);(0,tslib_1.__exportStar)(require("./utils/url"),exports);(0,tslib_1.__exportStar)(require("./utils/wrap"),exports);(0,tslib_1.__exportStar)(require("./utils/callback"),exports);(0,tslib_1.__exportStar)(require("./version"),exports);const exporter_1=require("./internal/exporter");exports.internal={_export:exporter_1._export}},{"./ExportResult":564,"./baggage/propagation/W3CBaggagePropagator":566,"./baggage/utils":567,"./common/anchored-clock":568,"./common/attributes":569,"./common/global-error-handler":570,"./common/logging-error-handler":571,"./common/time":572,"./common/types":573,"./internal/exporter":575,"./platform":581,"./propagation/composite":585,"./trace/IdGenerator":586,"./trace/TraceState":587,"./trace/W3CTraceContextPropagator":588,"./trace/rpc-metadata":589,"./trace/sampler/AlwaysOffSampler":590,"./trace/sampler/AlwaysOnSampler":591,"./trace/sampler/ParentBasedSampler":592,"./trace/sampler/TraceIdRatioBasedSampler":593,"./trace/suppress-tracing":594,"./utils/callback":595,"./utils/environment":596,"./utils/merge":598,"./utils/sampling":600,"./utils/timeout":601,"./utils/url":602,"./utils/wrap":603,"./version":604,tslib:677}],575:[function(require,module,exports){arguments[4][109][0].apply(exports,arguments)},{"../trace/suppress-tracing":594,"@opentelemetry/api":19,dup:109}],576:[function(require,module,exports){arguments[4][65][0].apply(exports,arguments)},{dup:65}],577:[function(require,module,exports){arguments[4][66][0].apply(exports,arguments)},{dup:66}],578:[function(require,module,exports){arguments[4][67][0].apply(exports,arguments)},{"../../utils/environment":596,"./globalThis":579,dup:67}],579:[function(require,module,exports){arguments[4][113][0].apply(exports,arguments)},{dup:113}],580:[function(require,module,exports){arguments[4][69][0].apply(exports,arguments)},{dup:69}],581:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./environment"),exports);(0,tslib_1.__exportStar)(require("./globalThis"),exports);(0,tslib_1.__exportStar)(require("./hex-to-base64"),exports);(0,tslib_1.__exportStar)(require("./RandomIdGenerator"),exports);(0,tslib_1.__exportStar)(require("./performance"),exports);(0,tslib_1.__exportStar)(require("./sdk-info"),exports);(0,tslib_1.__exportStar)(require("./timer-util"),exports)},{"./RandomIdGenerator":577,"./environment":578,"./globalThis":579,"./hex-to-base64":580,"./performance":582,"./sdk-info":583,"./timer-util":584,tslib:677}],582:[function(require,module,exports){arguments[4][71][0].apply(exports,arguments)},{dup:71}],583:[function(require,module,exports){arguments[4][72][0].apply(exports,arguments)},{"../../version":604,"@opentelemetry/semantic-conventions":669,dup:72}],584:[function(require,module,exports){arguments[4][73][0].apply(exports,arguments)},{dup:73}],585:[function(require,module,exports){arguments[4][74][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:74}],586:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],587:[function(require,module,exports){arguments[4][76][0].apply(exports,arguments)},{"../internal/validators":576,dup:76}],588:[function(require,module,exports){arguments[4][77][0].apply(exports,arguments)},{"./TraceState":587,"./suppress-tracing":594,"@opentelemetry/api":19,dup:77}],589:[function(require,module,exports){arguments[4][78][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:78}],590:[function(require,module,exports){arguments[4][79][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:79}],591:[function(require,module,exports){arguments[4][80][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:80}],592:[function(require,module,exports){arguments[4][81][0].apply(exports,arguments)},{"../../common/global-error-handler":570,"./AlwaysOffSampler":590,"./AlwaysOnSampler":591,"@opentelemetry/api":19,dup:81}],593:[function(require,module,exports){arguments[4][82][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:82}],594:[function(require,module,exports){arguments[4][83][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:83}],595:[function(require,module,exports){arguments[4][129][0].apply(exports,arguments)},{"./promise":599,dup:129}],596:[function(require,module,exports){arguments[4][477][0].apply(exports,arguments)},{"../platform/browser/globalThis":579,"./sampling":600,"@opentelemetry/api":19,_process:674,dup:477}],597:[function(require,module,exports){arguments[4][131][0].apply(exports,arguments)},{dup:131}],598:[function(require,module,exports){arguments[4][132][0].apply(exports,arguments)},{"./lodash.merge":597,dup:132}],599:[function(require,module,exports){arguments[4][88][0].apply(exports,arguments)},{dup:88}],600:[function(require,module,exports){arguments[4][89][0].apply(exports,arguments)},{dup:89}],601:[function(require,module,exports){arguments[4][482][0].apply(exports,arguments)},{dup:482}],602:[function(require,module,exports){arguments[4][90][0].apply(exports,arguments)},{dup:90}],603:[function(require,module,exports){arguments[4][91][0].apply(exports,arguments)},{dup:91}],604:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.VERSION=void 0;exports.VERSION="1.15.0"},{}],605:[function(require,module,exports){arguments[4][230][0].apply(exports,arguments)},{"./autoLoaderUtils":606,"@opentelemetry/api":19,dup:230}],606:[function(require,module,exports){arguments[4][231][0].apply(exports,arguments)},{dup:231}],607:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./autoLoader"),exports);(0,tslib_1.__exportStar)(require("./platform/index"),exports);(0,tslib_1.__exportStar)(require("./types"),exports);(0,tslib_1.__exportStar)(require("./types_internal"),exports);(0,tslib_1.__exportStar)(require("./utils"),exports)},{"./autoLoader":605,"./platform/index":609,"./types":611,"./types_internal":612,"./utils":613,tslib:677}],608:[function(require,module,exports){arguments[4][554][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:554,shimmer:675}],609:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.InstrumentationBase=void 0;var instrumentation_1=require("./instrumentation");Object.defineProperty(exports,"InstrumentationBase",{enumerable:true,get:function(){return instrumentation_1.InstrumentationBase}})},{"./instrumentation":610}],610:[function(require,module,exports){arguments[4][235][0].apply(exports,arguments)},{"../../instrumentation":608,dup:235}],611:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],612:[function(require,module,exports){arguments[4][237][0].apply(exports,arguments)},{dup:237}],613:[function(require,module,exports){arguments[4][238][0].apply(exports,arguments)},{dup:238}],614:[function(require,module,exports){arguments[4][385][0].apply(exports,arguments)},{dup:385}],615:[function(require,module,exports){arguments[4][386][0].apply(exports,arguments)},{"./platform":633,"@opentelemetry/api":19,"@opentelemetry/core":574,"@opentelemetry/semantic-conventions":669,dup:386}],616:[function(require,module,exports){arguments[4][292][0].apply(exports,arguments)},{dup:292}],617:[function(require,module,exports){arguments[4][388][0].apply(exports,arguments)},{"./Resource":615,"./utils":635,"@opentelemetry/api":19,dup:388}],618:[function(require,module,exports){arguments[4][389][0].apply(exports,arguments)},{"..":625,dup:389}],619:[function(require,module,exports){arguments[4][390][0].apply(exports,arguments)},{"..":625,"@opentelemetry/api":19,"@opentelemetry/semantic-conventions":669,dup:390}],620:[function(require,module,exports){arguments[4][391][0].apply(exports,arguments)},{"./EnvDetectorSync":621,dup:391}],621:[function(require,module,exports){arguments[4][392][0].apply(exports,arguments)},{"../Resource":615,"@opentelemetry/api":19,"@opentelemetry/core":574,"@opentelemetry/semantic-conventions":669,dup:392}],622:[function(require,module,exports){arguments[4][393][0].apply(exports,arguments)},{"./NoopDetectorSync":623,dup:393}],623:[function(require,module,exports){arguments[4][394][0].apply(exports,arguments)},{"../Resource":615,dup:394}],624:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./BrowserDetector"),exports);(0,tslib_1.__exportStar)(require("./EnvDetector"),exports);(0,tslib_1.__exportStar)(require("./BrowserDetectorSync"),exports);(0,tslib_1.__exportStar)(require("./EnvDetectorSync"),exports)},{"./BrowserDetector":618,"./BrowserDetectorSync":619,"./EnvDetector":620,"./EnvDetectorSync":621,tslib:677}],625:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./Resource"),exports);(0,tslib_1.__exportStar)(require("./IResource"),exports);(0,tslib_1.__exportStar)(require("./platform"),exports);(0,tslib_1.__exportStar)(require("./types"),exports);(0,tslib_1.__exportStar)(require("./config"),exports);(0,tslib_1.__exportStar)(require("./detectors"),exports);(0,tslib_1.__exportStar)(require("./detect-resources"),exports)},{"./IResource":614,"./Resource":615,"./config":616,"./detect-resources":617,"./detectors":624,"./platform":633,"./types":634,tslib:677}],626:[function(require,module,exports){arguments[4][299][0].apply(exports,arguments)},{"../../detectors/NoopDetector":622,dup:299}],627:[function(require,module,exports){arguments[4][400][0].apply(exports,arguments)},{"../../detectors/NoopDetectorSync":623,dup:400}],628:[function(require,module,exports){arguments[4][300][0].apply(exports,arguments)},{"../../detectors/NoopDetector":622,dup:300}],629:[function(require,module,exports){arguments[4][402][0].apply(exports,arguments)},{"../../detectors/NoopDetectorSync":623,dup:402}],630:[function(require,module,exports){arguments[4][502][0].apply(exports,arguments)},{"../../detectors/NoopDetector":622,dup:502}],631:[function(require,module,exports){arguments[4][503][0].apply(exports,arguments)},{"../../detectors/NoopDetector":622,dup:503}],632:[function(require,module,exports){arguments[4][301][0].apply(exports,arguments)},{dup:301}],633:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./default-service-name"),exports);(0,tslib_1.__exportStar)(require("./HostDetector"),exports);(0,tslib_1.__exportStar)(require("./OSDetector"),exports);(0,tslib_1.__exportStar)(require("./HostDetectorSync"),exports);(0,tslib_1.__exportStar)(require("./OSDetectorSync"),exports);(0,tslib_1.__exportStar)(require("./ProcessDetector"),exports);(0,tslib_1.__exportStar)(require("./ProcessDetectorSync"),exports)},{"./HostDetector":626,"./HostDetectorSync":627,"./OSDetector":628,"./OSDetectorSync":629,"./ProcessDetector":630,"./ProcessDetectorSync":631,"./default-service-name":632,tslib:677}],634:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],635:[function(require,module,exports){arguments[4][406][0].apply(exports,arguments)},{dup:406}],636:[function(require,module,exports){arguments[4][508][0].apply(exports,arguments)},{".":653,"./MultiSpanProcessor":638,"./config":644,"./export/NoopSpanProcessor":649,"./platform":656,"./utility":662,"@opentelemetry/api":19,"@opentelemetry/core":574,"@opentelemetry/resources":625,dup:508}],637:[function(require,module,exports){arguments[4][75][0].apply(exports,arguments)},{dup:75}],638:[function(require,module,exports){arguments[4][414][0].apply(exports,arguments)},{"@opentelemetry/core":574,dup:414}],639:[function(require,module,exports){arguments[4][415][0].apply(exports,arguments)},{dup:415}],640:[function(require,module,exports){arguments[4][512][0].apply(exports,arguments)},{"./enums":645,"@opentelemetry/api":19,"@opentelemetry/core":574,"@opentelemetry/semantic-conventions":669,dup:512}],641:[function(require,module,exports){arguments[4][417][0].apply(exports,arguments)},{dup:417}],642:[function(require,module,exports){arguments[4][418][0].apply(exports,arguments)},{dup:418}],643:[function(require,module,exports){arguments[4][515][0].apply(exports,arguments)},{"./Span":640,"./platform":656,"./utility":662,"@opentelemetry/api":19,"@opentelemetry/core":574,dup:515}],644:[function(require,module,exports){arguments[4][516][0].apply(exports,arguments)},{"./sampler/AlwaysOffSampler":657,"./sampler/AlwaysOnSampler":658,"./sampler/ParentBasedSampler":659,"./sampler/TraceIdRatioBasedSampler":660,"@opentelemetry/api":19,"@opentelemetry/core":574,dup:516}],645:[function(require,module,exports){arguments[4][421][0].apply(exports,arguments)},{dup:421}],646:[function(require,module,exports){arguments[4][518][0].apply(exports,arguments)},{"@opentelemetry/api":19,"@opentelemetry/core":574,dup:518}],647:[function(require,module,exports){arguments[4][519][0].apply(exports,arguments)},{"@opentelemetry/core":574,dup:519}],648:[function(require,module,exports){arguments[4][520][0].apply(exports,arguments)},{"@opentelemetry/core":574,dup:520}],649:[function(require,module,exports){arguments[4][425][0].apply(exports,arguments)},{dup:425}],650:[function(require,module,exports){arguments[4][426][0].apply(exports,arguments)},{dup:426}],651:[function(require,module,exports){arguments[4][523][0].apply(exports,arguments)},{"@opentelemetry/api":19,"@opentelemetry/core":574,dup:523}],652:[function(require,module,exports){arguments[4][428][0].apply(exports,arguments)},{dup:428}],653:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./Tracer"),exports);(0,tslib_1.__exportStar)(require("./BasicTracerProvider"),exports);(0,tslib_1.__exportStar)(require("./platform"),exports);(0,tslib_1.__exportStar)(require("./export/ConsoleSpanExporter"),exports);(0,tslib_1.__exportStar)(require("./export/InMemorySpanExporter"),exports);(0,tslib_1.__exportStar)(require("./export/ReadableSpan"),exports);(0,tslib_1.__exportStar)(require("./export/SimpleSpanProcessor"),exports);(0,tslib_1.__exportStar)(require("./export/SpanExporter"),exports);(0,tslib_1.__exportStar)(require("./export/NoopSpanProcessor"),exports);(0,tslib_1.__exportStar)(require("./sampler/AlwaysOffSampler"),exports);(0,tslib_1.__exportStar)(require("./sampler/AlwaysOnSampler"),exports);(0,tslib_1.__exportStar)(require("./sampler/ParentBasedSampler"),exports);(0,tslib_1.__exportStar)(require("./sampler/TraceIdRatioBasedSampler"),exports);(0,tslib_1.__exportStar)(require("./Sampler"),exports);(0,tslib_1.__exportStar)(require("./Span"),exports);(0,tslib_1.__exportStar)(require("./SpanProcessor"),exports);(0,tslib_1.__exportStar)(require("./TimedEvent"),exports);(0,tslib_1.__exportStar)(require("./types"),exports);(0,tslib_1.__exportStar)(require("./IdGenerator"),exports)},{"./BasicTracerProvider":636,"./IdGenerator":637,"./Sampler":639,"./Span":640,"./SpanProcessor":641,"./TimedEvent":642,"./Tracer":643,"./export/ConsoleSpanExporter":647,"./export/InMemorySpanExporter":648,"./export/NoopSpanProcessor":649,"./export/ReadableSpan":650,"./export/SimpleSpanProcessor":651,"./export/SpanExporter":652,"./platform":656,"./sampler/AlwaysOffSampler":657,"./sampler/AlwaysOnSampler":658,"./sampler/ParentBasedSampler":659,"./sampler/TraceIdRatioBasedSampler":660,"./types":661,tslib:677}],654:[function(require,module,exports){arguments[4][430][0].apply(exports,arguments)},{dup:430}],655:[function(require,module,exports){arguments[4][527][0].apply(exports,arguments)},{"../../../export/BatchSpanProcessorBase":646,dup:527}],656:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./export/BatchSpanProcessor"),exports);(0,tslib_1.__exportStar)(require("./RandomIdGenerator"),exports)},{"./RandomIdGenerator":654,"./export/BatchSpanProcessor":655,tslib:677}],657:[function(require,module,exports){arguments[4][433][0].apply(exports,arguments)},{"../Sampler":639,dup:433}],658:[function(require,module,exports){arguments[4][434][0].apply(exports,arguments)},{"../Sampler":639,dup:434}],659:[function(require,module,exports){arguments[4][435][0].apply(exports,arguments)},{"./AlwaysOffSampler":657,"./AlwaysOnSampler":658,"@opentelemetry/api":19,"@opentelemetry/core":574,dup:435}],660:[function(require,module,exports){arguments[4][436][0].apply(exports,arguments)},{"../Sampler":639,"@opentelemetry/api":19,dup:436}],661:[function(require,module,exports){arguments[4][50][0].apply(exports,arguments)},{dup:50}],662:[function(require,module,exports){arguments[4][438][0].apply(exports,arguments)},{"./config":644,"@opentelemetry/core":574,dup:438}],663:[function(require,module,exports){arguments[4][224][0].apply(exports,arguments)},{"@opentelemetry/api":19,dup:224}],664:[function(require,module,exports){arguments[4][225][0].apply(exports,arguments)},{"./StackContextManager":663,"@opentelemetry/sdk-trace-base":653,dup:225}],665:[function(require,module,exports){arguments[4][226][0].apply(exports,arguments)},{dup:226}],666:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./WebTracerProvider"),exports);(0,tslib_1.__exportStar)(require("./StackContextManager"),exports);(0,tslib_1.__exportStar)(require("./enums/PerformanceTimingNames"),exports);(0,tslib_1.__exportStar)(require("./types"),exports);(0,tslib_1.__exportStar)(require("./utils"),exports);(0,tslib_1.__exportStar)(require("@opentelemetry/sdk-trace-base"),exports)},{"./StackContextManager":663,"./WebTracerProvider":664,"./enums/PerformanceTimingNames":665,"./types":667,"./utils":668,"@opentelemetry/sdk-trace-base":653,tslib:677}],667:[function(require,module,exports){arguments[4][228][0].apply(exports,arguments)},{"./enums/PerformanceTimingNames":665,dup:228}],668:[function(require,module,exports){arguments[4][444][0].apply(exports,arguments)},{"./enums/PerformanceTimingNames":665,"@opentelemetry/core":574,"@opentelemetry/semantic-conventions":669,dup:444}],669:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./trace"),exports);(0,tslib_1.__exportStar)(require("./resource"),exports)},{"./resource":671,"./trace":673,tslib:677}],670:[function(require,module,exports){arguments[4][156][0].apply(exports,arguments)},{dup:156}],671:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./SemanticResourceAttributes"),exports)},{"./SemanticResourceAttributes":670,tslib:677}],672:[function(require,module,exports){arguments[4][158][0].apply(exports,arguments)},{dup:158}],673:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=require("tslib");(0,tslib_1.__exportStar)(require("./SemanticAttributes"),exports)},{"./SemanticAttributes":672,tslib:677}],674:[function(require,module,exports){var process=module.exports={};var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}(function(){try{if(typeof setTimeout==="function"){cachedSetTimeout=setTimeout}else{cachedSetTimeout=defaultSetTimout}}catch(e){cachedSetTimeout=defaultSetTimout}try{if(typeof clearTimeout==="function"){cachedClearTimeout=clearTimeout}else{cachedClearTimeout=defaultClearTimeout}}catch(e){cachedClearTimeout=defaultClearTimeout}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){return setTimeout(fun,0)}if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0)}try{return cachedSetTimeout(fun,0)}catch(e){try{return cachedSetTimeout.call(null,fun,0)}catch(e){return cachedSetTimeout.call(this,fun,0)}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){return clearTimeout(marker)}if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker)}try{return cachedClearTimeout(marker)}catch(e){try{return cachedClearTimeout.call(null,marker)}catch(e){return cachedClearTimeout.call(this,marker)}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue)}else{queueIndex=-1}if(queue.length){drainQueue()}}function drainQueue(){if(draining){return}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run()}}queueIndex=-1;len=queue.length}currentQueue=null;draining=false;runClearTimeout(timeout)}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i]}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue)}};function Item(fun,array){this.fun=fun;this.array=array}Item.prototype.run=function(){this.fun.apply(null,this.array)};process.title="browser";process.browser=true;process.env={};process.argv=[];process.version="";process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[]};process.binding=function(name){throw new Error("process.binding is not supported")};process.cwd=function(){return"/"};process.chdir=function(dir){throw new Error("process.chdir is not supported")};process.umask=function(){return 0}},{}],675:[function(require,module,exports){"use strict";function isFunction(funktion){return typeof funktion==="function"}var logger=console.error.bind(console);function defineProperty(obj,name,value){var enumerable=!!obj[name]&&obj.propertyIsEnumerable(name);Object.defineProperty(obj,name,{configurable:true,enumerable:enumerable,writable:true,value:value})}function shimmer(options){if(options&&options.logger){if(!isFunction(options.logger))logger("new logger isn't a function, not replacing");else logger=options.logger}}function wrap(nodule,name,wrapper){if(!nodule||!nodule[name]){logger("no original function "+name+" to wrap");return}if(!wrapper){logger("no wrapper function");logger((new Error).stack);return}if(!isFunction(nodule[name])||!isFunction(wrapper)){logger("original object and wrapper must be functions");return}var original=nodule[name];var wrapped=wrapper(original,name);defineProperty(wrapped,"__original",original);defineProperty(wrapped,"__unwrap",(function(){if(nodule[name]===wrapped)defineProperty(nodule,name,original)}));defineProperty(wrapped,"__wrapped",true);defineProperty(nodule,name,wrapped);return wrapped}function massWrap(nodules,names,wrapper){if(!nodules){logger("must provide one or more modules to patch");logger((new Error).stack);return}else if(!Array.isArray(nodules)){nodules=[nodules]}if(!(names&&Array.isArray(names))){logger("must provide one or more functions to wrap on modules");return}nodules.forEach((function(nodule){names.forEach((function(name){wrap(nodule,name,wrapper)}))}))}function unwrap(nodule,name){if(!nodule||!nodule[name]){logger("no function to unwrap.");logger((new Error).stack);return}if(!nodule[name].__unwrap){logger("no original to unwrap to -- has "+name+" already been unwrapped?")}else{return nodule[name].__unwrap()}}function massUnwrap(nodules,names){if(!nodules){logger("must provide one or more modules to patch");logger((new Error).stack);return}else if(!Array.isArray(nodules)){nodules=[nodules]}if(!(names&&Array.isArray(names))){logger("must provide one or more functions to unwrap on modules");return}nodules.forEach((function(nodule){names.forEach((function(name){unwrap(nodule,name)}))}))}shimmer.wrap=wrap;shimmer.massWrap=massWrap;shimmer.unwrap=unwrap;shimmer.massUnwrap=massUnwrap;module.exports=shimmer},{}],676:[function(require,module,exports){(function(setImmediate,clearImmediate){(function(){var nextTick=require("process/browser.js").nextTick;var apply=Function.prototype.apply;var slice=Array.prototype.slice;var immediateIds={};var nextImmediateId=0;exports.setTimeout=function(){return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout)};exports.setInterval=function(){return new Timeout(apply.call(setInterval,window,arguments),clearInterval)};exports.clearTimeout=exports.clearInterval=function(timeout){timeout.close()};function Timeout(id,clearFn){this._id=id;this._clearFn=clearFn}Timeout.prototype.unref=Timeout.prototype.ref=function(){};Timeout.prototype.close=function(){this._clearFn.call(window,this._id)};exports.enroll=function(item,msecs){clearTimeout(item._idleTimeoutId);item._idleTimeout=msecs};exports.unenroll=function(item){clearTimeout(item._idleTimeoutId);item._idleTimeout=-1};exports._unrefActive=exports.active=function(item){clearTimeout(item._idleTimeoutId);var msecs=item._idleTimeout;if(msecs>=0){item._idleTimeoutId=setTimeout((function onTimeout(){if(item._onTimeout)item._onTimeout()}),msecs)}};exports.setImmediate=typeof setImmediate==="function"?setImmediate:function(fn){var id=nextImmediateId++;var args=arguments.length<2?false:slice.call(arguments,1);immediateIds[id]=true;nextTick((function onNextTick(){if(immediateIds[id]){if(args){fn.apply(null,args)}else{fn.call(null)}exports.clearImmediate(id)}}));return id};exports.clearImmediate=typeof clearImmediate==="function"?clearImmediate:function(id){delete immediateIds[id]}}).call(this)}).call(this,require("timers").setImmediate,require("timers").clearImmediate)},{"process/browser.js":674,timers:676}],677:[function(require,module,exports){(function(global){(function(){var __extends;var __assign;var __rest;var __decorate;var __param;var __metadata;var __awaiter;var __generator;var __exportStar;var __values;var __read;var __spread;var __spreadArrays;var __spreadArray;var __await;var __asyncGenerator;var __asyncDelegator;var __asyncValues;var __makeTemplateObject;var __importStar;var __importDefault;var __classPrivateFieldGet;var __classPrivateFieldSet;var __classPrivateFieldIn;var __createBinding;(function(factory){var root=typeof global==="object"?global:typeof self==="object"?self:typeof this==="object"?this:{};if(typeof define==="function"&&define.amd){define("tslib",["exports"],(function(exports){factory(createExporter(root,createExporter(exports)))}))}else if(typeof module==="object"&&typeof module.exports==="object"){factory(createExporter(root,createExporter(module.exports)))}else{factory(createExporter(root))}function createExporter(exports,previous){if(exports!==root){if(typeof Object.create==="function"){Object.defineProperty(exports,"__esModule",{value:true})}else{exports.__esModule=true}}return function(id,v){return exports[id]=previous?previous(id,v):v}}})((function(exporter){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};__extends=function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)};__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};__rest=function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};__decorate=function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r};__param=function(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}};__metadata=function(metadataKey,metadataValue){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue)};__awaiter=function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};__generator=function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}};__exportStar=function(m,o){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(o,p))__createBinding(o,m,p)};__createBinding=Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k]}}}Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]};__values=function(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")};__read=function(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error:error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar};__spread=function(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar};__spreadArrays=function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};__spreadArray=function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};__await=function(v){return this instanceof __await?(this.v=v,this):new __await(v)};__asyncGenerator=function(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){if(g[n])i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))}}function resume(n,v){try{step(g[n](v))}catch(e){settle(q[0][3],e)}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1])}};__asyncDelegator=function(o){var i,p;return i={},verb("next"),verb("throw",(function(e){throw e})),verb("return"),i[Symbol.iterator]=function(){return this},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v}:f}};__asyncValues=function(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value)}))}}function settle(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)}};__makeTemplateObject=function(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw})}else{cooked.raw=raw}return cooked};var __setModuleDefault=Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:true,value:v})}:function(o,v){o["default"]=v};__importStar=function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=="default"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result};__importDefault=function(mod){return mod&&mod.__esModule?mod:{default:mod}};__classPrivateFieldGet=function(receiver,state,kind,f){if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f:kind==="a"?f.call(receiver):f?f.value:state.get(receiver)};__classPrivateFieldSet=function(receiver,state,value,kind,f){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value};__classPrivateFieldIn=function(state,receiver){if(receiver===null||typeof receiver!=="object"&&typeof receiver!=="function")throw new TypeError("Cannot use 'in' operator on non-object");return typeof state==="function"?receiver===state:state.has(receiver)};exporter("__extends",__extends);exporter("__assign",__assign);exporter("__rest",__rest);exporter("__decorate",__decorate);exporter("__param",__param);exporter("__metadata",__metadata);exporter("__awaiter",__awaiter);exporter("__generator",__generator);exporter("__exportStar",__exportStar);exporter("__createBinding",__createBinding);exporter("__values",__values);exporter("__read",__read);exporter("__spread",__spread);exporter("__spreadArrays",__spreadArrays);exporter("__spreadArray",__spreadArray);exporter("__await",__await);exporter("__asyncGenerator",__asyncGenerator);exporter("__asyncDelegator",__asyncDelegator);exporter("__asyncValues",__asyncValues);exporter("__makeTemplateObject",__makeTemplateObject);exporter("__importStar",__importStar);exporter("__importDefault",__importDefault);exporter("__classPrivateFieldGet",__classPrivateFieldGet);exporter("__classPrivateFieldSet",__classPrivateFieldSet);exporter("__classPrivateFieldIn",__classPrivateFieldIn)}))}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],678:[function(require,module,exports){(function(global){(function(){"use strict";
/**
 * @license Angular v12.0.0-next.0
 * (c) 2010-2020 Google LLC. https://angular.io/
 * License: MIT
 */(function(factory){typeof define==="function"&&define.amd?define(factory):factory()})((function(){"use strict";
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var Zone$1=function(global){var performance=global["performance"];function mark(name){performance&&performance["mark"]&&performance["mark"](name)}function performanceMeasure(name,label){performance&&performance["measure"]&&performance["measure"](name,label)}mark("Zone");var symbolPrefix=global["__Zone_symbol_prefix"]||"__zone_symbol__";function __symbol__(name){return symbolPrefix+name}var checkDuplicate=global[__symbol__("forceDuplicateZoneCheck")]===true;if(global["Zone"]){if(checkDuplicate||typeof global["Zone"].__symbol__!=="function"){throw new Error("Zone already loaded.")}else{return global["Zone"]}}var Zone=function(){function Zone(parent,zoneSpec){this._parent=parent;this._name=zoneSpec?zoneSpec.name||"unnamed":"<root>";this._properties=zoneSpec&&zoneSpec.properties||{};this._zoneDelegate=new ZoneDelegate(this,this._parent&&this._parent._zoneDelegate,zoneSpec)}Zone.assertZonePatched=function(){if(global["Promise"]!==patches["ZoneAwarePromise"]){throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` "+"has been overwritten.\n"+"Most likely cause is that a Promise polyfill has been loaded "+"after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. "+"If you must load one, do so before loading zone.js.)")}};Object.defineProperty(Zone,"root",{get:function(){var zone=Zone.current;while(zone.parent){zone=zone.parent}return zone},enumerable:false,configurable:true});Object.defineProperty(Zone,"current",{get:function(){return _currentZoneFrame.zone},enumerable:false,configurable:true});Object.defineProperty(Zone,"currentTask",{get:function(){return _currentTask},enumerable:false,configurable:true});Zone.__load_patch=function(name,fn,ignoreDuplicate){if(ignoreDuplicate===void 0){ignoreDuplicate=false}if(patches.hasOwnProperty(name)){if(!ignoreDuplicate&&checkDuplicate){throw Error("Already loaded patch: "+name)}}else if(!global["__Zone_disable_"+name]){var perfName="Zone:"+name;mark(perfName);patches[name]=fn(global,Zone,_api);performanceMeasure(perfName,perfName)}};Object.defineProperty(Zone.prototype,"parent",{get:function(){return this._parent},enumerable:false,configurable:true});Object.defineProperty(Zone.prototype,"name",{get:function(){return this._name},enumerable:false,configurable:true});Zone.prototype.get=function(key){var zone=this.getZoneWith(key);if(zone)return zone._properties[key]};Zone.prototype.getZoneWith=function(key){var current=this;while(current){if(current._properties.hasOwnProperty(key)){return current}current=current._parent}return null};Zone.prototype.fork=function(zoneSpec){if(!zoneSpec)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,zoneSpec)};Zone.prototype.wrap=function(callback,source){if(typeof callback!=="function"){throw new Error("Expecting function got: "+callback)}var _callback=this._zoneDelegate.intercept(this,callback,source);var zone=this;return function(){return zone.runGuarded(_callback,this,arguments,source)}};Zone.prototype.run=function(callback,applyThis,applyArgs,source){_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{return this._zoneDelegate.invoke(this,callback,applyThis,applyArgs,source)}finally{_currentZoneFrame=_currentZoneFrame.parent}};Zone.prototype.runGuarded=function(callback,applyThis,applyArgs,source){if(applyThis===void 0){applyThis=null}_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{try{return this._zoneDelegate.invoke(this,callback,applyThis,applyArgs,source)}catch(error){if(this._zoneDelegate.handleError(this,error)){throw error}}}finally{_currentZoneFrame=_currentZoneFrame.parent}};Zone.prototype.runTask=function(task,applyThis,applyArgs){if(task.zone!=this){throw new Error("A task can only be run in the zone of creation! (Creation: "+(task.zone||NO_ZONE).name+"; Execution: "+this.name+")")}if(task.state===notScheduled&&(task.type===eventTask||task.type===macroTask)){return}var reEntryGuard=task.state!=running;reEntryGuard&&task._transitionTo(running,scheduled);task.runCount++;var previousTask=_currentTask;_currentTask=task;_currentZoneFrame={parent:_currentZoneFrame,zone:this};try{if(task.type==macroTask&&task.data&&!task.data.isPeriodic){task.cancelFn=undefined}try{return this._zoneDelegate.invokeTask(this,task,applyThis,applyArgs)}catch(error){if(this._zoneDelegate.handleError(this,error)){throw error}}}finally{if(task.state!==notScheduled&&task.state!==unknown){if(task.type==eventTask||task.data&&task.data.isPeriodic){reEntryGuard&&task._transitionTo(scheduled,running)}else{task.runCount=0;this._updateTaskCount(task,-1);reEntryGuard&&task._transitionTo(notScheduled,running,notScheduled)}}_currentZoneFrame=_currentZoneFrame.parent;_currentTask=previousTask}};Zone.prototype.scheduleTask=function(task){if(task.zone&&task.zone!==this){var newZone=this;while(newZone){if(newZone===task.zone){throw Error("can not reschedule task to "+this.name+" which is descendants of the original zone "+task.zone.name)}newZone=newZone.parent}}task._transitionTo(scheduling,notScheduled);var zoneDelegates=[];task._zoneDelegates=zoneDelegates;task._zone=this;try{task=this._zoneDelegate.scheduleTask(this,task)}catch(err){task._transitionTo(unknown,scheduling,notScheduled);this._zoneDelegate.handleError(this,err);throw err}if(task._zoneDelegates===zoneDelegates){this._updateTaskCount(task,1)}if(task.state==scheduling){task._transitionTo(scheduled,scheduling)}return task};Zone.prototype.scheduleMicroTask=function(source,callback,data,customSchedule){return this.scheduleTask(new ZoneTask(microTask,source,callback,data,customSchedule,undefined))};Zone.prototype.scheduleMacroTask=function(source,callback,data,customSchedule,customCancel){return this.scheduleTask(new ZoneTask(macroTask,source,callback,data,customSchedule,customCancel))};Zone.prototype.scheduleEventTask=function(source,callback,data,customSchedule,customCancel){return this.scheduleTask(new ZoneTask(eventTask,source,callback,data,customSchedule,customCancel))};Zone.prototype.cancelTask=function(task){if(task.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(task.zone||NO_ZONE).name+"; Execution: "+this.name+")");task._transitionTo(canceling,scheduled,running);try{this._zoneDelegate.cancelTask(this,task)}catch(err){task._transitionTo(unknown,canceling);this._zoneDelegate.handleError(this,err);throw err}this._updateTaskCount(task,-1);task._transitionTo(notScheduled,canceling);task.runCount=0;return task};Zone.prototype._updateTaskCount=function(task,count){var zoneDelegates=task._zoneDelegates;if(count==-1){task._zoneDelegates=null}for(var i=0;i<zoneDelegates.length;i++){zoneDelegates[i]._updateTaskCount(task.type,count)}};return Zone}();Zone.__symbol__=__symbol__;var DELEGATE_ZS={name:"",onHasTask:function(delegate,_,target,hasTaskState){return delegate.hasTask(target,hasTaskState)},onScheduleTask:function(delegate,_,target,task){return delegate.scheduleTask(target,task)},onInvokeTask:function(delegate,_,target,task,applyThis,applyArgs){return delegate.invokeTask(target,task,applyThis,applyArgs)},onCancelTask:function(delegate,_,target,task){return delegate.cancelTask(target,task)}};var ZoneDelegate=function(){function ZoneDelegate(zone,parentDelegate,zoneSpec){this._taskCounts={microTask:0,macroTask:0,eventTask:0};this.zone=zone;this._parentDelegate=parentDelegate;this._forkZS=zoneSpec&&(zoneSpec&&zoneSpec.onFork?zoneSpec:parentDelegate._forkZS);this._forkDlgt=zoneSpec&&(zoneSpec.onFork?parentDelegate:parentDelegate._forkDlgt);this._forkCurrZone=zoneSpec&&(zoneSpec.onFork?this.zone:parentDelegate._forkCurrZone);this._interceptZS=zoneSpec&&(zoneSpec.onIntercept?zoneSpec:parentDelegate._interceptZS);this._interceptDlgt=zoneSpec&&(zoneSpec.onIntercept?parentDelegate:parentDelegate._interceptDlgt);this._interceptCurrZone=zoneSpec&&(zoneSpec.onIntercept?this.zone:parentDelegate._interceptCurrZone);this._invokeZS=zoneSpec&&(zoneSpec.onInvoke?zoneSpec:parentDelegate._invokeZS);this._invokeDlgt=zoneSpec&&(zoneSpec.onInvoke?parentDelegate:parentDelegate._invokeDlgt);this._invokeCurrZone=zoneSpec&&(zoneSpec.onInvoke?this.zone:parentDelegate._invokeCurrZone);this._handleErrorZS=zoneSpec&&(zoneSpec.onHandleError?zoneSpec:parentDelegate._handleErrorZS);this._handleErrorDlgt=zoneSpec&&(zoneSpec.onHandleError?parentDelegate:parentDelegate._handleErrorDlgt);this._handleErrorCurrZone=zoneSpec&&(zoneSpec.onHandleError?this.zone:parentDelegate._handleErrorCurrZone);this._scheduleTaskZS=zoneSpec&&(zoneSpec.onScheduleTask?zoneSpec:parentDelegate._scheduleTaskZS);this._scheduleTaskDlgt=zoneSpec&&(zoneSpec.onScheduleTask?parentDelegate:parentDelegate._scheduleTaskDlgt);this._scheduleTaskCurrZone=zoneSpec&&(zoneSpec.onScheduleTask?this.zone:parentDelegate._scheduleTaskCurrZone);this._invokeTaskZS=zoneSpec&&(zoneSpec.onInvokeTask?zoneSpec:parentDelegate._invokeTaskZS);this._invokeTaskDlgt=zoneSpec&&(zoneSpec.onInvokeTask?parentDelegate:parentDelegate._invokeTaskDlgt);this._invokeTaskCurrZone=zoneSpec&&(zoneSpec.onInvokeTask?this.zone:parentDelegate._invokeTaskCurrZone);this._cancelTaskZS=zoneSpec&&(zoneSpec.onCancelTask?zoneSpec:parentDelegate._cancelTaskZS);this._cancelTaskDlgt=zoneSpec&&(zoneSpec.onCancelTask?parentDelegate:parentDelegate._cancelTaskDlgt);this._cancelTaskCurrZone=zoneSpec&&(zoneSpec.onCancelTask?this.zone:parentDelegate._cancelTaskCurrZone);this._hasTaskZS=null;this._hasTaskDlgt=null;this._hasTaskDlgtOwner=null;this._hasTaskCurrZone=null;var zoneSpecHasTask=zoneSpec&&zoneSpec.onHasTask;var parentHasTask=parentDelegate&&parentDelegate._hasTaskZS;if(zoneSpecHasTask||parentHasTask){this._hasTaskZS=zoneSpecHasTask?zoneSpec:DELEGATE_ZS;this._hasTaskDlgt=parentDelegate;this._hasTaskDlgtOwner=this;this._hasTaskCurrZone=zone;if(!zoneSpec.onScheduleTask){this._scheduleTaskZS=DELEGATE_ZS;this._scheduleTaskDlgt=parentDelegate;this._scheduleTaskCurrZone=this.zone}if(!zoneSpec.onInvokeTask){this._invokeTaskZS=DELEGATE_ZS;this._invokeTaskDlgt=parentDelegate;this._invokeTaskCurrZone=this.zone}if(!zoneSpec.onCancelTask){this._cancelTaskZS=DELEGATE_ZS;this._cancelTaskDlgt=parentDelegate;this._cancelTaskCurrZone=this.zone}}}ZoneDelegate.prototype.fork=function(targetZone,zoneSpec){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,targetZone,zoneSpec):new Zone(targetZone,zoneSpec)};ZoneDelegate.prototype.intercept=function(targetZone,callback,source){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,targetZone,callback,source):callback};ZoneDelegate.prototype.invoke=function(targetZone,callback,applyThis,applyArgs,source){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,targetZone,callback,applyThis,applyArgs,source):callback.apply(applyThis,applyArgs)};ZoneDelegate.prototype.handleError=function(targetZone,error){return this._handleErrorZS?this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,targetZone,error):true};ZoneDelegate.prototype.scheduleTask=function(targetZone,task){var returnTask=task;if(this._scheduleTaskZS){if(this._hasTaskZS){returnTask._zoneDelegates.push(this._hasTaskDlgtOwner)}returnTask=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,targetZone,task);if(!returnTask)returnTask=task}else{if(task.scheduleFn){task.scheduleFn(task)}else if(task.type==microTask){scheduleMicroTask(task)}else{throw new Error("Task is missing scheduleFn.")}}return returnTask};ZoneDelegate.prototype.invokeTask=function(targetZone,task,applyThis,applyArgs){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,targetZone,task,applyThis,applyArgs):task.callback.apply(applyThis,applyArgs)};ZoneDelegate.prototype.cancelTask=function(targetZone,task){var value;if(this._cancelTaskZS){value=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,targetZone,task)}else{if(!task.cancelFn){throw Error("Task is not cancelable")}value=task.cancelFn(task)}return value};ZoneDelegate.prototype.hasTask=function(targetZone,isEmpty){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,targetZone,isEmpty)}catch(err){this.handleError(targetZone,err)}};ZoneDelegate.prototype._updateTaskCount=function(type,count){var counts=this._taskCounts;var prev=counts[type];var next=counts[type]=prev+count;if(next<0){throw new Error("More tasks executed then were scheduled.")}if(prev==0||next==0){var isEmpty={microTask:counts["microTask"]>0,macroTask:counts["macroTask"]>0,eventTask:counts["eventTask"]>0,change:type};this.hasTask(this.zone,isEmpty)}};return ZoneDelegate}();var ZoneTask=function(){function ZoneTask(type,source,callback,options,scheduleFn,cancelFn){this._zone=null;this.runCount=0;this._zoneDelegates=null;this._state="notScheduled";this.type=type;this.source=source;this.data=options;this.scheduleFn=scheduleFn;this.cancelFn=cancelFn;if(!callback){throw new Error("callback is not defined")}this.callback=callback;var self=this;if(type===eventTask&&options&&options.useG){this.invoke=ZoneTask.invokeTask}else{this.invoke=function(){return ZoneTask.invokeTask.call(global,self,this,arguments)}}}ZoneTask.invokeTask=function(task,target,args){if(!task){task=this}_numberOfNestedTaskFrames++;try{task.runCount++;return task.zone.runTask(task,target,args)}finally{if(_numberOfNestedTaskFrames==1){drainMicroTaskQueue()}_numberOfNestedTaskFrames--}};Object.defineProperty(ZoneTask.prototype,"zone",{get:function(){return this._zone},enumerable:false,configurable:true});Object.defineProperty(ZoneTask.prototype,"state",{get:function(){return this._state},enumerable:false,configurable:true});ZoneTask.prototype.cancelScheduleRequest=function(){this._transitionTo(notScheduled,scheduling)};ZoneTask.prototype._transitionTo=function(toState,fromState1,fromState2){if(this._state===fromState1||this._state===fromState2){this._state=toState;if(toState==notScheduled){this._zoneDelegates=null}}else{throw new Error(this.type+" '"+this.source+"': can not transition to '"+toState+"', expecting state '"+fromState1+"'"+(fromState2?" or '"+fromState2+"'":"")+", was '"+this._state+"'.")}};ZoneTask.prototype.toString=function(){if(this.data&&typeof this.data.handleId!=="undefined"){return this.data.handleId.toString()}else{return Object.prototype.toString.call(this)}};ZoneTask.prototype.toJSON=function(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}};return ZoneTask}();var symbolSetTimeout=__symbol__("setTimeout");var symbolPromise=__symbol__("Promise");var symbolThen=__symbol__("then");var _microTaskQueue=[];var _isDrainingMicrotaskQueue=false;var nativeMicroTaskQueuePromise;function scheduleMicroTask(task){if(_numberOfNestedTaskFrames===0&&_microTaskQueue.length===0){if(!nativeMicroTaskQueuePromise){if(global[symbolPromise]){nativeMicroTaskQueuePromise=global[symbolPromise].resolve(0)}}if(nativeMicroTaskQueuePromise){var nativeThen=nativeMicroTaskQueuePromise[symbolThen];if(!nativeThen){nativeThen=nativeMicroTaskQueuePromise["then"]}nativeThen.call(nativeMicroTaskQueuePromise,drainMicroTaskQueue)}else{global[symbolSetTimeout](drainMicroTaskQueue,0)}}task&&_microTaskQueue.push(task)}function drainMicroTaskQueue(){if(!_isDrainingMicrotaskQueue){_isDrainingMicrotaskQueue=true;while(_microTaskQueue.length){var queue=_microTaskQueue;_microTaskQueue=[];for(var i=0;i<queue.length;i++){var task=queue[i];try{task.zone.runTask(task,null,null)}catch(error){_api.onUnhandledError(error)}}}_api.microtaskDrainDone();_isDrainingMicrotaskQueue=false}}var NO_ZONE={name:"NO ZONE"};var notScheduled="notScheduled",scheduling="scheduling",scheduled="scheduled",running="running",canceling="canceling",unknown="unknown";var microTask="microTask",macroTask="macroTask",eventTask="eventTask";var patches={};var _api={symbol:__symbol__,currentZoneFrame:function(){return _currentZoneFrame},onUnhandledError:noop,microtaskDrainDone:noop,scheduleMicroTask:scheduleMicroTask,showUncaughtError:function(){return!Zone[__symbol__("ignoreConsoleErrorUncaughtError")]},patchEventTarget:function(){return[]},patchOnProperties:noop,patchMethod:function(){return noop},bindArguments:function(){return[]},patchThen:function(){return noop},patchMacroTask:function(){return noop},patchEventPrototype:function(){return noop},isIEOrEdge:function(){return false},getGlobalObjects:function(){return undefined},ObjectDefineProperty:function(){return noop},ObjectGetOwnPropertyDescriptor:function(){return undefined},ObjectCreate:function(){return undefined},ArraySlice:function(){return[]},patchClass:function(){return noop},wrapWithCurrentZone:function(){return noop},filterProperties:function(){return[]},attachOriginToPatched:function(){return noop},_redefineProperty:function(){return noop},patchCallbacks:function(){return noop}};var _currentZoneFrame={parent:null,zone:new Zone(null,null)};var _currentTask=null;var _numberOfNestedTaskFrames=0;function noop(){}performanceMeasure("Zone","Zone");return global["Zone"]=Zone}(typeof window!=="undefined"&&window||typeof self!=="undefined"&&self||global);
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var ObjectGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var ObjectDefineProperty=Object.defineProperty;var ObjectGetPrototypeOf=Object.getPrototypeOf;var ObjectCreate=Object.create;var ArraySlice=Array.prototype.slice;var ADD_EVENT_LISTENER_STR="addEventListener";var REMOVE_EVENT_LISTENER_STR="removeEventListener";var ZONE_SYMBOL_ADD_EVENT_LISTENER=Zone.__symbol__(ADD_EVENT_LISTENER_STR);var ZONE_SYMBOL_REMOVE_EVENT_LISTENER=Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);var TRUE_STR="true";var FALSE_STR="false";var ZONE_SYMBOL_PREFIX=Zone.__symbol__("");function wrapWithCurrentZone(callback,source){return Zone.current.wrap(callback,source)}function scheduleMacroTaskWithCurrentZone(source,callback,data,customSchedule,customCancel){return Zone.current.scheduleMacroTask(source,callback,data,customSchedule,customCancel)}var zoneSymbol=Zone.__symbol__;var isWindowExists=typeof window!=="undefined";var internalWindow=isWindowExists?window:undefined;var _global=isWindowExists&&internalWindow||typeof self==="object"&&self||global;var REMOVE_ATTRIBUTE="removeAttribute";var NULL_ON_PROP_VALUE=[null];function bindArguments(args,source){for(var i=args.length-1;i>=0;i--){if(typeof args[i]==="function"){args[i]=wrapWithCurrentZone(args[i],source+"_"+i)}}return args}function patchPrototype(prototype,fnNames){var source=prototype.constructor["name"];var _loop_1=function(i){var name_1=fnNames[i];var delegate=prototype[name_1];if(delegate){var prototypeDesc=ObjectGetOwnPropertyDescriptor(prototype,name_1);if(!isPropertyWritable(prototypeDesc)){return"continue"}prototype[name_1]=function(delegate){var patched=function(){return delegate.apply(this,bindArguments(arguments,source+"."+name_1))};attachOriginToPatched(patched,delegate);return patched}(delegate)}};for(var i=0;i<fnNames.length;i++){_loop_1(i)}}function isPropertyWritable(propertyDesc){if(!propertyDesc){return true}if(propertyDesc.writable===false){return false}return!(typeof propertyDesc.get==="function"&&typeof propertyDesc.set==="undefined")}var isWebWorker=typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope;var isNode=!("nw"in _global)&&typeof _global.process!=="undefined"&&{}.toString.call(_global.process)==="[object process]";var isBrowser=!isNode&&!isWebWorker&&!!(isWindowExists&&internalWindow["HTMLElement"]);var isMix=typeof _global.process!=="undefined"&&{}.toString.call(_global.process)==="[object process]"&&!isWebWorker&&!!(isWindowExists&&internalWindow["HTMLElement"]);var zoneSymbolEventNames={};var wrapFn=function(event){event=event||_global.event;if(!event){return}var eventNameSymbol=zoneSymbolEventNames[event.type];if(!eventNameSymbol){eventNameSymbol=zoneSymbolEventNames[event.type]=zoneSymbol("ON_PROPERTY"+event.type)}var target=this||event.target||_global;var listener=target[eventNameSymbol];var result;if(isBrowser&&target===internalWindow&&event.type==="error"){var errorEvent=event;result=listener&&listener.call(this,errorEvent.message,errorEvent.filename,errorEvent.lineno,errorEvent.colno,errorEvent.error);if(result===true){event.preventDefault()}}else{result=listener&&listener.apply(this,arguments);if(result!=undefined&&!result){event.preventDefault()}}return result};function patchProperty(obj,prop,prototype){var desc=ObjectGetOwnPropertyDescriptor(obj,prop);if(!desc&&prototype){var prototypeDesc=ObjectGetOwnPropertyDescriptor(prototype,prop);if(prototypeDesc){desc={enumerable:true,configurable:true}}}if(!desc||!desc.configurable){return}var onPropPatchedSymbol=zoneSymbol("on"+prop+"patched");if(obj.hasOwnProperty(onPropPatchedSymbol)&&obj[onPropPatchedSymbol]){return}delete desc.writable;delete desc.value;var originalDescGet=desc.get;var originalDescSet=desc.set;var eventName=prop.substr(2);var eventNameSymbol=zoneSymbolEventNames[eventName];if(!eventNameSymbol){eventNameSymbol=zoneSymbolEventNames[eventName]=zoneSymbol("ON_PROPERTY"+eventName)}desc.set=function(newValue){var target=this;if(!target&&obj===_global){target=_global}if(!target){return}var previousValue=target[eventNameSymbol];if(previousValue){target.removeEventListener(eventName,wrapFn)}if(originalDescSet){originalDescSet.apply(target,NULL_ON_PROP_VALUE)}if(typeof newValue==="function"){target[eventNameSymbol]=newValue;target.addEventListener(eventName,wrapFn,false)}else{target[eventNameSymbol]=null}};desc.get=function(){var target=this;if(!target&&obj===_global){target=_global}if(!target){return null}var listener=target[eventNameSymbol];if(listener){return listener}else if(originalDescGet){var value=originalDescGet&&originalDescGet.call(this);if(value){desc.set.call(this,value);if(typeof target[REMOVE_ATTRIBUTE]==="function"){target.removeAttribute(prop)}return value}}return null};ObjectDefineProperty(obj,prop,desc);obj[onPropPatchedSymbol]=true}function patchOnProperties(obj,properties,prototype){if(properties){for(var i=0;i<properties.length;i++){patchProperty(obj,"on"+properties[i],prototype)}}else{var onProperties=[];for(var prop in obj){if(prop.substr(0,2)=="on"){onProperties.push(prop)}}for(var j=0;j<onProperties.length;j++){patchProperty(obj,onProperties[j],prototype)}}}var originalInstanceKey=zoneSymbol("originalInstance");function patchClass(className){var OriginalClass=_global[className];if(!OriginalClass)return;_global[zoneSymbol(className)]=OriginalClass;_global[className]=function(){var a=bindArguments(arguments,className);switch(a.length){case 0:this[originalInstanceKey]=new OriginalClass;break;case 1:this[originalInstanceKey]=new OriginalClass(a[0]);break;case 2:this[originalInstanceKey]=new OriginalClass(a[0],a[1]);break;case 3:this[originalInstanceKey]=new OriginalClass(a[0],a[1],a[2]);break;case 4:this[originalInstanceKey]=new OriginalClass(a[0],a[1],a[2],a[3]);break;default:throw new Error("Arg list too long.")}};attachOriginToPatched(_global[className],OriginalClass);var instance=new OriginalClass((function(){}));var prop;for(prop in instance){if(className==="XMLHttpRequest"&&prop==="responseBlob")continue;(function(prop){if(typeof instance[prop]==="function"){_global[className].prototype[prop]=function(){return this[originalInstanceKey][prop].apply(this[originalInstanceKey],arguments)}}else{ObjectDefineProperty(_global[className].prototype,prop,{set:function(fn){if(typeof fn==="function"){this[originalInstanceKey][prop]=wrapWithCurrentZone(fn,className+"."+prop);attachOriginToPatched(this[originalInstanceKey][prop],fn)}else{this[originalInstanceKey][prop]=fn}},get:function(){return this[originalInstanceKey][prop]}})}})(prop)}for(prop in OriginalClass){if(prop!=="prototype"&&OriginalClass.hasOwnProperty(prop)){_global[className][prop]=OriginalClass[prop]}}}function patchMethod(target,name,patchFn){var proto=target;while(proto&&!proto.hasOwnProperty(name)){proto=ObjectGetPrototypeOf(proto)}if(!proto&&target[name]){proto=target}var delegateName=zoneSymbol(name);var delegate=null;if(proto&&(!(delegate=proto[delegateName])||!proto.hasOwnProperty(delegateName))){delegate=proto[delegateName]=proto[name];var desc=proto&&ObjectGetOwnPropertyDescriptor(proto,name);if(isPropertyWritable(desc)){var patchDelegate_1=patchFn(delegate,delegateName,name);proto[name]=function(){return patchDelegate_1(this,arguments)};attachOriginToPatched(proto[name],delegate)}}return delegate}function patchMacroTask(obj,funcName,metaCreator){var setNative=null;function scheduleTask(task){var data=task.data;data.args[data.cbIdx]=function(){task.invoke.apply(this,arguments)};setNative.apply(data.target,data.args);return task}setNative=patchMethod(obj,funcName,(function(delegate){return function(self,args){var meta=metaCreator(self,args);if(meta.cbIdx>=0&&typeof args[meta.cbIdx]==="function"){return scheduleMacroTaskWithCurrentZone(meta.name,args[meta.cbIdx],meta,scheduleTask)}else{return delegate.apply(self,args)}}}))}function attachOriginToPatched(patched,original){patched[zoneSymbol("OriginalDelegate")]=original}var isDetectedIEOrEdge=false;var ieOrEdge=false;function isIE(){try{var ua=internalWindow.navigator.userAgent;if(ua.indexOf("MSIE ")!==-1||ua.indexOf("Trident/")!==-1){return true}}catch(error){}return false}function isIEOrEdge(){if(isDetectedIEOrEdge){return ieOrEdge}isDetectedIEOrEdge=true;try{var ua=internalWindow.navigator.userAgent;if(ua.indexOf("MSIE ")!==-1||ua.indexOf("Trident/")!==-1||ua.indexOf("Edge/")!==-1){ieOrEdge=true}}catch(error){}return ieOrEdge}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("ZoneAwarePromise",(function(global,Zone,api){var ObjectGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;var ObjectDefineProperty=Object.defineProperty;function readableObjectToString(obj){if(obj&&obj.toString===Object.prototype.toString){var className=obj.constructor&&obj.constructor.name;return(className?className:"")+": "+JSON.stringify(obj)}return obj?obj.toString():Object.prototype.toString.call(obj)}var __symbol__=api.symbol;var _uncaughtPromiseErrors=[];var isDisableWrappingUncaughtPromiseRejection=global[__symbol__("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")]===true;var symbolPromise=__symbol__("Promise");var symbolThen=__symbol__("then");var creationTrace="__creationTrace__";api.onUnhandledError=function(e){if(api.showUncaughtError()){var rejection=e&&e.rejection;if(rejection){console.error("Unhandled Promise rejection:",rejection instanceof Error?rejection.message:rejection,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",rejection,rejection instanceof Error?rejection.stack:undefined)}else{console.error(e)}}};api.microtaskDrainDone=function(){var _loop_2=function(){var uncaughtPromiseError=_uncaughtPromiseErrors.shift();try{uncaughtPromiseError.zone.runGuarded((function(){if(uncaughtPromiseError.throwOriginal){throw uncaughtPromiseError.rejection}throw uncaughtPromiseError}))}catch(error){handleUnhandledRejection(error)}};while(_uncaughtPromiseErrors.length){_loop_2()}};var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL=__symbol__("unhandledPromiseRejectionHandler");function handleUnhandledRejection(e){api.onUnhandledError(e);try{var handler=Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];if(typeof handler==="function"){handler.call(this,e)}}catch(err){}}function isThenable(value){return value&&value.then}function forwardResolution(value){return value}function forwardRejection(rejection){return ZoneAwarePromise.reject(rejection)}var symbolState=__symbol__("state");var symbolValue=__symbol__("value");var symbolFinally=__symbol__("finally");var symbolParentPromiseValue=__symbol__("parentPromiseValue");var symbolParentPromiseState=__symbol__("parentPromiseState");var source="Promise.then";var UNRESOLVED=null;var RESOLVED=true;var REJECTED=false;var REJECTED_NO_CATCH=0;function makeResolver(promise,state){return function(v){try{resolvePromise(promise,state,v)}catch(err){resolvePromise(promise,false,err)}}}var once=function(){var wasCalled=false;return function wrapper(wrappedFunction){return function(){if(wasCalled){return}wasCalled=true;wrappedFunction.apply(null,arguments)}}};var TYPE_ERROR="Promise resolved with itself";var CURRENT_TASK_TRACE_SYMBOL=__symbol__("currentTaskTrace");function resolvePromise(promise,state,value){var onceWrapper=once();if(promise===value){throw new TypeError(TYPE_ERROR)}if(promise[symbolState]===UNRESOLVED){var then=null;try{if(typeof value==="object"||typeof value==="function"){then=value&&value.then}}catch(err){onceWrapper((function(){resolvePromise(promise,false,err)}))();return promise}if(state!==REJECTED&&value instanceof ZoneAwarePromise&&value.hasOwnProperty(symbolState)&&value.hasOwnProperty(symbolValue)&&value[symbolState]!==UNRESOLVED){clearRejectedNoCatch(value);resolvePromise(promise,value[symbolState],value[symbolValue])}else if(state!==REJECTED&&typeof then==="function"){try{then.call(value,onceWrapper(makeResolver(promise,state)),onceWrapper(makeResolver(promise,false)))}catch(err){onceWrapper((function(){resolvePromise(promise,false,err)}))()}}else{promise[symbolState]=state;var queue=promise[symbolValue];promise[symbolValue]=value;if(promise[symbolFinally]===symbolFinally){if(state===RESOLVED){promise[symbolState]=promise[symbolParentPromiseState];promise[symbolValue]=promise[symbolParentPromiseValue]}}if(state===REJECTED&&value instanceof Error){var trace=Zone.currentTask&&Zone.currentTask.data&&Zone.currentTask.data[creationTrace];if(trace){ObjectDefineProperty(value,CURRENT_TASK_TRACE_SYMBOL,{configurable:true,enumerable:false,writable:true,value:trace})}}for(var i=0;i<queue.length;){scheduleResolveOrReject(promise,queue[i++],queue[i++],queue[i++],queue[i++])}if(queue.length==0&&state==REJECTED){promise[symbolState]=REJECTED_NO_CATCH;var uncaughtPromiseError=value;try{throw new Error("Uncaught (in promise): "+readableObjectToString(value)+(value&&value.stack?"\n"+value.stack:""))}catch(err){uncaughtPromiseError=err}if(isDisableWrappingUncaughtPromiseRejection){uncaughtPromiseError.throwOriginal=true}uncaughtPromiseError.rejection=value;uncaughtPromiseError.promise=promise;uncaughtPromiseError.zone=Zone.current;uncaughtPromiseError.task=Zone.currentTask;_uncaughtPromiseErrors.push(uncaughtPromiseError);api.scheduleMicroTask()}}}return promise}var REJECTION_HANDLED_HANDLER=__symbol__("rejectionHandledHandler");function clearRejectedNoCatch(promise){if(promise[symbolState]===REJECTED_NO_CATCH){try{var handler=Zone[REJECTION_HANDLED_HANDLER];if(handler&&typeof handler==="function"){handler.call(this,{rejection:promise[symbolValue],promise:promise})}}catch(err){}promise[symbolState]=REJECTED;for(var i=0;i<_uncaughtPromiseErrors.length;i++){if(promise===_uncaughtPromiseErrors[i].promise){_uncaughtPromiseErrors.splice(i,1)}}}}function scheduleResolveOrReject(promise,zone,chainPromise,onFulfilled,onRejected){clearRejectedNoCatch(promise);var promiseState=promise[symbolState];var delegate=promiseState?typeof onFulfilled==="function"?onFulfilled:forwardResolution:typeof onRejected==="function"?onRejected:forwardRejection;zone.scheduleMicroTask(source,(function(){try{var parentPromiseValue=promise[symbolValue];var isFinallyPromise=!!chainPromise&&symbolFinally===chainPromise[symbolFinally];if(isFinallyPromise){chainPromise[symbolParentPromiseValue]=parentPromiseValue;chainPromise[symbolParentPromiseState]=promiseState}var value=zone.run(delegate,undefined,isFinallyPromise&&delegate!==forwardRejection&&delegate!==forwardResolution?[]:[parentPromiseValue]);resolvePromise(chainPromise,true,value)}catch(error){resolvePromise(chainPromise,false,error)}}),chainPromise)}var ZONE_AWARE_PROMISE_TO_STRING="function ZoneAwarePromise() { [native code] }";var noop=function(){};var ZoneAwarePromise=function(){function ZoneAwarePromise(executor){var promise=this;if(!(promise instanceof ZoneAwarePromise)){throw new Error("Must be an instanceof Promise.")}promise[symbolState]=UNRESOLVED;promise[symbolValue]=[];try{executor&&executor(makeResolver(promise,RESOLVED),makeResolver(promise,REJECTED))}catch(error){resolvePromise(promise,false,error)}}ZoneAwarePromise.toString=function(){return ZONE_AWARE_PROMISE_TO_STRING};ZoneAwarePromise.resolve=function(value){return resolvePromise(new this(null),RESOLVED,value)};ZoneAwarePromise.reject=function(error){return resolvePromise(new this(null),REJECTED,error)};ZoneAwarePromise.race=function(values){var resolve;var reject;var promise=new this((function(res,rej){resolve=res;reject=rej}));function onResolve(value){resolve(value)}function onReject(error){reject(error)}for(var _i=0,values_1=values;_i<values_1.length;_i++){var value=values_1[_i];if(!isThenable(value)){value=this.resolve(value)}value.then(onResolve,onReject)}return promise};ZoneAwarePromise.all=function(values){return ZoneAwarePromise.allWithCallback(values)};ZoneAwarePromise.allSettled=function(values){var P=this&&this.prototype instanceof ZoneAwarePromise?this:ZoneAwarePromise;return P.allWithCallback(values,{thenCallback:function(value){return{status:"fulfilled",value:value}},errorCallback:function(err){return{status:"rejected",reason:err}}})};ZoneAwarePromise.allWithCallback=function(values,callback){var resolve;var reject;var promise=new this((function(res,rej){resolve=res;reject=rej}));var unresolvedCount=2;var valueIndex=0;var resolvedValues=[];var _loop_3=function(value){if(!isThenable(value)){value=this_1.resolve(value)}var curValueIndex=valueIndex;try{value.then((function(value){resolvedValues[curValueIndex]=callback?callback.thenCallback(value):value;unresolvedCount--;if(unresolvedCount===0){resolve(resolvedValues)}}),(function(err){if(!callback){reject(err)}else{resolvedValues[curValueIndex]=callback.errorCallback(err);unresolvedCount--;if(unresolvedCount===0){resolve(resolvedValues)}}}))}catch(thenErr){reject(thenErr)}unresolvedCount++;valueIndex++};var this_1=this;for(var _i=0,values_2=values;_i<values_2.length;_i++){var value=values_2[_i];_loop_3(value)}unresolvedCount-=2;if(unresolvedCount===0){resolve(resolvedValues)}return promise};Object.defineProperty(ZoneAwarePromise.prototype,Symbol.toStringTag,{get:function(){return"Promise"},enumerable:false,configurable:true});Object.defineProperty(ZoneAwarePromise.prototype,Symbol.species,{get:function(){return ZoneAwarePromise},enumerable:false,configurable:true});ZoneAwarePromise.prototype.then=function(onFulfilled,onRejected){var C=this.constructor[Symbol.species];if(!C||typeof C!=="function"){C=this.constructor||ZoneAwarePromise}var chainPromise=new C(noop);var zone=Zone.current;if(this[symbolState]==UNRESOLVED){this[symbolValue].push(zone,chainPromise,onFulfilled,onRejected)}else{scheduleResolveOrReject(this,zone,chainPromise,onFulfilled,onRejected)}return chainPromise};ZoneAwarePromise.prototype.catch=function(onRejected){return this.then(null,onRejected)};ZoneAwarePromise.prototype.finally=function(onFinally){var C=this.constructor[Symbol.species];if(!C||typeof C!=="function"){C=ZoneAwarePromise}var chainPromise=new C(noop);chainPromise[symbolFinally]=symbolFinally;var zone=Zone.current;if(this[symbolState]==UNRESOLVED){this[symbolValue].push(zone,chainPromise,onFinally,onFinally)}else{scheduleResolveOrReject(this,zone,chainPromise,onFinally,onFinally)}return chainPromise};return ZoneAwarePromise}();ZoneAwarePromise["resolve"]=ZoneAwarePromise.resolve;ZoneAwarePromise["reject"]=ZoneAwarePromise.reject;ZoneAwarePromise["race"]=ZoneAwarePromise.race;ZoneAwarePromise["all"]=ZoneAwarePromise.all;var NativePromise=global[symbolPromise]=global["Promise"];global["Promise"]=ZoneAwarePromise;var symbolThenPatched=__symbol__("thenPatched");function patchThen(Ctor){var proto=Ctor.prototype;var prop=ObjectGetOwnPropertyDescriptor(proto,"then");if(prop&&(prop.writable===false||!prop.configurable)){return}var originalThen=proto.then;proto[symbolThen]=originalThen;Ctor.prototype.then=function(onResolve,onReject){var _this=this;var wrapped=new ZoneAwarePromise((function(resolve,reject){originalThen.call(_this,resolve,reject)}));return wrapped.then(onResolve,onReject)};Ctor[symbolThenPatched]=true}api.patchThen=patchThen;function zoneify(fn){return function(self,args){var resultPromise=fn.apply(self,args);if(resultPromise instanceof ZoneAwarePromise){return resultPromise}var ctor=resultPromise.constructor;if(!ctor[symbolThenPatched]){patchThen(ctor)}return resultPromise}}if(NativePromise){patchThen(NativePromise);patchMethod(global,"fetch",(function(delegate){return zoneify(delegate)}))}Promise[Zone.__symbol__("uncaughtPromiseErrors")]=_uncaughtPromiseErrors;return ZoneAwarePromise}));
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("toString",(function(global){var originalFunctionToString=Function.prototype.toString;var ORIGINAL_DELEGATE_SYMBOL=zoneSymbol("OriginalDelegate");var PROMISE_SYMBOL=zoneSymbol("Promise");var ERROR_SYMBOL=zoneSymbol("Error");var newFunctionToString=function toString(){if(typeof this==="function"){var originalDelegate=this[ORIGINAL_DELEGATE_SYMBOL];if(originalDelegate){if(typeof originalDelegate==="function"){return originalFunctionToString.call(originalDelegate)}else{return Object.prototype.toString.call(originalDelegate)}}if(this===Promise){var nativePromise=global[PROMISE_SYMBOL];if(nativePromise){return originalFunctionToString.call(nativePromise)}}if(this===Error){var nativeError=global[ERROR_SYMBOL];if(nativeError){return originalFunctionToString.call(nativeError)}}}return originalFunctionToString.call(this)};newFunctionToString[ORIGINAL_DELEGATE_SYMBOL]=originalFunctionToString;Function.prototype.toString=newFunctionToString;var originalObjectToString=Object.prototype.toString;var PROMISE_OBJECT_TO_STRING="[object Promise]";Object.prototype.toString=function(){if(typeof Promise==="function"&&this instanceof Promise){return PROMISE_OBJECT_TO_STRING}return originalObjectToString.call(this)}}));
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var passiveSupported=false;if(typeof window!=="undefined"){try{var options=Object.defineProperty({},"passive",{get:function(){passiveSupported=true}});window.addEventListener("test",options,options);window.removeEventListener("test",options,options)}catch(err){passiveSupported=false}}var OPTIMIZED_ZONE_EVENT_TASK_DATA={useG:true};var zoneSymbolEventNames$1={};var globalSources={};var EVENT_NAME_SYMBOL_REGX=new RegExp("^"+ZONE_SYMBOL_PREFIX+"(\\w+)(true|false)$");var IMMEDIATE_PROPAGATION_SYMBOL=zoneSymbol("propagationStopped");function prepareEventNames(eventName,eventNameToString){var falseEventName=(eventNameToString?eventNameToString(eventName):eventName)+FALSE_STR;var trueEventName=(eventNameToString?eventNameToString(eventName):eventName)+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames$1[eventName]={};zoneSymbolEventNames$1[eventName][FALSE_STR]=symbol;zoneSymbolEventNames$1[eventName][TRUE_STR]=symbolCapture}function patchEventTarget(_global,apis,patchOptions){var ADD_EVENT_LISTENER=patchOptions&&patchOptions.add||ADD_EVENT_LISTENER_STR;var REMOVE_EVENT_LISTENER=patchOptions&&patchOptions.rm||REMOVE_EVENT_LISTENER_STR;var LISTENERS_EVENT_LISTENER=patchOptions&&patchOptions.listeners||"eventListeners";var REMOVE_ALL_LISTENERS_EVENT_LISTENER=patchOptions&&patchOptions.rmAll||"removeAllListeners";var zoneSymbolAddEventListener=zoneSymbol(ADD_EVENT_LISTENER);var ADD_EVENT_LISTENER_SOURCE="."+ADD_EVENT_LISTENER+":";var PREPEND_EVENT_LISTENER="prependListener";var PREPEND_EVENT_LISTENER_SOURCE="."+PREPEND_EVENT_LISTENER+":";var invokeTask=function(task,target,event){if(task.isRemoved){return}var delegate=task.callback;if(typeof delegate==="object"&&delegate.handleEvent){task.callback=function(event){return delegate.handleEvent(event)};task.originalDelegate=delegate}task.invoke(task,target,[event]);var options=task.options;if(options&&typeof options==="object"&&options.once){var delegate_1=task.originalDelegate?task.originalDelegate:task.callback;target[REMOVE_EVENT_LISTENER].call(target,event.type,delegate_1,options)}};var globalZoneAwareCallback=function(event){event=event||_global.event;if(!event){return}var target=this||event.target||_global;var tasks=target[zoneSymbolEventNames$1[event.type][FALSE_STR]];if(tasks){if(tasks.length===1){invokeTask(tasks[0],target,event)}else{var copyTasks=tasks.slice();for(var i=0;i<copyTasks.length;i++){if(event&&event[IMMEDIATE_PROPAGATION_SYMBOL]===true){break}invokeTask(copyTasks[i],target,event)}}}};var globalZoneAwareCaptureCallback=function(event){event=event||_global.event;if(!event){return}var target=this||event.target||_global;var tasks=target[zoneSymbolEventNames$1[event.type][TRUE_STR]];if(tasks){if(tasks.length===1){invokeTask(tasks[0],target,event)}else{var copyTasks=tasks.slice();for(var i=0;i<copyTasks.length;i++){if(event&&event[IMMEDIATE_PROPAGATION_SYMBOL]===true){break}invokeTask(copyTasks[i],target,event)}}}};function patchEventTargetMethods(obj,patchOptions){if(!obj){return false}var useGlobalCallback=true;if(patchOptions&&patchOptions.useG!==undefined){useGlobalCallback=patchOptions.useG}var validateHandler=patchOptions&&patchOptions.vh;var checkDuplicate=true;if(patchOptions&&patchOptions.chkDup!==undefined){checkDuplicate=patchOptions.chkDup}var returnTarget=false;if(patchOptions&&patchOptions.rt!==undefined){returnTarget=patchOptions.rt}var proto=obj;while(proto&&!proto.hasOwnProperty(ADD_EVENT_LISTENER)){proto=ObjectGetPrototypeOf(proto)}if(!proto&&obj[ADD_EVENT_LISTENER]){proto=obj}if(!proto){return false}if(proto[zoneSymbolAddEventListener]){return false}var eventNameToString=patchOptions&&patchOptions.eventNameToString;var taskData={};var nativeAddEventListener=proto[zoneSymbolAddEventListener]=proto[ADD_EVENT_LISTENER];var nativeRemoveEventListener=proto[zoneSymbol(REMOVE_EVENT_LISTENER)]=proto[REMOVE_EVENT_LISTENER];var nativeListeners=proto[zoneSymbol(LISTENERS_EVENT_LISTENER)]=proto[LISTENERS_EVENT_LISTENER];var nativeRemoveAllListeners=proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)]=proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];var nativePrependEventListener;if(patchOptions&&patchOptions.prepend){nativePrependEventListener=proto[zoneSymbol(patchOptions.prepend)]=proto[patchOptions.prepend]}function buildEventListenerOptions(options,passive){if(!passiveSupported&&typeof options==="object"&&options){return!!options.capture}if(!passiveSupported||!passive){return options}if(typeof options==="boolean"){return{capture:options,passive:true}}if(!options){return{passive:true}}if(typeof options==="object"&&options.passive!==false){return Object.assign(Object.assign({},options),{passive:true})}return options}var customScheduleGlobal=function(task){if(taskData.isExisting){return}return nativeAddEventListener.call(taskData.target,taskData.eventName,taskData.capture?globalZoneAwareCaptureCallback:globalZoneAwareCallback,taskData.options)};var customCancelGlobal=function(task){if(!task.isRemoved){var symbolEventNames=zoneSymbolEventNames$1[task.eventName];var symbolEventName=void 0;if(symbolEventNames){symbolEventName=symbolEventNames[task.capture?TRUE_STR:FALSE_STR]}var existingTasks=symbolEventName&&task.target[symbolEventName];if(existingTasks){for(var i=0;i<existingTasks.length;i++){var existingTask=existingTasks[i];if(existingTask===task){existingTasks.splice(i,1);task.isRemoved=true;if(existingTasks.length===0){task.allRemoved=true;task.target[symbolEventName]=null}break}}}}if(!task.allRemoved){return}return nativeRemoveEventListener.call(task.target,task.eventName,task.capture?globalZoneAwareCaptureCallback:globalZoneAwareCallback,task.options)};var customScheduleNonGlobal=function(task){return nativeAddEventListener.call(taskData.target,taskData.eventName,task.invoke,taskData.options)};var customSchedulePrepend=function(task){return nativePrependEventListener.call(taskData.target,taskData.eventName,task.invoke,taskData.options)};var customCancelNonGlobal=function(task){return nativeRemoveEventListener.call(task.target,task.eventName,task.invoke,task.options)};var customSchedule=useGlobalCallback?customScheduleGlobal:customScheduleNonGlobal;var customCancel=useGlobalCallback?customCancelGlobal:customCancelNonGlobal;var compareTaskCallbackVsDelegate=function(task,delegate){var typeOfDelegate=typeof delegate;return typeOfDelegate==="function"&&task.callback===delegate||typeOfDelegate==="object"&&task.originalDelegate===delegate};var compare=patchOptions&&patchOptions.diff?patchOptions.diff:compareTaskCallbackVsDelegate;var unpatchedEvents=Zone[zoneSymbol("UNPATCHED_EVENTS")];var passiveEvents=_global[zoneSymbol("PASSIVE_EVENTS")];var makeAddListener=function(nativeListener,addSource,customScheduleFn,customCancelFn,returnTarget,prepend){if(returnTarget===void 0){returnTarget=false}if(prepend===void 0){prepend=false}return function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName)}var delegate=arguments[1];if(!delegate){return nativeListener.apply(this,arguments)}if(isNode&&eventName==="uncaughtException"){return nativeListener.apply(this,arguments)}var isHandleEvent=false;if(typeof delegate!=="function"){if(!delegate.handleEvent){return nativeListener.apply(this,arguments)}isHandleEvent=true}if(validateHandler&&!validateHandler(nativeListener,delegate,target,arguments)){return}var passive=passiveSupported&&!!passiveEvents&&passiveEvents.indexOf(eventName)!==-1;var options=buildEventListenerOptions(arguments[2],passive);if(unpatchedEvents){for(var i=0;i<unpatchedEvents.length;i++){if(eventName===unpatchedEvents[i]){if(passive){return nativeListener.call(target,eventName,delegate,options)}else{return nativeListener.apply(this,arguments)}}}}var capture=!options?false:typeof options==="boolean"?true:options.capture;var once=options&&typeof options==="object"?options.once:false;var zone=Zone.current;var symbolEventNames=zoneSymbolEventNames$1[eventName];if(!symbolEventNames){prepareEventNames(eventName,eventNameToString);symbolEventNames=zoneSymbolEventNames$1[eventName]}var symbolEventName=symbolEventNames[capture?TRUE_STR:FALSE_STR];var existingTasks=target[symbolEventName];var isExisting=false;if(existingTasks){isExisting=true;if(checkDuplicate){for(var i=0;i<existingTasks.length;i++){if(compare(existingTasks[i],delegate)){return}}}}else{existingTasks=target[symbolEventName]=[]}var source;var constructorName=target.constructor["name"];var targetSource=globalSources[constructorName];if(targetSource){source=targetSource[eventName]}if(!source){source=constructorName+addSource+(eventNameToString?eventNameToString(eventName):eventName)}taskData.options=options;if(once){taskData.options.once=false}taskData.target=target;taskData.capture=capture;taskData.eventName=eventName;taskData.isExisting=isExisting;var data=useGlobalCallback?OPTIMIZED_ZONE_EVENT_TASK_DATA:undefined;if(data){data.taskData=taskData}var task=zone.scheduleEventTask(source,delegate,data,customScheduleFn,customCancelFn);taskData.target=null;if(data){data.taskData=null}if(once){options.once=true}if(!(!passiveSupported&&typeof task.options==="boolean")){task.options=options}task.target=target;task.capture=capture;task.eventName=eventName;if(isHandleEvent){task.originalDelegate=delegate}if(!prepend){existingTasks.push(task)}else{existingTasks.unshift(task)}if(returnTarget){return target}}};proto[ADD_EVENT_LISTENER]=makeAddListener(nativeAddEventListener,ADD_EVENT_LISTENER_SOURCE,customSchedule,customCancel,returnTarget);if(nativePrependEventListener){proto[PREPEND_EVENT_LISTENER]=makeAddListener(nativePrependEventListener,PREPEND_EVENT_LISTENER_SOURCE,customSchedulePrepend,customCancel,returnTarget,true)}proto[REMOVE_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName)}var options=arguments[2];var capture=!options?false:typeof options==="boolean"?true:options.capture;var delegate=arguments[1];if(!delegate){return nativeRemoveEventListener.apply(this,arguments)}if(validateHandler&&!validateHandler(nativeRemoveEventListener,delegate,target,arguments)){return}var symbolEventNames=zoneSymbolEventNames$1[eventName];var symbolEventName;if(symbolEventNames){symbolEventName=symbolEventNames[capture?TRUE_STR:FALSE_STR]}var existingTasks=symbolEventName&&target[symbolEventName];if(existingTasks){for(var i=0;i<existingTasks.length;i++){var existingTask=existingTasks[i];if(compare(existingTask,delegate)){existingTasks.splice(i,1);existingTask.isRemoved=true;if(existingTasks.length===0){existingTask.allRemoved=true;target[symbolEventName]=null;if(typeof eventName==="string"){var onPropertySymbol=ZONE_SYMBOL_PREFIX+"ON_PROPERTY"+eventName;target[onPropertySymbol]=null}}existingTask.zone.cancelTask(existingTask);if(returnTarget){return target}return}}}return nativeRemoveEventListener.apply(this,arguments)};proto[LISTENERS_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName)}var listeners=[];var tasks=findEventTasks(target,eventNameToString?eventNameToString(eventName):eventName);for(var i=0;i<tasks.length;i++){var task=tasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;listeners.push(delegate)}return listeners};proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]=function(){var target=this||_global;var eventName=arguments[0];if(!eventName){var keys=Object.keys(target);for(var i=0;i<keys.length;i++){var prop=keys[i];var match=EVENT_NAME_SYMBOL_REGX.exec(prop);var evtName=match&&match[1];if(evtName&&evtName!=="removeListener"){this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this,evtName)}}this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this,"removeListener")}else{if(patchOptions&&patchOptions.transferEventName){eventName=patchOptions.transferEventName(eventName)}var symbolEventNames=zoneSymbolEventNames$1[eventName];if(symbolEventNames){var symbolEventName=symbolEventNames[FALSE_STR];var symbolCaptureEventName=symbolEventNames[TRUE_STR];var tasks=target[symbolEventName];var captureTasks=target[symbolCaptureEventName];if(tasks){var removeTasks=tasks.slice();for(var i=0;i<removeTasks.length;i++){var task=removeTasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;this[REMOVE_EVENT_LISTENER].call(this,eventName,delegate,task.options)}}if(captureTasks){var removeTasks=captureTasks.slice();for(var i=0;i<removeTasks.length;i++){var task=removeTasks[i];var delegate=task.originalDelegate?task.originalDelegate:task.callback;this[REMOVE_EVENT_LISTENER].call(this,eventName,delegate,task.options)}}}}if(returnTarget){return this}};attachOriginToPatched(proto[ADD_EVENT_LISTENER],nativeAddEventListener);attachOriginToPatched(proto[REMOVE_EVENT_LISTENER],nativeRemoveEventListener);if(nativeRemoveAllListeners){attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER],nativeRemoveAllListeners)}if(nativeListeners){attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER],nativeListeners)}return true}var results=[];for(var i=0;i<apis.length;i++){results[i]=patchEventTargetMethods(apis[i],patchOptions)}return results}function findEventTasks(target,eventName){if(!eventName){var foundTasks=[];for(var prop in target){var match=EVENT_NAME_SYMBOL_REGX.exec(prop);var evtName=match&&match[1];if(evtName&&(!eventName||evtName===eventName)){var tasks=target[prop];if(tasks){for(var i=0;i<tasks.length;i++){foundTasks.push(tasks[i])}}}}return foundTasks}var symbolEventName=zoneSymbolEventNames$1[eventName];if(!symbolEventName){prepareEventNames(eventName);symbolEventName=zoneSymbolEventNames$1[eventName]}var captureFalseTasks=target[symbolEventName[FALSE_STR]];var captureTrueTasks=target[symbolEventName[TRUE_STR]];if(!captureFalseTasks){return captureTrueTasks?captureTrueTasks.slice():[]}else{return captureTrueTasks?captureFalseTasks.concat(captureTrueTasks):captureFalseTasks.slice()}}function patchEventPrototype(global,api){var Event=global["Event"];if(Event&&Event.prototype){api.patchMethod(Event.prototype,"stopImmediatePropagation",(function(delegate){return function(self,args){self[IMMEDIATE_PROPAGATION_SYMBOL]=true;delegate&&delegate.apply(self,args)}}))}}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function patchCallbacks(api,target,targetName,method,callbacks){var symbol=Zone.__symbol__(method);if(target[symbol]){return}var nativeDelegate=target[symbol]=target[method];target[method]=function(name,opts,options){if(opts&&opts.prototype){callbacks.forEach((function(callback){var source=targetName+"."+method+"::"+callback;var prototype=opts.prototype;if(prototype.hasOwnProperty(callback)){var descriptor=api.ObjectGetOwnPropertyDescriptor(prototype,callback);if(descriptor&&descriptor.value){descriptor.value=api.wrapWithCurrentZone(descriptor.value,source);api._redefineProperty(opts.prototype,callback,descriptor)}else if(prototype[callback]){prototype[callback]=api.wrapWithCurrentZone(prototype[callback],source)}}else if(prototype[callback]){prototype[callback]=api.wrapWithCurrentZone(prototype[callback],source)}}))}return nativeDelegate.call(target,name,opts,options)};api.attachOriginToPatched(target[method],nativeDelegate)}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var globalEventHandlersEventNames=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"];var documentEventNames=["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"];var windowEventNames=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"];var htmlElementEventNames=["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"];var mediaElementEventNames=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"];var ieElementEventNames=["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"];var webglEventNames=["webglcontextrestored","webglcontextlost","webglcontextcreationerror"];var formEventNames=["autocomplete","autocompleteerror"];var detailEventNames=["toggle"];var frameEventNames=["load"];var frameSetEventNames=["blur","error","focus","load","resize","scroll","messageerror"];var marqueeEventNames=["bounce","finish","start"];var XMLHttpRequestEventNames=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"];var IDBIndexEventNames=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"];var websocketEventNames=["close","error","open","message"];var workerEventNames=["error","message"];var eventNames=globalEventHandlersEventNames.concat(webglEventNames,formEventNames,detailEventNames,documentEventNames,windowEventNames,htmlElementEventNames,ieElementEventNames);function filterProperties(target,onProperties,ignoreProperties){if(!ignoreProperties||ignoreProperties.length===0){return onProperties}var tip=ignoreProperties.filter((function(ip){return ip.target===target}));if(!tip||tip.length===0){return onProperties}var targetIgnoreProperties=tip[0].ignoreProperties;return onProperties.filter((function(op){return targetIgnoreProperties.indexOf(op)===-1}))}function patchFilteredProperties(target,onProperties,ignoreProperties,prototype){if(!target){return}var filteredProperties=filterProperties(target,onProperties,ignoreProperties);patchOnProperties(target,filteredProperties,prototype)}function propertyDescriptorPatch(api,_global){if(isNode&&!isMix){return}if(Zone[api.symbol("patchEvents")]){return}var supportsWebSocket=typeof WebSocket!=="undefined";var ignoreProperties=_global["__Zone_ignore_on_properties"];if(isBrowser){var internalWindow_1=window;var ignoreErrorProperties=isIE()?[{target:internalWindow_1,ignoreProperties:["error"]}]:[];patchFilteredProperties(internalWindow_1,eventNames.concat(["messageerror"]),ignoreProperties?ignoreProperties.concat(ignoreErrorProperties):ignoreProperties,ObjectGetPrototypeOf(internalWindow_1));patchFilteredProperties(Document.prototype,eventNames,ignoreProperties);if(typeof internalWindow_1["SVGElement"]!=="undefined"){patchFilteredProperties(internalWindow_1["SVGElement"].prototype,eventNames,ignoreProperties)}patchFilteredProperties(Element.prototype,eventNames,ignoreProperties);patchFilteredProperties(HTMLElement.prototype,eventNames,ignoreProperties);patchFilteredProperties(HTMLMediaElement.prototype,mediaElementEventNames,ignoreProperties);patchFilteredProperties(HTMLFrameSetElement.prototype,windowEventNames.concat(frameSetEventNames),ignoreProperties);patchFilteredProperties(HTMLBodyElement.prototype,windowEventNames.concat(frameSetEventNames),ignoreProperties);patchFilteredProperties(HTMLFrameElement.prototype,frameEventNames,ignoreProperties);patchFilteredProperties(HTMLIFrameElement.prototype,frameEventNames,ignoreProperties);var HTMLMarqueeElement_1=internalWindow_1["HTMLMarqueeElement"];if(HTMLMarqueeElement_1){patchFilteredProperties(HTMLMarqueeElement_1.prototype,marqueeEventNames,ignoreProperties)}var Worker_1=internalWindow_1["Worker"];if(Worker_1){patchFilteredProperties(Worker_1.prototype,workerEventNames,ignoreProperties)}}var XMLHttpRequest=_global["XMLHttpRequest"];if(XMLHttpRequest){patchFilteredProperties(XMLHttpRequest.prototype,XMLHttpRequestEventNames,ignoreProperties)}var XMLHttpRequestEventTarget=_global["XMLHttpRequestEventTarget"];if(XMLHttpRequestEventTarget){patchFilteredProperties(XMLHttpRequestEventTarget&&XMLHttpRequestEventTarget.prototype,XMLHttpRequestEventNames,ignoreProperties)}if(typeof IDBIndex!=="undefined"){patchFilteredProperties(IDBIndex.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBRequest.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBOpenDBRequest.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBDatabase.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBTransaction.prototype,IDBIndexEventNames,ignoreProperties);patchFilteredProperties(IDBCursor.prototype,IDBIndexEventNames,ignoreProperties)}if(supportsWebSocket){patchFilteredProperties(WebSocket.prototype,websocketEventNames,ignoreProperties)}}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("util",(function(global,Zone,api){api.patchOnProperties=patchOnProperties;api.patchMethod=patchMethod;api.bindArguments=bindArguments;api.patchMacroTask=patchMacroTask;var SYMBOL_BLACK_LISTED_EVENTS=Zone.__symbol__("BLACK_LISTED_EVENTS");var SYMBOL_UNPATCHED_EVENTS=Zone.__symbol__("UNPATCHED_EVENTS");if(global[SYMBOL_UNPATCHED_EVENTS]){global[SYMBOL_BLACK_LISTED_EVENTS]=global[SYMBOL_UNPATCHED_EVENTS]}if(global[SYMBOL_BLACK_LISTED_EVENTS]){Zone[SYMBOL_BLACK_LISTED_EVENTS]=Zone[SYMBOL_UNPATCHED_EVENTS]=global[SYMBOL_BLACK_LISTED_EVENTS]}api.patchEventPrototype=patchEventPrototype;api.patchEventTarget=patchEventTarget;api.isIEOrEdge=isIEOrEdge;api.ObjectDefineProperty=ObjectDefineProperty;api.ObjectGetOwnPropertyDescriptor=ObjectGetOwnPropertyDescriptor;api.ObjectCreate=ObjectCreate;api.ArraySlice=ArraySlice;api.patchClass=patchClass;api.wrapWithCurrentZone=wrapWithCurrentZone;api.filterProperties=filterProperties;api.attachOriginToPatched=attachOriginToPatched;api._redefineProperty=Object.defineProperty;api.patchCallbacks=patchCallbacks;api.getGlobalObjects=function(){return{globalSources:globalSources,zoneSymbolEventNames:zoneSymbolEventNames$1,eventNames:eventNames,isBrowser:isBrowser,isMix:isMix,isNode:isNode,TRUE_STR:TRUE_STR,FALSE_STR:FALSE_STR,ZONE_SYMBOL_PREFIX:ZONE_SYMBOL_PREFIX,ADD_EVENT_LISTENER_STR:ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR:REMOVE_EVENT_LISTENER_STR}}}));
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var zoneSymbol$1;var _defineProperty;var _getOwnPropertyDescriptor;var _create;var unconfigurablesKey;function propertyPatch(){zoneSymbol$1=Zone.__symbol__;_defineProperty=Object[zoneSymbol$1("defineProperty")]=Object.defineProperty;_getOwnPropertyDescriptor=Object[zoneSymbol$1("getOwnPropertyDescriptor")]=Object.getOwnPropertyDescriptor;_create=Object.create;unconfigurablesKey=zoneSymbol$1("unconfigurables");Object.defineProperty=function(obj,prop,desc){if(isUnconfigurable(obj,prop)){throw new TypeError("Cannot assign to read only property '"+prop+"' of "+obj)}var originalConfigurableFlag=desc.configurable;if(prop!=="prototype"){desc=rewriteDescriptor(obj,prop,desc)}return _tryDefineProperty(obj,prop,desc,originalConfigurableFlag)};Object.defineProperties=function(obj,props){Object.keys(props).forEach((function(prop){Object.defineProperty(obj,prop,props[prop])}));return obj};Object.create=function(obj,proto){if(typeof proto==="object"&&!Object.isFrozen(proto)){Object.keys(proto).forEach((function(prop){proto[prop]=rewriteDescriptor(obj,prop,proto[prop])}))}return _create(obj,proto)};Object.getOwnPropertyDescriptor=function(obj,prop){var desc=_getOwnPropertyDescriptor(obj,prop);if(desc&&isUnconfigurable(obj,prop)){desc.configurable=false}return desc}}function _redefineProperty(obj,prop,desc){var originalConfigurableFlag=desc.configurable;desc=rewriteDescriptor(obj,prop,desc);return _tryDefineProperty(obj,prop,desc,originalConfigurableFlag)}function isUnconfigurable(obj,prop){return obj&&obj[unconfigurablesKey]&&obj[unconfigurablesKey][prop]}function rewriteDescriptor(obj,prop,desc){if(!Object.isFrozen(desc)){desc.configurable=true}if(!desc.configurable){if(!obj[unconfigurablesKey]&&!Object.isFrozen(obj)){_defineProperty(obj,unconfigurablesKey,{writable:true,value:{}})}if(obj[unconfigurablesKey]){obj[unconfigurablesKey][prop]=true}}return desc}function _tryDefineProperty(obj,prop,desc,originalConfigurableFlag){try{return _defineProperty(obj,prop,desc)}catch(error){if(desc.configurable){if(typeof originalConfigurableFlag=="undefined"){delete desc.configurable}else{desc.configurable=originalConfigurableFlag}try{return _defineProperty(obj,prop,desc)}catch(error){var swallowError=false;if(prop==="createdCallback"||prop==="attachedCallback"||prop==="detachedCallback"||prop==="attributeChangedCallback"){swallowError=true}if(!swallowError){throw error}var descJson=null;try{descJson=JSON.stringify(desc)}catch(error){descJson=desc.toString()}console.log("Attempting to configure '"+prop+"' with descriptor '"+descJson+"' on object '"+obj+"' and got error, giving up: "+error)}}else{throw error}}}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function eventTargetLegacyPatch(_global,api){var _a=api.getGlobalObjects(),eventNames=_a.eventNames,globalSources=_a.globalSources,zoneSymbolEventNames=_a.zoneSymbolEventNames,TRUE_STR=_a.TRUE_STR,FALSE_STR=_a.FALSE_STR,ZONE_SYMBOL_PREFIX=_a.ZONE_SYMBOL_PREFIX;var WTF_ISSUE_555="Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video";var NO_EVENT_TARGET="ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket".split(",");var EVENT_TARGET="EventTarget";var apis=[];var isWtf=_global["wtf"];var WTF_ISSUE_555_ARRAY=WTF_ISSUE_555.split(",");if(isWtf){apis=WTF_ISSUE_555_ARRAY.map((function(v){return"HTML"+v+"Element"})).concat(NO_EVENT_TARGET)}else if(_global[EVENT_TARGET]){apis.push(EVENT_TARGET)}else{apis=NO_EVENT_TARGET}var isDisableIECheck=_global["__Zone_disable_IE_check"]||false;var isEnableCrossContextCheck=_global["__Zone_enable_cross_context_check"]||false;var ieOrEdge=api.isIEOrEdge();var ADD_EVENT_LISTENER_SOURCE=".addEventListener:";var FUNCTION_WRAPPER="[object FunctionWrapper]";var BROWSER_TOOLS="function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }";var pointerEventsMap={MSPointerCancel:"pointercancel",MSPointerDown:"pointerdown",MSPointerEnter:"pointerenter",MSPointerHover:"pointerhover",MSPointerLeave:"pointerleave",MSPointerMove:"pointermove",MSPointerOut:"pointerout",MSPointerOver:"pointerover",MSPointerUp:"pointerup"};for(var i=0;i<eventNames.length;i++){var eventName=eventNames[i];var falseEventName=eventName+FALSE_STR;var trueEventName=eventName+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames[eventName]={};zoneSymbolEventNames[eventName][FALSE_STR]=symbol;zoneSymbolEventNames[eventName][TRUE_STR]=symbolCapture}for(var i=0;i<WTF_ISSUE_555_ARRAY.length;i++){var target=WTF_ISSUE_555_ARRAY[i];var targets=globalSources[target]={};for(var j=0;j<eventNames.length;j++){var eventName=eventNames[j];targets[eventName]=target+ADD_EVENT_LISTENER_SOURCE+eventName}}var checkIEAndCrossContext=function(nativeDelegate,delegate,target,args){if(!isDisableIECheck&&ieOrEdge){if(isEnableCrossContextCheck){try{var testString=delegate.toString();if(testString===FUNCTION_WRAPPER||testString==BROWSER_TOOLS){nativeDelegate.apply(target,args);return false}}catch(error){nativeDelegate.apply(target,args);return false}}else{var testString=delegate.toString();if(testString===FUNCTION_WRAPPER||testString==BROWSER_TOOLS){nativeDelegate.apply(target,args);return false}}}else if(isEnableCrossContextCheck){try{delegate.toString()}catch(error){nativeDelegate.apply(target,args);return false}}return true};var apiTypes=[];for(var i=0;i<apis.length;i++){var type=_global[apis[i]];apiTypes.push(type&&type.prototype)}api.patchEventTarget(_global,apiTypes,{vh:checkIEAndCrossContext,transferEventName:function(eventName){var pointerEventName=pointerEventsMap[eventName];return pointerEventName||eventName}});Zone[api.symbol("patchEventTarget")]=!!_global[EVENT_TARGET];return true}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function apply(api,_global){var _a=api.getGlobalObjects(),ADD_EVENT_LISTENER_STR=_a.ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR=_a.REMOVE_EVENT_LISTENER_STR;var WS=_global.WebSocket;if(!_global.EventTarget){api.patchEventTarget(_global,[WS.prototype])}_global.WebSocket=function(x,y){var socket=arguments.length>1?new WS(x,y):new WS(x);var proxySocket;var proxySocketProto;var onmessageDesc=api.ObjectGetOwnPropertyDescriptor(socket,"onmessage");if(onmessageDesc&&onmessageDesc.configurable===false){proxySocket=api.ObjectCreate(socket);proxySocketProto=socket;[ADD_EVENT_LISTENER_STR,REMOVE_EVENT_LISTENER_STR,"send","close"].forEach((function(propName){proxySocket[propName]=function(){var args=api.ArraySlice.call(arguments);if(propName===ADD_EVENT_LISTENER_STR||propName===REMOVE_EVENT_LISTENER_STR){var eventName=args.length>0?args[0]:undefined;if(eventName){var propertySymbol=Zone.__symbol__("ON_PROPERTY"+eventName);socket[propertySymbol]=proxySocket[propertySymbol]}}return socket[propName].apply(socket,args)}}))}else{proxySocket=socket}api.patchOnProperties(proxySocket,["close","error","message","open"],proxySocketProto);return proxySocket};var globalWebSocket=_global["WebSocket"];for(var prop in WS){globalWebSocket[prop]=WS[prop]}}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function propertyDescriptorLegacyPatch(api,_global){var _a=api.getGlobalObjects(),isNode=_a.isNode,isMix=_a.isMix;if(isNode&&!isMix){return}if(!canPatchViaPropertyDescriptor(api,_global)){var supportsWebSocket=typeof WebSocket!=="undefined";patchViaCapturingAllTheEvents(api);api.patchClass("XMLHttpRequest");if(supportsWebSocket){apply(api,_global)}Zone[api.symbol("patchEvents")]=true}}function canPatchViaPropertyDescriptor(api,_global){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if((isBrowser||isMix)&&!api.ObjectGetOwnPropertyDescriptor(HTMLElement.prototype,"onclick")&&typeof Element!=="undefined"){var desc=api.ObjectGetOwnPropertyDescriptor(Element.prototype,"onclick");if(desc&&!desc.configurable)return false;if(desc){api.ObjectDefineProperty(Element.prototype,"onclick",{enumerable:true,configurable:true,get:function(){return true}});var div=document.createElement("div");var result=!!div.onclick;api.ObjectDefineProperty(Element.prototype,"onclick",desc);return result}}var XMLHttpRequest=_global["XMLHttpRequest"];if(!XMLHttpRequest){return false}var ON_READY_STATE_CHANGE="onreadystatechange";var XMLHttpRequestPrototype=XMLHttpRequest.prototype;var xhrDesc=api.ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE);if(xhrDesc){api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,{enumerable:true,configurable:true,get:function(){return true}});var req=new XMLHttpRequest;var result=!!req.onreadystatechange;api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,xhrDesc||{});return result}else{var SYMBOL_FAKE_ONREADYSTATECHANGE_1=api.symbol("fake");api.ObjectDefineProperty(XMLHttpRequestPrototype,ON_READY_STATE_CHANGE,{enumerable:true,configurable:true,get:function(){return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1]},set:function(value){this[SYMBOL_FAKE_ONREADYSTATECHANGE_1]=value}});var req=new XMLHttpRequest;var detectFunc=function(){};req.onreadystatechange=detectFunc;var result=req[SYMBOL_FAKE_ONREADYSTATECHANGE_1]===detectFunc;req.onreadystatechange=null;return result}}function patchViaCapturingAllTheEvents(api){var eventNames=api.getGlobalObjects().eventNames;var unboundKey=api.symbol("unbound");var _loop_4=function(i){var property=eventNames[i];var onproperty="on"+property;self.addEventListener(property,(function(event){var elt=event.target,bound,source;if(elt){source=elt.constructor["name"]+"."+onproperty}else{source="unknown."+onproperty}while(elt){if(elt[onproperty]&&!elt[onproperty][unboundKey]){bound=api.wrapWithCurrentZone(elt[onproperty],source);bound[unboundKey]=elt[onproperty];elt[onproperty]=bound}elt=elt.parentElement}}),true)};for(var i=0;i<eventNames.length;i++){_loop_4(i)}}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function registerElementPatch(_global,api){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if(!isBrowser&&!isMix||!("registerElement"in _global.document)){return}var callbacks=["createdCallback","attachedCallback","detachedCallback","attributeChangedCallback"];api.patchCallbacks(api,document,"Document","registerElement",callbacks)}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */(function(_global){var symbolPrefix=_global["__Zone_symbol_prefix"]||"__zone_symbol__";function __symbol__(name){return symbolPrefix+name}_global[__symbol__("legacyPatch")]=function(){var Zone=_global["Zone"];Zone.__load_patch("defineProperty",(function(global,Zone,api){api._redefineProperty=_redefineProperty;propertyPatch()}));Zone.__load_patch("registerElement",(function(global,Zone,api){registerElementPatch(global,api)}));Zone.__load_patch("EventTargetLegacy",(function(global,Zone,api){eventTargetLegacyPatch(global,api);propertyDescriptorLegacyPatch(api,global)}))}})(typeof window!=="undefined"?window:typeof global!=="undefined"?global:typeof self!=="undefined"?self:{});
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */var taskSymbol=zoneSymbol("zoneTask");function patchTimer(window,setName,cancelName,nameSuffix){var setNative=null;var clearNative=null;setName+=nameSuffix;cancelName+=nameSuffix;var tasksByHandleId={};function scheduleTask(task){var data=task.data;data.args[0]=function(){return task.invoke.apply(this,arguments)};data.handleId=setNative.apply(window,data.args);return task}function clearTask(task){return clearNative.call(window,task.data.handleId)}setNative=patchMethod(window,setName,(function(delegate){return function(self,args){if(typeof args[0]==="function"){var options_1={isPeriodic:nameSuffix==="Interval",delay:nameSuffix==="Timeout"||nameSuffix==="Interval"?args[1]||0:undefined,args:args};var callback_1=args[0];args[0]=function timer(){try{return callback_1.apply(this,arguments)}finally{if(!options_1.isPeriodic){if(typeof options_1.handleId==="number"){delete tasksByHandleId[options_1.handleId]}else if(options_1.handleId){options_1.handleId[taskSymbol]=null}}}};var task=scheduleMacroTaskWithCurrentZone(setName,args[0],options_1,scheduleTask,clearTask);if(!task){return task}var handle=task.data.handleId;if(typeof handle==="number"){tasksByHandleId[handle]=task}else if(handle){handle[taskSymbol]=task}if(handle&&handle.ref&&handle.unref&&typeof handle.ref==="function"&&typeof handle.unref==="function"){task.ref=handle.ref.bind(handle);task.unref=handle.unref.bind(handle)}if(typeof handle==="number"||handle){return handle}return task}else{return delegate.apply(window,args)}}}));clearNative=patchMethod(window,cancelName,(function(delegate){return function(self,args){var id=args[0];var task;if(typeof id==="number"){task=tasksByHandleId[id]}else{task=id&&id[taskSymbol];if(!task){task=id}}if(task&&typeof task.type==="string"){if(task.state!=="notScheduled"&&(task.cancelFn&&task.data.isPeriodic||task.runCount===0)){if(typeof id==="number"){delete tasksByHandleId[id]}else if(id){id[taskSymbol]=null}task.zone.cancelTask(task)}}else{delegate.apply(window,args)}}}))}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function patchCustomElements(_global,api){var _a=api.getGlobalObjects(),isBrowser=_a.isBrowser,isMix=_a.isMix;if(!isBrowser&&!isMix||!_global["customElements"]||!("customElements"in _global)){return}var callbacks=["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"];api.patchCallbacks(api,_global.customElements,"customElements","define",callbacks)}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */function eventTargetPatch(_global,api){if(Zone[api.symbol("patchEventTarget")]){return}var _a=api.getGlobalObjects(),eventNames=_a.eventNames,zoneSymbolEventNames=_a.zoneSymbolEventNames,TRUE_STR=_a.TRUE_STR,FALSE_STR=_a.FALSE_STR,ZONE_SYMBOL_PREFIX=_a.ZONE_SYMBOL_PREFIX;for(var i=0;i<eventNames.length;i++){var eventName=eventNames[i];var falseEventName=eventName+FALSE_STR;var trueEventName=eventName+TRUE_STR;var symbol=ZONE_SYMBOL_PREFIX+falseEventName;var symbolCapture=ZONE_SYMBOL_PREFIX+trueEventName;zoneSymbolEventNames[eventName]={};zoneSymbolEventNames[eventName][FALSE_STR]=symbol;zoneSymbolEventNames[eventName][TRUE_STR]=symbolCapture}var EVENT_TARGET=_global["EventTarget"];if(!EVENT_TARGET||!EVENT_TARGET.prototype){return}api.patchEventTarget(_global,[EVENT_TARGET&&EVENT_TARGET.prototype]);return true}function patchEvent(global,api){api.patchEventPrototype(global,api)}
/**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */Zone.__load_patch("legacy",(function(global){var legacyPatch=global[Zone.__symbol__("legacyPatch")];if(legacyPatch){legacyPatch()}}));Zone.__load_patch("queueMicrotask",(function(global,Zone,api){api.patchMethod(global,"queueMicrotask",(function(delegate){return function(self,args){Zone.current.scheduleMicroTask("queueMicrotask",args[0])}}))}));Zone.__load_patch("timers",(function(global){var set="set";var clear="clear";patchTimer(global,set,clear,"Timeout");patchTimer(global,set,clear,"Interval");patchTimer(global,set,clear,"Immediate")}));Zone.__load_patch("requestAnimationFrame",(function(global){patchTimer(global,"request","cancel","AnimationFrame");patchTimer(global,"mozRequest","mozCancel","AnimationFrame");patchTimer(global,"webkitRequest","webkitCancel","AnimationFrame")}));Zone.__load_patch("blocking",(function(global,Zone){var blockingMethods=["alert","prompt","confirm"];for(var i=0;i<blockingMethods.length;i++){var name_2=blockingMethods[i];patchMethod(global,name_2,(function(delegate,symbol,name){return function(s,args){return Zone.current.run(delegate,global,args,name)}}))}}));Zone.__load_patch("EventTarget",(function(global,Zone,api){patchEvent(global,api);eventTargetPatch(global,api);var XMLHttpRequestEventTarget=global["XMLHttpRequestEventTarget"];if(XMLHttpRequestEventTarget&&XMLHttpRequestEventTarget.prototype){api.patchEventTarget(global,[XMLHttpRequestEventTarget.prototype])}}));Zone.__load_patch("MutationObserver",(function(global,Zone,api){patchClass("MutationObserver");patchClass("WebKitMutationObserver")}));Zone.__load_patch("IntersectionObserver",(function(global,Zone,api){patchClass("IntersectionObserver")}));Zone.__load_patch("FileReader",(function(global,Zone,api){patchClass("FileReader")}));Zone.__load_patch("on_property",(function(global,Zone,api){propertyDescriptorPatch(api,global)}));Zone.__load_patch("customElements",(function(global,Zone,api){patchCustomElements(global,api)}));Zone.__load_patch("XHR",(function(global,Zone){patchXHR(global);var XHR_TASK=zoneSymbol("xhrTask");var XHR_SYNC=zoneSymbol("xhrSync");var XHR_LISTENER=zoneSymbol("xhrListener");var XHR_SCHEDULED=zoneSymbol("xhrScheduled");var XHR_URL=zoneSymbol("xhrURL");var XHR_ERROR_BEFORE_SCHEDULED=zoneSymbol("xhrErrorBeforeScheduled");function patchXHR(window){var XMLHttpRequest=window["XMLHttpRequest"];if(!XMLHttpRequest){return}var XMLHttpRequestPrototype=XMLHttpRequest.prototype;function findPendingTask(target){return target[XHR_TASK]}var oriAddListener=XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];var oriRemoveListener=XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];if(!oriAddListener){var XMLHttpRequestEventTarget_1=window["XMLHttpRequestEventTarget"];if(XMLHttpRequestEventTarget_1){var XMLHttpRequestEventTargetPrototype=XMLHttpRequestEventTarget_1.prototype;oriAddListener=XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];oriRemoveListener=XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER]}}var READY_STATE_CHANGE="readystatechange";var SCHEDULED="scheduled";function scheduleTask(task){var data=task.data;var target=data.target;target[XHR_SCHEDULED]=false;target[XHR_ERROR_BEFORE_SCHEDULED]=false;var listener=target[XHR_LISTENER];if(!oriAddListener){oriAddListener=target[ZONE_SYMBOL_ADD_EVENT_LISTENER];oriRemoveListener=target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER]}if(listener){oriRemoveListener.call(target,READY_STATE_CHANGE,listener)}var newListener=target[XHR_LISTENER]=function(){if(target.readyState===target.DONE){if(!data.aborted&&target[XHR_SCHEDULED]&&task.state===SCHEDULED){var loadTasks=target[Zone.__symbol__("loadfalse")];if(target.status!==0&&loadTasks&&loadTasks.length>0){var oriInvoke_1=task.invoke;task.invoke=function(){var loadTasks=target[Zone.__symbol__("loadfalse")];for(var i=0;i<loadTasks.length;i++){if(loadTasks[i]===task){loadTasks.splice(i,1)}}if(!data.aborted&&task.state===SCHEDULED){oriInvoke_1.call(task)}};loadTasks.push(task)}else{task.invoke()}}else if(!data.aborted&&target[XHR_SCHEDULED]===false){target[XHR_ERROR_BEFORE_SCHEDULED]=true}}};oriAddListener.call(target,READY_STATE_CHANGE,newListener);var storedTask=target[XHR_TASK];if(!storedTask){target[XHR_TASK]=task}sendNative.apply(target,data.args);target[XHR_SCHEDULED]=true;return task}function placeholderCallback(){}function clearTask(task){var data=task.data;data.aborted=true;return abortNative.apply(data.target,data.args)}var openNative=patchMethod(XMLHttpRequestPrototype,"open",(function(){return function(self,args){self[XHR_SYNC]=args[2]==false;self[XHR_URL]=args[1];return openNative.apply(self,args)}}));var XMLHTTPREQUEST_SOURCE="XMLHttpRequest.send";var fetchTaskAborting=zoneSymbol("fetchTaskAborting");var fetchTaskScheduling=zoneSymbol("fetchTaskScheduling");var sendNative=patchMethod(XMLHttpRequestPrototype,"send",(function(){return function(self,args){if(Zone.current[fetchTaskScheduling]===true){return sendNative.apply(self,args)}if(self[XHR_SYNC]){return sendNative.apply(self,args)}else{var options={target:self,url:self[XHR_URL],isPeriodic:false,args:args,aborted:false};var task=scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE,placeholderCallback,options,scheduleTask,clearTask);if(self&&self[XHR_ERROR_BEFORE_SCHEDULED]===true&&!options.aborted&&task.state===SCHEDULED){task.invoke()}}}}));var abortNative=patchMethod(XMLHttpRequestPrototype,"abort",(function(){return function(self,args){var task=findPendingTask(self);if(task&&typeof task.type=="string"){if(task.cancelFn==null||task.data&&task.data.aborted){return}task.zone.cancelTask(task)}else if(Zone.current[fetchTaskAborting]===true){return abortNative.apply(self,args)}}}))}}));Zone.__load_patch("geolocation",(function(global){if(global["navigator"]&&global["navigator"].geolocation){patchPrototype(global["navigator"].geolocation,["getCurrentPosition","watchPosition"])}}));Zone.__load_patch("PromiseRejectionEvent",(function(global,Zone){function findPromiseRejectionHandler(evtName){return function(e){var eventTasks=findEventTasks(global,evtName);eventTasks.forEach((function(eventTask){var PromiseRejectionEvent=global["PromiseRejectionEvent"];if(PromiseRejectionEvent){var evt=new PromiseRejectionEvent(evtName,{promise:e.promise,reason:e.rejection});eventTask.invoke(evt)}}))}}if(global["PromiseRejectionEvent"]){Zone[zoneSymbol("unhandledPromiseRejectionHandler")]=findPromiseRejectionHandler("unhandledrejection");Zone[zoneSymbol("rejectionHandledHandler")]=findPromiseRejectionHandler("rejectionhandled")}}))}))}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],679:[function(require,module,exports){module.exports={name:"@middleware.io/browser",version:"0.0.5",description:"",main:"index.js",scripts:{browserify:"./node_modules/.bin/browserify index.js > script/middleware-rum.js",minify:"./node_modules/.bin/terser script/middleware-rum.js -o script/middleware-rum.min.js",test:'echo "Error: no test specified" && exit 1'},author:"@middleware.io",license:"ISC",dependencies:{"@opentelemetry/api":"^1.3.0","@opentelemetry/api-metrics":"^0.33.0","@opentelemetry/context-zone":"^1.8.0","@opentelemetry/core":"^1.8.0","@opentelemetry/exporter-collector":"^0.25.0","@opentelemetry/exporter-metrics-otlp-http":"^0.36.1","@opentelemetry/exporter-prometheus":"^0.41.0","@opentelemetry/exporter-trace-otlp-http":"^0.34.0","@opentelemetry/instrumentation":"^0.34.0","@opentelemetry/instrumentation-fetch":"^0.34.0","@opentelemetry/instrumentation-user-interaction":"^0.32.1","@opentelemetry/instrumentation-xml-http-request":"^0.35.0","@opentelemetry/propagator-b3":"^1.8.0","@opentelemetry/resources":"^1.8.0","@opentelemetry/sdk-metrics":"^1.10.1","@opentelemetry/sdk-node":"^0.35.0","@opentelemetry/sdk-trace-base":"^1.8.0","@opentelemetry/sdk-trace-web":"^1.15.1","@opentelemetry/semantic-conventions":"^1.8.0","auto-instrumentations-web":"^0.0.2","instrumentation-document-load":"^0.0.4","middleware.io-instrumentation-xml-http-request":"^0.0.1",rrweb:"^2.0.0-alpha.4"},devDependencies:{"@opentelemetry/instrumentation-document-load":"^0.31.2","@opentelemetry/instrumentation-long-task":"^0.32.0",browserify:"^17.0.0",terser:"^5.26.0"}}},{}],680:[function(require,module,exports){const{diag:diag,DiagConsoleLogger:DiagConsoleLogger,DiagLogLevel:DiagLogLevel}=require("@opentelemetry/api");const tracer=require("./tracing");const configDefault={accountKey:"",env:"prod",target:"",DEBUG:DiagLogLevel.NONE,projectName:window.location.host,serviceName:"web-app",recording:"1",defaultAttributes:{},ignoreUrls:[],tracePropagationTargets:[]};module.exports.init=(config={})=>{Object.keys(configDefault).forEach((key=>{configDefault[key]=config[key]?config[key]:configDefault[key]}));if(configDefault.target){configDefault.target=new URL(configDefault.target).origin}diag.setLogger(new DiagConsoleLogger,configDefault["DEBUG"]?DiagLogLevel.DEBUG:DiagLogLevel.NONE);tracer.init(configDefault);return configDefault};module.exports.setAttributes=(attributes={})=>{tracer.setAttributes(attributes)};module.exports.info=error=>{tracer.recordLog("info",error)};module.exports.warn=error=>{tracer.recordLog("warn",error)};module.exports.debug=error=>{tracer.recordLog("debug",error)};module.exports.error=error=>{tracer.recordLog("error",error)}},{"./tracing":686,"@opentelemetry/api":19}],681:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.DEFAULT_SERVICE_NAME=exports.HTTP_ACTION_TYPE=exports.XHR_IS_ROOT_SPAN=exports.ROOT_SPAN_HTTP_URL=exports.ROOT_SPAN_OPERATION=exports.INSTRUMENTED_EVENT_NAMES=exports.DEFAULT_USER_INTERACTION_ELEMENT_NAME_LIMIT=exports.BUFFER_TIMEOUT=exports.MAX_EXPORT_BATCH_SIZE=exports.BUFFER_MAX_SPANS=exports.UNKNOWN_SERVICE_NAME=void 0;exports.UNKNOWN_SERVICE_NAME="unknown";exports.BUFFER_MAX_SPANS=2048;exports.MAX_EXPORT_BATCH_SIZE=50;exports.BUFFER_TIMEOUT=2e3;exports.DEFAULT_USER_INTERACTION_ELEMENT_NAME_LIMIT=20;exports.INSTRUMENTED_EVENT_NAMES=["click","dblclick","submit","reset","pause","play","dragstart","dragend","drop"];exports.ROOT_SPAN_OPERATION="root_span.operation";exports.ROOT_SPAN_HTTP_URL="root_span.http.url";exports.XHR_IS_ROOT_SPAN="xhr.is_root_span";exports.HTTP_ACTION_TYPE="http.action_type";exports.DEFAULT_SERVICE_NAME="default.service.name"},{}],682:[function(require,module,exports){function track(newConfig={}){if(!newConfig.accountKey){return"accountKey is required"}else if(!newConfig.target){return"target is required"}else{require("./config").init(newConfig)}}module.exports.track=track;function setAttributes(attributes={}){if(typeof attributes==="object"&&Object.keys(attributes).length>0){require("./config").setAttributes(attributes)}else{console.error("Invalid attributes format. Please provide a non-empty object.")}}module.exports.setAttributes=setAttributes;var Middleware={};Middleware.track=track;Middleware.setAttributes=setAttributes;Middleware.info=(error="")=>{require("./config").info(error)};Middleware.warn=(error="")=>{require("./config").warn(error)};Middleware.debug=(error="")=>{require("./config").debug(error)};Middleware.error=(error="")=>{require("./config").error(error)};if(typeof window!=="undefined"){window.Middleware=Middleware}},{"./config":680}],683:[function(require,module,exports){"use strict";var __spreadArray=this&&this.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};Object.defineProperty(exports,"__esModule",{value:true});exports.LogsExporter=void 0;var Resource=require("@opentelemetry/resources").Resource;var _a=require("../package.json"),name=_a.name,version=_a.version;var _b=require("@opentelemetry/core"),hrTime=_b.hrTime,hrTimeToNanoseconds=_b.hrTimeToNanoseconds;var _c=require("@opentelemetry/api"),api=_c,Attributes=_c.Attributes;var protoValue=function(value){switch(typeof value){case"number":if(Number.isInteger(value)){return{intValue:value}}return{doubleValue:value};case"boolean":return{boolValue:value};case"object":if(Array.isArray(value)){return{arrayValue:{values:value.map((function(item){return protoValue(item)}))}}}if(value!=null){return{kvlistValue:{values:Object.entries(value).map((function(_a){var key=_a[0],keyValue=_a[1];return protoAttribute(key,keyValue)}))}}}default:return{stringValue:String(value)}}};var sendData=function(url,json){var blob=new Blob([json],{type:"application/json"});fetch(url,{method:"POST",headers:{"Content-Type":"application/json"},body:json})};var protoAttribute=function(key,value){return{key:key,value:protoValue(value)}};var protoAttributes=function(object={}){return Object.entries(object).map((function(_a){var key=_a[0],value=_a[1];return protoAttribute(key,value)}))};var LogsExporter=function(){function LogsExporter(_a){var resource=_a.resource,collectorUrl=_a.collectorUrl,attributes=_a.attributes,maxQueueSize=_a.maxQueueSize,scheduledDelayMillis=_a.scheduledDelayMillis,serviceName=_a.serviceName,projectName=_a.projectName;this.resource=resource;this.collectorUrl=collectorUrl;this.defaultAttributes=attributes;this.maxQueueSize=maxQueueSize;this.scheduledDelayMillis=scheduledDelayMillis;this.logs=[];this.projectName=projectName;this.serviceName=serviceName}LogsExporter.prototype.recordLog=function(log){let tracer=_c.trace.getTracer("error-trace");let span=tracer.startSpan(log.message);var _this=this;var attributes=__spreadArray(__spreadArray([],protoAttributes(this.defaultAttributes),true),[protoAttribute("type",log.type),protoAttribute("http.url",location.href),protoAttribute("level","error"),protoAttribute("project.name",this.projectName),protoAttribute("service.name",this.serviceName),protoAttribute("browser.trace",true)],false);span.setAttribute("type",log.type);span.setAttribute("http.url",location.href);span.setAttribute("level","error");span.setAttribute("project.name",this.projectName);span.setAttribute("service.name",this.serviceName);span.setAttribute("browser.trace",true);span.setAttribute("event.type","error");span.setStatus({code:api.SpanStatusCode.ERROR,message:String(log.message)});span.recordException(log.message);if(log.element){attributes.push(protoAttribute("element.xpath",log.element.xpath));span.setAttribute("element.xpath",log.element.xpath)}if(log.error){attributes.push(protoAttribute("error.name",log.error.name));attributes.push(protoAttribute("error.message",log.error.message));span.setAttribute("error.name",log.error.name);span.setAttribute("error.message",log.error.message);if(log.error.stack){attributes.push(protoAttribute("error.stack",log.error.stack));span.setAttribute("error.stack",log.error.stack)}}if(log.arguments){attributes.push(protoAttribute("arguments",log.arguments));span.setAttribute("arguments",log.arguments)}if(log.attributes){Object.entries(log.attributes).forEach((function(_a){let key=_a[0],value=_a[1];attributes.push(protoAttribute(key,value));span.setAttribute(key,value)}))}this.logs.push({observedTimeUnixNano:hrTimeToNanoseconds(hrTime()),body:{stringValue:log.message},attributes:attributes,droppedAttributesCount:0,traceId:span===null||span===void 0?"":span.spanContext().traceId,spanId:span===null||span===void 0?"":span.spanContext().spanId});if(this.logs.length>=this.maxQueueSize){this.export()}else if(this.timer===undefined){this.timer=Number(setTimeout((function(){return _this.export()}),this.scheduledDelayMillis))}span.end()};LogsExporter.prototype.export=function(){clearTimeout(this.timer);this.timer=undefined;var logs=this.logs;if(!logs.length)return;this.logs=[];var json=JSON.stringify({resourceLogs:[{resource:{attributes:protoAttributes(this.resource.attributes)},scopeLogs:[{instrumentationLibrary:{name:name,version:version},logRecords:logs}],schemaUrl:"https://opentelemetry.io/schemas/1.6.1"}]});sendData(this.collectorUrl,json)};return LogsExporter}();exports.LogsExporter=LogsExporter},{"../package.json":679,"@opentelemetry/api":19,"@opentelemetry/core":63,"@opentelemetry/resources":298}],684:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.LogsInstrumentation=void 0;var getElementXPath=require("@opentelemetry/sdk-trace-web").getElementXPath;var _a=require("../packages/logs-exporter"),LogRecord=_a.LogRecord,LogsExporter=_a.LogsExporter;var MAX_CONSOLE_STRING_LENGTH=500;var MAX_STACK_TRACE_LENGTH=5e3;var shortenString=function(string,limit){return string.length>limit?"".concat(string.slice(0,limit),"..."):string};var maybeErrorToObject=function(maybeError){return maybeError instanceof Error?{name:maybeError.name,message:maybeError.message,stack:maybeError.stack?shortenString(maybeError.stack,MAX_STACK_TRACE_LENGTH):undefined}:undefined};var consoleValueToString=function(value,deep){if(deep===void 0){deep=0}if(typeof value==="string"){var string=shortenString(value,MAX_CONSOLE_STRING_LENGTH);return deep>0?'"'.concat(string,'"'):string}if(Array.isArray(value)){if(deep>0){return"..."}return"[".concat(value.map((function(elem){return consoleValueToString(elem,deep+1)})).join(", "),"]")}if(value instanceof Error){return consoleValueToString({name:value.name,message:value.message},deep)}if(value!=null&&typeof value==="object"){if(deep>0){return"..."}return"{ ".concat(Object.getOwnPropertyNames(value).map((function(key){return"".concat(key,": ").concat(consoleValueToString(value[key],deep+1))})).join(", ")," }")}return String(value)};var consoleValueToArgument=function(value,usedReferences){if(usedReferences===void 0){usedReferences=new Set}var addedToUsedReferences=!usedReferences.has(value);usedReferences.add(value);if(Array.isArray(value)){return value.map((function(elem){return consoleValueToArgument(elem,usedReferences)}))}if(value!=null&&typeof value==="object"){var result_1={};Object.getOwnPropertyNames(value).forEach((function(key){var keyValue=value[key];result_1[key]=usedReferences.has(keyValue)&&(keyValue!==value||addedToUsedReferences)?"[Circular]":consoleValueToArgument(keyValue)}));return result_1}return value};var LogsInstrumentation=function(){function LogsInstrumentation(_a){var _this=this;var exporter=_a.exporter;this.isEnabled=false;this.onError=function(error){_this.exporter.recordLog({type:"uncaughtException",message:error.message,error:maybeErrorToObject(error.error)})};this.onUnhandledRejection=function(_a){var reason=_a.reason;if(!reason)return;var error=maybeErrorToObject(reason);_this.exporter.recordLog({type:"unhandledRejection",message:error?"Unhandled rejection ".concat(reason):String(reason),error:error})};this.onDocumentError=function(_a){var target=_a.target;if(!target)return;var xpath=getElementXPath(target);if(!xpath)return;_this.exporter.recordLog({type:"documentError",message:"Uncaught error in element ".concat(target.currentSrc?target.currentSrc:xpath),element:{xpath:xpath}})};this.onConsoleError=function(args){var error=args.find(maybeErrorToObject);var consoleArguments=args.length>3||args.find((function(elem){return elem!=null&&typeof elem==="object"&&!(elem instanceof Error)}))?args.map((function(arg){return consoleValueToArgument(arg)})):undefined;_this.exporter.recordLog({type:"consoleError",message:args.map((function(elem){return consoleValueToString(elem)})).join(" "),arguments:consoleArguments,error:error})};this.exporter=exporter;var nativeConsoleError=console.error;console.error=function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i]}if(_this.isEnabled){_this.onConsoleError(args)}nativeConsoleError.apply(console,args)}}LogsInstrumentation.prototype.enable=function(){this.disable();window.addEventListener("error",this.onError);window.addEventListener("unhandledrejection",this.onUnhandledRejection);document.documentElement.addEventListener("error",this.onDocumentError,{capture:true});this.isEnabled=true};LogsInstrumentation.prototype.disable=function(){window.removeEventListener("error",this.onError);window.removeEventListener("unhandledrejection",this.onUnhandledRejection);document.documentElement.removeEventListener("error",this.onDocumentError,{capture:true});this.isEnabled=false};return LogsInstrumentation}();exports.LogsInstrumentation=LogsInstrumentation;exports.maybeErrorToObject=maybeErrorToObject},{"../packages/logs-exporter":683,"@opentelemetry/sdk-trace-web":442}],685:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var rrweb=function(ee){"use strict";var D;(function(t){t[t.Document=0]="Document",t[t.DocumentType=1]="DocumentType",t[t.Element=2]="Element",t[t.Text=3]="Text",t[t.CDATA=4]="CDATA",t[t.Comment=5]="Comment"})(D||(D={}));function Tt(t){return t.nodeType===t.ELEMENT_NODE}function Oe(t){var e=t?.host;return Boolean(e?.shadowRoot===t)}function Le(t){return Object.prototype.toString.call(t)==="[object ShadowRoot]"}function Kn(t){return t.includes(" background-clip: text;")&&!t.includes(" -webkit-background-clip: text;")&&(t=t.replace(" background-clip: text;"," -webkit-background-clip: text; background-clip: text;")),t}function Je(t){try{var e=t.rules||t.cssRules;return e?Kn(Array.from(e).map(Mt).join("")):null}catch{return null}}function Mt(t){var e=t.cssText;if(Qn(t))try{e=Je(t.styleSheet)||e}catch{}return e}function Qn(t){return"styleSheet"in t}var qe=function(){function t(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}return t.prototype.getId=function(e){var n;if(!e)return-1;var r=(n=this.getMeta(e))===null||n===void 0?void 0:n.id;return r??-1},t.prototype.getNode=function(e){return this.idNodeMap.get(e)||null},t.prototype.getIds=function(){return Array.from(this.idNodeMap.keys())},t.prototype.getMeta=function(e){return this.nodeMetaMap.get(e)||null},t.prototype.removeNodeFromMap=function(e){var n=this,r=this.getId(e);this.idNodeMap.delete(r),e.childNodes&&e.childNodes.forEach((function(o){return n.removeNodeFromMap(o)}))},t.prototype.has=function(e){return this.idNodeMap.has(e)},t.prototype.hasNode=function(e){return this.nodeMetaMap.has(e)},t.prototype.add=function(e,n){var r=n.id;this.idNodeMap.set(r,e),this.nodeMetaMap.set(e,n)},t.prototype.replace=function(e,n){var r=this.getNode(e);if(r){var o=this.nodeMetaMap.get(r);o&&this.nodeMetaMap.set(n,o)}this.idNodeMap.set(e,n)},t.prototype.reset=function(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap},t}();function kt(){return new qe}function et(t){var e=t.maskInputOptions,n=t.tagName,r=t.type,o=t.value,a=t.maskInputFn,s=o||"";return(e[n.toLowerCase()]||e[r])&&(a?s=a(s):s="*".repeat(s.length)),s}var Dt="__rrweb_original__";function Jn(t){var e=t.getContext("2d");if(!e)return!0;for(var n=50,r=0;r<t.width;r+=n)for(var o=0;o<t.height;o+=n){var a=e.getImageData,s=Dt in a?a[Dt]:a,i=new Uint32Array(s.call(e,r,o,Math.min(n,t.width-r),Math.min(n,t.height-o)).data.buffer);if(i.some((function(l){return l!==0})))return!1}return!0}var qn=1,er=new RegExp("[^a-z0-9-_:]"),Ae=-2;function Rt(){return qn++}function tr(t){if(t instanceof HTMLFormElement)return"form";var e=t.tagName.toLowerCase().trim();return er.test(e)?"div":e}function nr(t){return t.cssRules?Array.from(t.cssRules).map((function(e){return e.cssText||""})).join(""):""}function rr(t){var e="";return t.indexOf("//")>-1?e=t.split("/").slice(0,3).join("/"):e=t.split("/")[0],e=e.split("?")[0],e}var we,xt,or=/url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,sr=/^(?!www\.|(?:http|ftp)s?:\/\/|[A-Za-z]:\\|\/\/|#).*/,ir=/^(data:)([^,]*),(.*)/i;function Ve(t,e){return(t||"").replace(or,(function(n,r,o,a,s,i){var l=o||s||i,c=r||a||"";if(!l)return n;if(!sr.test(l)||ir.test(l))return"url(".concat(c).concat(l).concat(c,")");if(l[0]==="/")return"url(".concat(c).concat(rr(e)+l).concat(c,")");var u=e.split("/"),d=l.split("/");u.pop();for(var h=0,p=d;h<p.length;h++){var m=p[h];m!=="."&&(m===".."?u.pop():u.push(m))}return"url(".concat(c).concat(u.join("/")).concat(c,")")}))}var ar=/^[^ \t\n\r\u000c]+/,lr=/^[, \t\n\r\u000c]+/;function cr(t,e){if(e.trim()==="")return e;var n=0;function r(c){var u,d=c.exec(e.substring(n));return d?(u=d[0],n+=u.length,u):""}for(var o=[];r(lr),!(n>=e.length);){var a=r(ar);if(a.slice(-1)===",")a=Be(t,a.substring(0,a.length-1)),o.push(a);else{var s="";a=Be(t,a);for(var i=!1;;){var l=e.charAt(n);if(l===""){o.push((a+s).trim());break}else if(i)l===")"&&(i=!1);else if(l===","){n+=1,o.push((a+s).trim());break}else l==="("&&(i=!0);s+=l,n+=1}}}return o.join(", ")}function Be(t,e){if(!e||e.trim()==="")return e;var n=t.createElement("a");return n.href=e,n.href}function ur(t){return Boolean(t.tagName==="svg"||t.ownerSVGElement)}function tt(){var t=document.createElement("a");return t.href="",t.href}function Ot(t,e,n,r){return n==="src"||n==="href"&&r&&!(e==="use"&&r[0]==="#")||n==="xlink:href"&&r&&r[0]!=="#"||n==="background"&&r&&(e==="table"||e==="td"||e==="th")?Be(t,r):n==="srcset"&&r?cr(t,r):n==="style"&&r?Ve(r,tt()):e==="object"&&n==="data"&&r?Be(t,r):r}function dr(t,e,n){if(typeof e=="string"){if(t.classList.contains(e))return!0}else for(var r=t.classList.length;r--;){var o=t.classList[r];if(e.test(o))return!0}return n?t.matches(n):!1}function Ge(t,e,n){if(!t)return!1;if(t.nodeType!==t.ELEMENT_NODE)return n?Ge(t.parentNode,e,n):!1;for(var r=t.classList.length;r--;){var o=t.classList[r];if(e.test(o))return!0}return n?Ge(t.parentNode,e,n):!1}function Lt(t,e,n){var r=t.nodeType===t.ELEMENT_NODE?t:t.parentElement;if(r===null)return!1;if(typeof e=="string"){if(r.classList.contains(e)||r.closest(".".concat(e)))return!0}else if(Ge(r,e,!0))return!0;return!!(n&&(r.matches(n)||r.closest(n)))}function hr(t,e,n){var r=t.contentWindow;if(r){var o=!1,a;try{a=r.document.readyState}catch{return}if(a!=="complete"){var s=setTimeout((function(){o||(e(),o=!0)}),n);t.addEventListener("load",(function(){clearTimeout(s),o=!0,e()}));return}var i="about:blank";if(r.location.href!==i||t.src===i||t.src==="")return setTimeout(e,0),t.addEventListener("load",e);t.addEventListener("load",e)}}function pr(t,e,n){var r=!1,o;try{o=t.sheet}catch{return}if(!o){var a=setTimeout((function(){r||(e(),r=!0)}),n);t.addEventListener("load",(function(){clearTimeout(a),r=!0,e()}))}}function mr(t,e){var n=e.doc,r=e.mirror,o=e.blockClass,a=e.blockSelector,s=e.maskTextClass,i=e.maskTextSelector,l=e.inlineStylesheet,c=e.maskInputOptions,u=c===void 0?{}:c,d=e.maskTextFn,h=e.maskInputFn,p=e.dataURLOptions,m=p===void 0?{}:p,b=e.inlineImages,S=e.recordCanvas,f=e.keepIframeSrcFn,y=e.newlyAddedElement,g=y===void 0?!1:y,E=fr(n,r);switch(t.nodeType){case t.DOCUMENT_NODE:return t.compatMode!=="CSS1Compat"?{type:D.Document,childNodes:[],compatMode:t.compatMode}:{type:D.Document,childNodes:[]};case t.DOCUMENT_TYPE_NODE:return{type:D.DocumentType,name:t.name,publicId:t.publicId,systemId:t.systemId,rootId:E};case t.ELEMENT_NODE:return gr(t,{doc:n,blockClass:o,blockSelector:a,inlineStylesheet:l,maskInputOptions:u,maskInputFn:h,dataURLOptions:m,inlineImages:b,recordCanvas:S,keepIframeSrcFn:f,newlyAddedElement:g,rootId:E});case t.TEXT_NODE:return yr(t,{maskTextClass:s,maskTextSelector:i,maskTextFn:d,rootId:E});case t.CDATA_SECTION_NODE:return{type:D.CDATA,textContent:"",rootId:E};case t.COMMENT_NODE:return{type:D.Comment,textContent:t.textContent||"",rootId:E};default:return!1}}function fr(t,e){if(e.hasNode(t)){var n=e.getId(t);return n===1?void 0:n}}function yr(t,e){var n,r=e.maskTextClass,o=e.maskTextSelector,a=e.maskTextFn,s=e.rootId,i=t.parentNode&&t.parentNode.tagName,l=t.textContent,c=i==="STYLE"?!0:void 0,u=i==="SCRIPT"?!0:void 0;if(c&&l){try{t.nextSibling||t.previousSibling||!((n=t.parentNode.sheet)===null||n===void 0)&&n.cssRules&&(l=nr(t.parentNode.sheet))}catch(d){console.warn("Cannot get CSS styles from text's parentNode. Error: ".concat(d),t)}l=Ve(l,tt())}return u&&(l="SCRIPT_PLACEHOLDER"),!c&&!u&&l&&Lt(t,r,o)&&(l=a?a(l):l.replace(/[\S]/g,"*")),{type:D.Text,textContent:l||"",isStyle:c,rootId:s}}function gr(t,e){for(var n=e.doc,r=e.blockClass,o=e.blockSelector,a=e.inlineStylesheet,s=e.maskInputOptions,i=s===void 0?{}:s,l=e.maskInputFn,c=e.dataURLOptions,u=c===void 0?{}:c,d=e.inlineImages,h=e.recordCanvas,p=e.keepIframeSrcFn,m=e.newlyAddedElement,b=m===void 0?!1:m,S=e.rootId,f=dr(t,r,o),y=tr(t),g={},E=t.attributes.length,k=0;k<E;k++){var x=t.attributes[k];g[x.name]=Ot(n,y,x.name,x.value)}if(y==="link"&&a){var F=Array.from(n.styleSheets).find((function(v){return v.href===t.href})),_=null;F&&(_=Je(F)),_&&(delete g.rel,delete g.href,g._cssText=Ve(_,F.href))}if(y==="style"&&t.sheet&&!(t.innerText||t.textContent||"").trim().length){var _=Je(t.sheet);_&&(g._cssText=Ve(_,tt()))}if(y==="input"||y==="textarea"||y==="select"){var J=t.value,Y=t.checked;g.type!=="radio"&&g.type!=="checkbox"&&g.type!=="submit"&&g.type!=="button"&&J?g.value=et({type:g.type,tagName:y,value:J,maskInputOptions:i,maskInputFn:l}):Y&&(g.checked=Y)}if(y==="option"&&(t.selected&&!i.select?g.selected=!0:delete g.selected),y==="canvas"&&h){if(t.__context==="2d")Jn(t)||(g.rr_dataURL=t.toDataURL(u.type,u.quality));else if(!("__context"in t)){var q=t.toDataURL(u.type,u.quality),z=document.createElement("canvas");z.width=t.width,z.height=t.height;var X=z.toDataURL(u.type,u.quality);q!==X&&(g.rr_dataURL=q)}}if(y==="img"&&d){we||(we=n.createElement("canvas"),xt=we.getContext("2d"));var $=t,Z=$.crossOrigin;$.crossOrigin="anonymous";var H=function(){try{we.width=$.naturalWidth,we.height=$.naturalHeight,xt.drawImage($,0,0),g.rr_dataURL=we.toDataURL(u.type,u.quality)}catch(v){console.warn("Cannot inline img src=".concat($.currentSrc,"! Error: ").concat(v))}Z?g.crossOrigin=Z:$.removeAttribute("crossorigin")};$.complete&&$.naturalWidth!==0?H():$.onload=H}if((y==="audio"||y==="video")&&(g.rr_mediaState=t.paused?"paused":"played",g.rr_mediaCurrentTime=t.currentTime),b||(t.scrollLeft&&(g.rr_scrollLeft=t.scrollLeft),t.scrollTop&&(g.rr_scrollTop=t.scrollTop)),f){var L=t.getBoundingClientRect(),te=L.width,w=L.height;g={class:g.class,rr_width:"".concat(te,"px"),rr_height:"".concat(w,"px")}}return y==="iframe"&&!p(g.src)&&(t.contentDocument||(g.rr_src=g.src),delete g.src),{type:D.Element,tagName:y,attributes:g,childNodes:[],isSVG:ur(t)||void 0,needBlock:f,rootId:S}}function P(t){return t===void 0?"":t.toLowerCase()}function vr(t,e){return!!(e.comment&&t.type===D.Comment||t.type===D.Element&&(e.script&&(t.tagName==="script"||t.tagName==="link"&&t.attributes.rel==="preload"&&t.attributes.as==="script"||t.tagName==="link"&&t.attributes.rel==="prefetch"&&typeof t.attributes.href=="string"&&t.attributes.href.endsWith(".js"))||e.headFavicon&&(t.tagName==="link"&&t.attributes.rel==="shortcut icon"||t.tagName==="meta"&&(P(t.attributes.name).match(/^msapplication-tile(image|color)$/)||P(t.attributes.name)==="application-name"||P(t.attributes.rel)==="icon"||P(t.attributes.rel)==="apple-touch-icon"||P(t.attributes.rel)==="shortcut icon"))||t.tagName==="meta"&&(e.headMetaDescKeywords&&P(t.attributes.name).match(/^description|keywords$/)||e.headMetaSocial&&(P(t.attributes.property).match(/^(og|twitter|fb):/)||P(t.attributes.name).match(/^(og|twitter):/)||P(t.attributes.name)==="pinterest")||e.headMetaRobots&&(P(t.attributes.name)==="robots"||P(t.attributes.name)==="googlebot"||P(t.attributes.name)==="bingbot")||e.headMetaHttpEquiv&&t.attributes["http-equiv"]!==void 0||e.headMetaAuthorship&&(P(t.attributes.name)==="author"||P(t.attributes.name)==="generator"||P(t.attributes.name)==="framework"||P(t.attributes.name)==="publisher"||P(t.attributes.name)==="progid"||P(t.attributes.property).match(/^article:/)||P(t.attributes.property).match(/^product:/))||e.headMetaVerification&&(P(t.attributes.name)==="google-site-verification"||P(t.attributes.name)==="yandex-verification"||P(t.attributes.name)==="csrf-token"||P(t.attributes.name)==="p:domain_verify"||P(t.attributes.name)==="verify-v1"||P(t.attributes.name)==="verification"||P(t.attributes.name)==="shopify-checkout-api-token"))))}function Ee(t,e){var n=e.doc,r=e.mirror,o=e.blockClass,a=e.blockSelector,s=e.maskTextClass,i=e.maskTextSelector,l=e.skipChild,c=l===void 0?!1:l,u=e.inlineStylesheet,d=u===void 0?!0:u,h=e.maskInputOptions,p=h===void 0?{}:h,m=e.maskTextFn,b=e.maskInputFn,S=e.slimDOMOptions,f=e.dataURLOptions,y=f===void 0?{}:f,g=e.inlineImages,E=g===void 0?!1:g,k=e.recordCanvas,x=k===void 0?!1:k,F=e.onSerialize,_=e.onIframeLoad,J=e.iframeLoadTimeout,Y=J===void 0?5e3:J,q=e.onStylesheetLoad,z=e.stylesheetLoadTimeout,X=z===void 0?5e3:z,$=e.keepIframeSrcFn,Z=$===void 0?function(){return!1}:$,H=e.newlyAddedElement,L=H===void 0?!1:H,te=e.preserveWhiteSpace,w=te===void 0?!0:te,v=mr(t,{doc:n,mirror:r,blockClass:o,blockSelector:a,maskTextClass:s,maskTextSelector:i,inlineStylesheet:d,maskInputOptions:p,maskTextFn:m,maskInputFn:b,dataURLOptions:y,inlineImages:E,recordCanvas:x,keepIframeSrcFn:Z,newlyAddedElement:L});if(!v)return console.warn(t,"not serialized"),null;var M;r.hasNode(t)?M=r.getId(t):vr(v,S)||!w&&v.type===D.Text&&!v.isStyle&&!v.textContent.replace(/^\s+|\s+$/gm,"").length?M=Ae:M=Rt();var T=Object.assign(v,{id:M});if(r.add(t,T),M===Ae)return null;F&&F(t);var W=!c;if(T.type===D.Element){W=W&&!T.needBlock,delete T.needBlock;var ne=t.shadowRoot;ne&&Le(ne)&&(T.isShadowHost=!0)}if((T.type===D.Document||T.type===D.Element)&&W){S.headWhitespace&&T.type===D.Element&&T.tagName==="head"&&(w=!1);for(var xe={doc:n,mirror:r,blockClass:o,blockSelector:a,maskTextClass:s,maskTextSelector:i,skipChild:c,inlineStylesheet:d,maskInputOptions:p,maskTextFn:m,maskInputFn:b,slimDOMOptions:S,dataURLOptions:y,inlineImages:E,recordCanvas:x,preserveWhiteSpace:w,onSerialize:F,onIframeLoad:_,iframeLoadTimeout:Y,onStylesheetLoad:q,stylesheetLoadTimeout:X,keepIframeSrcFn:Z},I=0,oe=Array.from(t.childNodes);I<oe.length;I++){var ae=oe[I],B=Ee(ae,xe);B&&T.childNodes.push(B)}if(Tt(t)&&t.shadowRoot)for(var ue=0,A=Array.from(t.shadowRoot.childNodes);ue<A.length;ue++){var ae=A[ue],B=Ee(ae,xe);B&&(Le(t.shadowRoot)&&(B.isShadow=!0),T.childNodes.push(B))}}return t.parentNode&&Oe(t.parentNode)&&Le(t.parentNode)&&(T.isShadow=!0),T.type===D.Element&&T.tagName==="iframe"&&hr(t,(function(){var ie=t.contentDocument;if(ie&&_){var Ue=Ee(ie,{doc:ie,mirror:r,blockClass:o,blockSelector:a,maskTextClass:s,maskTextSelector:i,skipChild:!1,inlineStylesheet:d,maskInputOptions:p,maskTextFn:m,maskInputFn:b,slimDOMOptions:S,dataURLOptions:y,inlineImages:E,recordCanvas:x,preserveWhiteSpace:w,onSerialize:F,onIframeLoad:_,iframeLoadTimeout:Y,onStylesheetLoad:q,stylesheetLoadTimeout:X,keepIframeSrcFn:Z});Ue&&_(t,Ue)}}),Y),T.type===D.Element&&T.tagName==="link"&&T.attributes.rel==="stylesheet"&&pr(t,(function(){if(q){var ie=Ee(t,{doc:n,mirror:r,blockClass:o,blockSelector:a,maskTextClass:s,maskTextSelector:i,skipChild:!1,inlineStylesheet:d,maskInputOptions:p,maskTextFn:m,maskInputFn:b,slimDOMOptions:S,dataURLOptions:y,inlineImages:E,recordCanvas:x,preserveWhiteSpace:w,onSerialize:F,onIframeLoad:_,iframeLoadTimeout:Y,onStylesheetLoad:q,stylesheetLoadTimeout:X,keepIframeSrcFn:Z});ie&&q(t,ie)}}),X),T}function Sr(t,e){var n=e||{},r=n.mirror,o=r===void 0?new qe:r,a=n.blockClass,s=a===void 0?"rr-block":a,i=n.blockSelector,l=i===void 0?null:i,c=n.maskTextClass,u=c===void 0?"rr-mask":c,d=n.maskTextSelector,h=d===void 0?null:d,p=n.inlineStylesheet,m=p===void 0?!0:p,b=n.inlineImages,S=b===void 0?!1:b,f=n.recordCanvas,y=f===void 0?!1:f,g=n.maskAllInputs,E=g===void 0?!1:g,k=n.maskTextFn,x=n.maskInputFn,F=n.slimDOM,_=F===void 0?!1:F,J=n.dataURLOptions,Y=n.preserveWhiteSpace,q=n.onSerialize,z=n.onIframeLoad,X=n.iframeLoadTimeout,$=n.onStylesheetLoad,Z=n.stylesheetLoadTimeout,H=n.keepIframeSrcFn,L=H===void 0?function(){return!1}:H,te=E===!0?{color:!0,date:!0,"datetime-local":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0,password:!0}:E===!1?{password:!0}:E,w=_===!0||_==="all"?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaDescKeywords:_==="all",headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaAuthorship:!0,headMetaVerification:!0}:_===!1?{}:_;return Ee(t,{doc:t,mirror:o,blockClass:s,blockSelector:l,maskTextClass:u,maskTextSelector:h,skipChild:!1,inlineStylesheet:m,maskInputOptions:te,maskTextFn:k,maskInputFn:x,slimDOMOptions:w,dataURLOptions:J,inlineImages:S,recordCanvas:y,preserveWhiteSpace:Y,onSerialize:q,onIframeLoad:z,iframeLoadTimeout:X,onStylesheetLoad:$,stylesheetLoadTimeout:Z,keepIframeSrcFn:L,newlyAddedElement:!1})}var At=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g;function br(t,e){e===void 0&&(e={});var n=1,r=1;function o(w){var v=w.match(/\n/g);v&&(n+=v.length);var M=w.lastIndexOf(`\n`);r=M===-1?r+w.length:w.length-M}function a(){var w={line:n,column:r};return function(v){return v.position=new s(w),m(),v}}var s=function(){function w(v){this.start=v,this.end={line:n,column:r},this.source=e.source}return w}();s.prototype.content=t;var i=[];function l(w){var v=new Error("".concat(e.source||"",":").concat(n,":").concat(r,": ").concat(w));if(v.reason=w,v.filename=e.source,v.line=n,v.column=r,v.source=t,e.silent)i.push(v);else throw v}function c(){var w=h();return{type:"stylesheet",stylesheet:{source:e.source,rules:w,parsingErrors:i}}}function u(){return p(/^{\s*/)}function d(){return p(/^}/)}function h(){var w,v=[];for(m(),b(v);t.length&&t.charAt(0)!=="}"&&(w=L()||te());)w!==!1&&(v.push(w),b(v));return v}function p(w){var v=w.exec(t);if(v){var M=v[0];return o(M),t=t.slice(M.length),v}}function m(){p(/^\s*/)}function b(w){w===void 0&&(w=[]);for(var v;v=S();)v!==!1&&w.push(v),v=S();return w}function S(){var w=a();if(!(t.charAt(0)!=="/"||t.charAt(1)!=="*")){for(var v=2;t.charAt(v)!==""&&(t.charAt(v)!=="*"||t.charAt(v+1)!=="/");)++v;if(v+=2,t.charAt(v-1)==="")return l("End of comment missing");var M=t.slice(2,v-2);return r+=2,o(M),t=t.slice(v),r+=2,w({type:"comment",comment:M})}}function f(){var w=p(/^([^{]+)/);if(w)return he(w[0]).replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*\/+/g,"").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g,(function(v){return v.replace(/,/g,"‌")})).split(/\s*(?![^(]*\)),\s*/).map((function(v){return v.replace(/\u200C/g,",")}))}function y(){var w=a(),v=p(/^(\*?[-#\/\*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);if(v){var M=he(v[0]);if(!p(/^:\s*/))return l("property missing ':'");var T=p(/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^\)]*?\)|[^};])+)/),W=w({type:"declaration",property:M.replace(At,""),value:T?he(T[0]).replace(At,""):""});return p(/^[;\s]*/),W}}function g(){var w=[];if(!u())return l("missing '{'");b(w);for(var v;v=y();)v!==!1&&(w.push(v),b(w)),v=y();return d()?w:l("missing '}'")}function E(){for(var w,v=[],M=a();w=p(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/);)v.push(w[1]),p(/^,\s*/);if(v.length)return M({type:"keyframe",values:v,declarations:g()})}function k(){var w=a(),v=p(/^@([-\w]+)?keyframes\s*/);if(v){var M=v[1];if(v=p(/^([-\w]+)\s*/),!v)return l("@keyframes missing name");var T=v[1];if(!u())return l("@keyframes missing '{'");for(var W,ne=b();W=E();)ne.push(W),ne=ne.concat(b());return d()?w({type:"keyframes",name:T,vendor:M,keyframes:ne}):l("@keyframes missing '}'")}}function x(){var w=a(),v=p(/^@supports *([^{]+)/);if(v){var M=he(v[1]);if(!u())return l("@supports missing '{'");var T=b().concat(h());return d()?w({type:"supports",supports:M,rules:T}):l("@supports missing '}'")}}function F(){var w=a(),v=p(/^@host\s*/);if(v){if(!u())return l("@host missing '{'");var M=b().concat(h());return d()?w({type:"host",rules:M}):l("@host missing '}'")}}function _(){var w=a(),v=p(/^@media *([^{]+)/);if(v){var M=he(v[1]);if(!u())return l("@media missing '{'");var T=b().concat(h());return d()?w({type:"media",media:M,rules:T}):l("@media missing '}'")}}function J(){var w=a(),v=p(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);if(v)return w({type:"custom-media",name:he(v[1]),media:he(v[2])})}function Y(){var w=a(),v=p(/^@page */);if(v){var M=f()||[];if(!u())return l("@page missing '{'");for(var T=b(),W;W=y();)T.push(W),T=T.concat(b());return d()?w({type:"page",selectors:M,declarations:T}):l("@page missing '}'")}}function q(){var w=a(),v=p(/^@([-\w]+)?document *([^{]+)/);if(v){var M=he(v[1]),T=he(v[2]);if(!u())return l("@document missing '{'");var W=b().concat(h());return d()?w({type:"document",document:T,vendor:M,rules:W}):l("@document missing '}'")}}function z(){var w=a(),v=p(/^@font-face\s*/);if(v){if(!u())return l("@font-face missing '{'");for(var M=b(),T;T=y();)M.push(T),M=M.concat(b());return d()?w({type:"font-face",declarations:M}):l("@font-face missing '}'")}}var X=H("import"),$=H("charset"),Z=H("namespace");function H(w){var v=new RegExp("^@"+w+"\\s*([^;]+);");return function(){var M=a(),T=p(v);if(T){var W={type:w};return W[w]=T[1].trim(),M(W)}}}function L(){if(t[0]==="@")return k()||_()||J()||x()||X()||$()||Z()||q()||Y()||F()||z()}function te(){var w=a(),v=f();return v?(b(),w({type:"rule",selectors:v,declarations:g()})):l("selector missing")}return nt(c())}function he(t){return t?t.replace(/^\s+|\s+$/g,""):""}function nt(t,e){for(var n=t&&typeof t.type=="string",r=n?t:e,o=0,a=Object.keys(t);o<a.length;o++){var s=a[o],i=t[s];Array.isArray(i)?i.forEach((function(l){nt(l,r)})):i&&typeof i=="object"&&nt(i,r)}return n&&Object.defineProperty(t,"parent",{configurable:!0,writable:!0,enumerable:!1,value:e||null}),t}var _t={script:"noscript",altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",fedropshadow:"feDropShadow",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient"};function wr(t){var e=_t[t.tagName]?_t[t.tagName]:t.tagName;return e==="link"&&t.attributes._cssText&&(e="style"),e}function Er(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}var Ft=/([^\\]):hover/,Nr=new RegExp(Ft.source,"g");function Pt(t,e){var n=e?.stylesWithHoverClass.get(t);if(n)return n;var r=br(t,{silent:!0});if(!r.stylesheet)return t;var o=[];if(r.stylesheet.rules.forEach((function(i){"selectors"in i&&(i.selectors||[]).forEach((function(l){Ft.test(l)&&o.push(l)}))})),o.length===0)return t;var a=new RegExp(o.filter((function(i,l){return o.indexOf(i)===l})).sort((function(i,l){return l.length-i.length})).map((function(i){return Er(i)})).join("|"),"g"),s=t.replace(a,(function(i){var l=i.replace(Nr,"$1.\\:hover");return"".concat(i,", ").concat(l)}));return e?.stylesWithHoverClass.set(t,s),s}function Wt(){var t=new Map;return{stylesWithHoverClass:t}}function Cr(t,e){var n=e.doc,r=e.hackCss,o=e.cache;switch(t.type){case D.Document:return n.implementation.createDocument(null,"",null);case D.DocumentType:return n.implementation.createDocumentType(t.name||"html",t.publicId,t.systemId);case D.Element:{var a=wr(t),s;t.isSVG?s=n.createElementNS("http://www.w3.org/2000/svg",a):s=n.createElement(a);var i={};for(var l in t.attributes)if(Object.prototype.hasOwnProperty.call(t.attributes,l)){var c=t.attributes[l];if(!(a==="option"&&l==="selected"&&c===!1)){if(c===!0&&(c=""),l.startsWith("rr_")){i[l]=c;continue}var u=a==="textarea"&&l==="value",d=a==="style"&&l==="_cssText";if(d&&r&&typeof c=="string"&&(c=Pt(c,o)),(u||d)&&typeof c=="string"){for(var h=n.createTextNode(c),p=0,m=Array.from(s.childNodes);p<m.length;p++){var b=m[p];b.nodeType===s.TEXT_NODE&&s.removeChild(b)}s.appendChild(h);continue}try{if(t.isSVG&&l==="xlink:href")s.setAttributeNS("http://www.w3.org/1999/xlink",l,c.toString());else if(l==="onload"||l==="onclick"||l.substring(0,7)==="onmouse")s.setAttribute("_"+l,c.toString());else if(a==="meta"&&t.attributes["http-equiv"]==="Content-Security-Policy"&&l==="content"){s.setAttribute("csp-content",c.toString());continue}else a==="link"&&t.attributes.rel==="preload"&&t.attributes.as==="script"||a==="link"&&t.attributes.rel==="prefetch"&&typeof t.attributes.href=="string"&&t.attributes.href.endsWith(".js")||(a==="img"&&t.attributes.srcset&&t.attributes.rr_dataURL?s.setAttribute("rrweb-original-srcset",t.attributes.srcset):s.setAttribute(l,c.toString()))}catch{}}}var S=function(y){var g=i[y];if(a==="canvas"&&y==="rr_dataURL"){var E=document.createElement("img");E.onload=function(){var x=s.getContext("2d");x&&x.drawImage(E,0,0,E.width,E.height)},E.src=g.toString(),s.RRNodeType&&(s.rr_dataURL=g.toString())}else if(a==="img"&&y==="rr_dataURL"){var k=s;k.currentSrc.startsWith("data:")||(k.setAttribute("rrweb-original-src",t.attributes.src),k.src=g.toString())}if(y==="rr_width")s.style.width=g.toString();else if(y==="rr_height")s.style.height=g.toString();else if(y==="rr_mediaCurrentTime"&&typeof g=="number")s.currentTime=g;else if(y==="rr_mediaState")switch(g){case"played":s.play().catch((function(x){return console.warn("media playback error",x)}));break;case"paused":s.pause();break}};for(var f in i)S(f);if(t.isShadowHost)if(!s.shadowRoot)s.attachShadow({mode:"open"});else for(;s.shadowRoot.firstChild;)s.shadowRoot.removeChild(s.shadowRoot.firstChild);return s}case D.Text:return n.createTextNode(t.isStyle&&r?Pt(t.textContent,o):t.textContent);case D.CDATA:return n.createCDATASection(t.textContent);case D.Comment:return n.createComment(t.textContent);default:return null}}function _e(t,e){var n=e.doc,r=e.mirror,o=e.skipChild,a=o===void 0?!1:o,s=e.hackCss,i=s===void 0?!0:s,l=e.afterAppend,c=e.cache,u=Cr(t,{doc:n,hackCss:i,cache:c});if(!u)return null;if(t.rootId&&r.getNode(t.rootId)!==n&&r.replace(t.rootId,n),t.type===D.Document&&(n.close(),n.open(),t.compatMode==="BackCompat"&&t.childNodes&&t.childNodes[0].type!==D.DocumentType&&(t.childNodes[0].type===D.Element&&"xmlns"in t.childNodes[0].attributes&&t.childNodes[0].attributes.xmlns==="http://www.w3.org/1999/xhtml"?n.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "">'):n.write('<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "">')),u=n),r.add(u,t),(t.type===D.Document||t.type===D.Element)&&!a)for(var d=0,h=t.childNodes;d<h.length;d++){var p=h[d],m=_e(p,{doc:n,mirror:r,skipChild:!1,hackCss:i,afterAppend:l,cache:c});if(!m){console.warn("Failed to rebuild",p);continue}p.isShadow&&Tt(u)&&u.shadowRoot?u.shadowRoot.appendChild(m):u.appendChild(m),l&&l(m,p.id)}return u}function Ir(t,e){function n(s){e(s)}for(var r=0,o=t.getIds();r<o.length;r++){var a=o[r];t.has(a)&&n(t.getNode(a))}}function Tr(t,e){var n=e.getMeta(t);if(n?.type===D.Element){var r=t;for(var o in n.attributes)if(Object.prototype.hasOwnProperty.call(n.attributes,o)&&o.startsWith("rr_")){var a=n.attributes[o];o==="rr_scrollLeft"&&(r.scrollLeft=a),o==="rr_scrollTop"&&(r.scrollTop=a)}}}function Mr(t,e){var n=e.doc,r=e.onVisit,o=e.hackCss,a=o===void 0?!0:o,s=e.afterAppend,i=e.cache,l=e.mirror,c=l===void 0?new qe:l,u=_e(t,{doc:n,mirror:c,skipChild:!1,hackCss:a,afterAppend:s,cache:i});return Ir(c,(function(d){r&&r(d),Tr(d,c)})),u}function K(t,e,n=document){const r={capture:!0,passive:!0};return n.addEventListener(t,e,r),()=>n.removeEventListener(t,e,r)}const Ne=`Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.`;ee.mirror={map:{},getId(){return console.error(Ne),-1},getNode(){return console.error(Ne),null},removeNodeFromMap(){console.error(Ne)},has(){return console.error(Ne),!1},reset(){console.error(Ne)}},typeof window<"u"&&window.Proxy&&window.Reflect&&(ee.mirror=new Proxy(ee.mirror,{get(t,e,n){return e==="map"&&console.error(Ne),Reflect.get(t,e,n)}}));function Ce(t,e,n={}){let r=null,o=0;return function(...a){const s=Date.now();!o&&n.leading===!1&&(o=s);const i=e-(s-o),l=this;i<=0||i>e?(r&&(clearTimeout(r),r=null),o=s,t.apply(l,a)):!r&&n.trailing!==!1&&(r=setTimeout((()=>{o=n.leading===!1?0:Date.now(),r=null,t.apply(l,a)}),i))}}function Fe(t,e,n,r,o=window){const a=o.Object.getOwnPropertyDescriptor(t,e);return o.Object.defineProperty(t,e,r?n:{set(s){setTimeout((()=>{n.set.call(this,s)}),0),a&&a.set&&a.set.call(this,s)}}),()=>Fe(t,e,a||{},!0)}function ge(t,e,n){try{if(!(e in t))return()=>{};const r=t[e],o=n(r);return typeof o=="function"&&(o.prototype=o.prototype||{},Object.defineProperties(o,{__rrweb_original__:{enumerable:!1,value:r}})),t[e]=o,()=>{t[e]=r}}catch{return()=>{}}}function rt(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight}function ot(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth}function Q(t,e,n,r){if(!t)return!1;const o=t.nodeType===t.ELEMENT_NODE?t:t.parentElement;if(!o)return!1;if(typeof e=="string"){if(o.classList.contains(e)||r&&o.closest("."+e)!==null)return!0}else if(Ge(o,e,r))return!0;return!!(n&&(t.matches(n)||r&&o.closest(n)!==null))}function $t(t,e){return e.getId(t)!==-1}function je(t,e){return e.getId(t)===Ae}function st(t,e){if(Oe(t))return!1;const n=e.getId(t);return e.has(n)?t.parentNode&&t.parentNode.nodeType===t.DOCUMENT_NODE?!1:t.parentNode?st(t.parentNode,e):!0:!0}function it(t){return Boolean(t.changedTouches)}function at(t=window){"NodeList"in t&&!t.NodeList.prototype.forEach&&(t.NodeList.prototype.forEach=Array.prototype.forEach),"DOMTokenList"in t&&!t.DOMTokenList.prototype.forEach&&(t.DOMTokenList.prototype.forEach=Array.prototype.forEach),Node.prototype.contains||(Node.prototype.contains=(...e)=>{let n=e[0];if(!(0 in e))throw new TypeError("1 argument is required");do{if(this===n)return!0}while(n=n&&n.parentNode);return!1})}function Ut(t){const e={},n=(o,a)=>{const s={value:o,parent:a,children:[]};return e[o.node.id]=s,s},r=[];for(const o of t){const{nextId:a,parentId:s}=o;if(a&&a in e){const i=e[a];if(i.parent){const l=i.parent.children.indexOf(i);i.parent.children.splice(l,0,n(o,i.parent))}else{const l=r.indexOf(i);r.splice(l,0,n(o,null))}continue}if(s in e){const i=e[s];i.children.push(n(o,i));continue}r.push(n(o,null))}return r}function lt(t,e){e(t.value);for(let n=t.children.length-1;n>=0;n--)lt(t.children[n],e)}function Ie(t,e){return Boolean(t.nodeName==="IFRAME"&&e.getMeta(t))}function ct(t,e){return Boolean(t.nodeName==="LINK"&&t.nodeType===t.ELEMENT_NODE&&t.getAttribute&&t.getAttribute("rel")==="stylesheet"&&e.getMeta(t))}function ut(t,e){var n,r;const o=(r=(n=t.ownerDocument)==null?void 0:n.defaultView)==null?void 0:r.frameElement;if(!o||o===e)return{x:0,y:0,relativeScale:1,absoluteScale:1};const a=o.getBoundingClientRect(),s=ut(o,e),i=a.height/o.clientHeight;return{x:a.x*s.relativeScale+s.x,y:a.y*s.relativeScale+s.y,relativeScale:i,absoluteScale:s.absoluteScale*i}}function ve(t){return Boolean(t?.shadowRoot)}function Te(t,e){const n=t[e[0]];return e.length===1?n:Te(n.cssRules[e[1]].cssRules,e.slice(2))}function dt(t){const e=[...t],n=e.pop();return{positions:e,index:n}}function Vt(t){const e=new Set,n=[];for(let r=t.length;r--;){const o=t[r];e.has(o.id)||(n.push(o),e.add(o.id))}return n}class ht{constructor(){this.id=1,this.styleIDMap=new WeakMap,this.idStyleMap=new Map}getId(e){var n;return(n=this.styleIDMap.get(e))!=null?n:-1}has(e){return this.styleIDMap.has(e)}add(e,n){if(this.has(e))return this.getId(e);let r;return n===void 0?r=this.id++:r=n,this.styleIDMap.set(e,r),this.idStyleMap.set(r,e),r}getStyle(e){return this.idStyleMap.get(e)||null}reset(){this.styleIDMap=new WeakMap,this.idStyleMap=new Map,this.id=1}generateId(){return this.id++}}var kr=Object.freeze({__proto__:null,on:K,get _mirror(){return ee.mirror},throttle:Ce,hookSetter:Fe,patch:ge,getWindowHeight:rt,getWindowWidth:ot,isBlocked:Q,isSerialized:$t,isIgnored:je,isAncestorRemoved:st,isTouchEvent:it,polyfill:at,queueToResolveTrees:Ut,iterateResolveTree:lt,isSerializedIframe:Ie,isSerializedStylesheet:ct,getBaseDimension:ut,hasShadowRoot:ve,getNestedRule:Te,getPositionsAndIndex:dt,uniqueTextMutations:Vt,StyleSheetMirror:ht}),C=(t=>(t[t.DomContentLoaded=0]="DomContentLoaded",t[t.Load=1]="Load",t[t.FullSnapshot=2]="FullSnapshot",t[t.IncrementalSnapshot=3]="IncrementalSnapshot",t[t.Meta=4]="Meta",t[t.Custom=5]="Custom",t[t.Plugin=6]="Plugin",t))(C||{}),N=(t=>(t[t.Mutation=0]="Mutation",t[t.MouseMove=1]="MouseMove",t[t.MouseInteraction=2]="MouseInteraction",t[t.Scroll=3]="Scroll",t[t.ViewportResize=4]="ViewportResize",t[t.Input=5]="Input",t[t.TouchMove=6]="TouchMove",t[t.MediaInteraction=7]="MediaInteraction",t[t.StyleSheetRule=8]="StyleSheetRule",t[t.CanvasMutation=9]="CanvasMutation",t[t.Font=10]="Font",t[t.Log=11]="Log",t[t.Drag=12]="Drag",t[t.StyleDeclaration=13]="StyleDeclaration",t[t.Selection=14]="Selection",t[t.AdoptedStyleSheet=15]="AdoptedStyleSheet",t))(N||{}),j=(t=>(t[t.MouseUp=0]="MouseUp",t[t.MouseDown=1]="MouseDown",t[t.Click=2]="Click",t[t.ContextMenu=3]="ContextMenu",t[t.DblClick=4]="DblClick",t[t.Focus=5]="Focus",t[t.Blur=6]="Blur",t[t.TouchStart=7]="TouchStart",t[t.TouchMove_Departed=8]="TouchMove_Departed",t[t.TouchEnd=9]="TouchEnd",t[t.TouchCancel=10]="TouchCancel",t))(j||{}),pe=(t=>(t[t["2D"]=0]="2D",t[t.WebGL=1]="WebGL",t[t.WebGL2=2]="WebGL2",t))(pe||{}),me=(t=>(t[t.Play=0]="Play",t[t.Pause=1]="Pause",t[t.Seeked=2]="Seeked",t[t.VolumeChange=3]="VolumeChange",t[t.RateChange=4]="RateChange",t))(me||{}),O=(t=>(t.Start="start",t.Pause="pause",t.Resume="resume",t.Resize="resize",t.Finish="finish",t.FullsnapshotRebuilded="fullsnapshot-rebuilded",t.LoadStylesheetStart="load-stylesheet-start",t.LoadStylesheetEnd="load-stylesheet-end",t.SkipStart="skip-start",t.SkipEnd="skip-end",t.MouseInteraction="mouse-interaction",t.EventCast="event-cast",t.CustomEvent="custom-event",t.Flush="flush",t.StateChange="state-change",t.PlayBack="play-back",t.Destroy="destroy",t))(O||{});function Bt(t){return"__ln"in t}class Dr{constructor(){this.length=0,this.head=null}get(e){if(e>=this.length)throw new Error("Position outside of list range");let n=this.head;for(let r=0;r<e;r++)n=n?.next||null;return n}addNode(e){const n={value:e,previous:null,next:null};if(e.__ln=n,e.previousSibling&&Bt(e.previousSibling)){const r=e.previousSibling.__ln.next;n.next=r,n.previous=e.previousSibling.__ln,e.previousSibling.__ln.next=n,r&&(r.previous=n)}else if(e.nextSibling&&Bt(e.nextSibling)&&e.nextSibling.__ln.previous){const r=e.nextSibling.__ln.previous;n.previous=r,n.next=e.nextSibling.__ln,e.nextSibling.__ln.previous=n,r&&(r.next=n)}else this.head&&(this.head.previous=n),n.next=this.head,this.head=n;this.length++}removeNode(e){const n=e.__ln;!this.head||(n.previous?(n.previous.next=n.next,n.next&&(n.next.previous=n.previous)):(this.head=n.next,this.head&&(this.head.previous=null)),e.__ln&&delete e.__ln,this.length--)}}const Gt=(t,e)=>`${t}@${e}`;class Rr{constructor(){this.frozen=!1,this.locked=!1,this.texts=[],this.attributes=[],this.removes=[],this.mapRemoves=[],this.movedMap={},this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.processMutations=e=>{e.forEach(this.processMutation),this.emit()},this.emit=()=>{if(this.frozen||this.locked)return;const e=[],n=new Dr,r=i=>{let l=i,c=Ae;for(;c===Ae;)l=l&&l.nextSibling,c=l&&this.mirror.getId(l);return c},o=i=>{var l,c,u,d;let h=null;((c=(l=i.getRootNode)==null?void 0:l.call(i))==null?void 0:c.nodeType)===Node.DOCUMENT_FRAGMENT_NODE&&i.getRootNode().host&&(h=i.getRootNode().host);let p=h;for(;((d=(u=p?.getRootNode)==null?void 0:u.call(p))==null?void 0:d.nodeType)===Node.DOCUMENT_FRAGMENT_NODE&&p.getRootNode().host;)p=p.getRootNode().host;const m=!this.doc.contains(i)&&(!p||!this.doc.contains(p));if(!i.parentNode||m)return;const b=Oe(i.parentNode)?this.mirror.getId(h):this.mirror.getId(i.parentNode),S=r(i);if(b===-1||S===-1)return n.addNode(i);const f=Ee(i,{doc:this.doc,mirror:this.mirror,blockClass:this.blockClass,blockSelector:this.blockSelector,maskTextClass:this.maskTextClass,maskTextSelector:this.maskTextSelector,skipChild:!0,newlyAddedElement:!0,inlineStylesheet:this.inlineStylesheet,maskInputOptions:this.maskInputOptions,maskTextFn:this.maskTextFn,maskInputFn:this.maskInputFn,slimDOMOptions:this.slimDOMOptions,dataURLOptions:this.dataURLOptions,recordCanvas:this.recordCanvas,inlineImages:this.inlineImages,onSerialize:y=>{Ie(y,this.mirror)&&this.iframeManager.addIframe(y),ct(y,this.mirror)&&this.stylesheetManager.trackLinkElement(y),ve(i)&&this.shadowDomManager.addShadowRoot(i.shadowRoot,this.doc)},onIframeLoad:(y,g)=>{this.iframeManager.attachIframe(y,g),this.shadowDomManager.observeAttachShadow(y)},onStylesheetLoad:(y,g)=>{this.stylesheetManager.attachLinkElement(y,g)}});f&&e.push({parentId:b,nextId:S,node:f})};for(;this.mapRemoves.length;)this.mirror.removeNodeFromMap(this.mapRemoves.shift());for(const i of Array.from(this.movedSet.values()))jt(this.removes,i,this.mirror)&&!this.movedSet.has(i.parentNode)||o(i);for(const i of Array.from(this.addedSet.values()))!Ht(this.droppedSet,i)&&!jt(this.removes,i,this.mirror)||Ht(this.movedSet,i)?o(i):this.droppedSet.add(i);let a=null;for(;n.length;){let i=null;if(a){const l=this.mirror.getId(a.value.parentNode),c=r(a.value);l!==-1&&c!==-1&&(i=a)}if(!i)for(let l=n.length-1;l>=0;l--){const c=n.get(l);if(c){const u=this.mirror.getId(c.value.parentNode);if(r(c.value)===-1)continue;if(u!==-1){i=c;break}else{const d=c.value;if(d.parentNode&&d.parentNode.nodeType===Node.DOCUMENT_FRAGMENT_NODE){const h=d.parentNode.host;if(this.mirror.getId(h)!==-1){i=c;break}}}}}if(!i){for(;n.head;)n.removeNode(n.head.value);break}a=i.previous,n.removeNode(i.value),o(i.value)}const s={texts:this.texts.map((i=>({id:this.mirror.getId(i.node),value:i.value}))).filter((i=>this.mirror.has(i.id))),attributes:this.attributes.map((i=>({id:this.mirror.getId(i.node),attributes:i.attributes}))).filter((i=>this.mirror.has(i.id))),removes:this.removes,adds:e};!s.texts.length&&!s.attributes.length&&!s.removes.length&&!s.adds.length||(this.texts=[],this.attributes=[],this.removes=[],this.addedSet=new Set,this.movedSet=new Set,this.droppedSet=new Set,this.movedMap={},this.mutationCb(s))},this.processMutation=e=>{if(!je(e.target,this.mirror))switch(e.type){case"characterData":{const n=e.target.textContent;!Q(e.target,this.blockClass,this.blockSelector,!1)&&n!==e.oldValue&&this.texts.push({value:Lt(e.target,this.maskTextClass,this.maskTextSelector)&&n?this.maskTextFn?this.maskTextFn(n):n.replace(/[\S]/g,"*"):n,node:e.target});break}case"attributes":{const n=e.target;let r=e.target.getAttribute(e.attributeName);if(e.attributeName==="value"&&(r=et({maskInputOptions:this.maskInputOptions,tagName:e.target.tagName,type:e.target.getAttribute("type"),value:r,maskInputFn:this.maskInputFn})),Q(e.target,this.blockClass,this.blockSelector,!1)||r===e.oldValue)return;let o=this.attributes.find((a=>a.node===e.target));if(n.tagName==="IFRAME"&&e.attributeName==="src"&&!this.keepIframeSrcFn(r))if(!n.contentDocument)e.attributeName="rr_src";else return;if(o||(o={node:e.target,attributes:{}},this.attributes.push(o)),e.attributeName==="style"){const a=this.doc.createElement("span");e.oldValue&&a.setAttribute("style",e.oldValue),(o.attributes.style===void 0||o.attributes.style===null)&&(o.attributes.style={});const s=o.attributes.style;for(const i of Array.from(n.style)){const l=n.style.getPropertyValue(i),c=n.style.getPropertyPriority(i);(l!==a.style.getPropertyValue(i)||c!==a.style.getPropertyPriority(i))&&(c===""?s[i]=l:s[i]=[l,c])}for(const i of Array.from(a.style))n.style.getPropertyValue(i)===""&&(s[i]=!1)}else o.attributes[e.attributeName]=Ot(this.doc,n.tagName,e.attributeName,r);break}case"childList":{if(Q(e.target,this.blockClass,this.blockSelector,!0))return;e.addedNodes.forEach((n=>this.genAdds(n,e.target))),e.removedNodes.forEach((n=>{const r=this.mirror.getId(n),o=Oe(e.target)?this.mirror.getId(e.target.host):this.mirror.getId(e.target);Q(e.target,this.blockClass,this.blockSelector,!1)||je(n,this.mirror)||!$t(n,this.mirror)||(this.addedSet.has(n)?(pt(this.addedSet,n),this.droppedSet.add(n)):this.addedSet.has(e.target)&&r===-1||st(e.target,this.mirror)||(this.movedSet.has(n)&&this.movedMap[Gt(r,o)]?pt(this.movedSet,n):this.removes.push({parentId:o,id:r,isShadow:Oe(e.target)&&Le(e.target)?!0:void 0})),this.mapRemoves.push(n))}));break}}},this.genAdds=(e,n)=>{if(this.mirror.hasNode(e)){if(je(e,this.mirror))return;this.movedSet.add(e);let r=null;n&&this.mirror.hasNode(n)&&(r=this.mirror.getId(n)),r&&r!==-1&&(this.movedMap[Gt(this.mirror.getId(e),r)]=!0)}else this.addedSet.add(e),this.droppedSet.delete(e);Q(e,this.blockClass,this.blockSelector,!1)||e.childNodes.forEach((r=>this.genAdds(r)))}}init(e){["mutationCb","blockClass","blockSelector","maskTextClass","maskTextSelector","inlineStylesheet","maskInputOptions","maskTextFn","maskInputFn","keepIframeSrcFn","recordCanvas","inlineImages","slimDOMOptions","dataURLOptions","doc","mirror","iframeManager","stylesheetManager","shadowDomManager","canvasManager"].forEach((n=>{this[n]=e[n]}))}freeze(){this.frozen=!0,this.canvasManager.freeze()}unfreeze(){this.frozen=!1,this.canvasManager.unfreeze(),this.emit()}isFrozen(){return this.frozen}lock(){this.locked=!0,this.canvasManager.lock()}unlock(){this.locked=!1,this.canvasManager.unlock(),this.emit()}reset(){this.shadowDomManager.reset(),this.canvasManager.reset()}}function pt(t,e){t.delete(e),e.childNodes.forEach((n=>pt(t,n)))}function jt(t,e,n){return t.length===0?!1:zt(t,e,n)}function zt(t,e,n){const{parentNode:r}=e;if(!r)return!1;const o=n.getId(r);return t.some((a=>a.id===o))?!0:zt(t,r,n)}function Ht(t,e){return t.size===0?!1:Yt(t,e)}function Yt(t,e){const{parentNode:n}=e;return n?t.has(n)?!0:Yt(t,n):!1}var xr=Object.defineProperty,Or=Object.defineProperties,Lr=Object.getOwnPropertyDescriptors,Xt=Object.getOwnPropertySymbols,Ar=Object.prototype.hasOwnProperty,_r=Object.prototype.propertyIsEnumerable,Zt=(t,e,n)=>e in t?xr(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Kt=(t,e)=>{for(var n in e||(e={}))Ar.call(e,n)&&Zt(t,n,e[n]);if(Xt)for(var n of Xt(e))_r.call(e,n)&&Zt(t,n,e[n]);return t},Fr=(t,e)=>Or(t,Lr(e));const Se=[],Qt=typeof CSSGroupingRule<"u",Jt=typeof CSSMediaRule<"u",qt=typeof CSSSupportsRule<"u",en=typeof CSSConditionRule<"u";function Pe(t){try{if("composedPath"in t){const e=t.composedPath();if(e.length)return e[0]}else if("path"in t&&t.path.length)return t.path[0];return t.target}catch{return t.target}}function tn(t,e){var n,r;const o=new Rr;Se.push(o),o.init(t);let a=window.MutationObserver||window.__rrMutationObserver;const s=(r=(n=window?.Zone)==null?void 0:n.__symbol__)==null?void 0:r.call(n,"MutationObserver");s&&window[s]&&(a=window[s]);const i=new a(o.processMutations.bind(o));return i.observe(e,{attributes:!0,attributeOldValue:!0,characterData:!0,characterDataOldValue:!0,childList:!0,subtree:!0}),i}function Pr({mousemoveCb:t,sampling:e,doc:n,mirror:r}){if(e.mousemove===!1)return()=>{};const o=typeof e.mousemove=="number"?e.mousemove:50,a=typeof e.mousemoveCallback=="number"?e.mousemoveCallback:500;let s=[],i;const l=Ce((d=>{const h=Date.now()-i;t(s.map((p=>(p.timeOffset-=h,p))),d),s=[],i=null}),a),c=Ce((d=>{const h=Pe(d),{clientX:p,clientY:m}=it(d)?d.changedTouches[0]:d;i||(i=Date.now()),s.push({x:p,y:m,id:r.getId(h),timeOffset:Date.now()-i}),l(typeof DragEvent<"u"&&d instanceof DragEvent?N.Drag:d instanceof MouseEvent?N.MouseMove:N.TouchMove)}),o,{trailing:!1}),u=[K("mousemove",c,n),K("touchmove",c,n),K("drag",c,n)];return()=>{u.forEach((d=>d()))}}function Wr({mouseInteractionCb:t,doc:e,mirror:n,blockClass:r,blockSelector:o,sampling:a}){if(a.mouseInteraction===!1)return()=>{};const s=a.mouseInteraction===!0||a.mouseInteraction===void 0?{}:a.mouseInteraction,i=[],l=c=>u=>{const d=Pe(u);if(Q(d,r,o,!0))return;const h=it(u)?u.changedTouches[0]:u;if(!h)return;const p=n.getId(d),{clientX:m,clientY:b}=h;t({type:j[c],id:p,x:m,y:b})};return Object.keys(j).filter((c=>Number.isNaN(Number(c))&&!c.endsWith("_Departed")&&s[c]!==!1)).forEach((c=>{const u=c.toLowerCase(),d=l(c);i.push(K(u,d,e))})),()=>{i.forEach((c=>c()))}}function nn({scrollCb:t,doc:e,mirror:n,blockClass:r,blockSelector:o,sampling:a}){const s=Ce((i=>{const l=Pe(i);if(!l||Q(l,r,o,!0))return;const c=n.getId(l);if(l===e){const u=e.scrollingElement||e.documentElement;t({id:c,x:u.scrollLeft,y:u.scrollTop})}else t({id:c,x:l.scrollLeft,y:l.scrollTop})}),a.scroll||100);return K("scroll",s,e)}function $r({viewportResizeCb:t}){let e=-1,n=-1;const r=Ce((()=>{const o=rt(),a=ot();(e!==o||n!==a)&&(t({width:Number(a),height:Number(o)}),e=o,n=a)}),200);return K("resize",r,window)}function rn(t,e){const n=Kt({},t);return e||delete n.userTriggered,n}const Ur=["INPUT","TEXTAREA","SELECT"],on=new WeakMap;function Vr({inputCb:t,doc:e,mirror:n,blockClass:r,blockSelector:o,ignoreClass:a,maskInputOptions:s,maskInputFn:i,sampling:l,userTriggeredOnInput:c}){function u(S){let f=Pe(S);const y=S.isTrusted;if(f&&f.tagName==="OPTION"&&(f=f.parentElement),!f||!f.tagName||Ur.indexOf(f.tagName)<0||Q(f,r,o,!0))return;const g=f.type;if(f.classList.contains(a))return;let E=f.value,k=!1;g==="radio"||g==="checkbox"?k=f.checked:(s[f.tagName.toLowerCase()]||s[g])&&(E=et({maskInputOptions:s,tagName:f.tagName,type:g,value:E,maskInputFn:i})),d(f,rn({text:E,isChecked:k,userTriggered:y},c));const x=f.name;g==="radio"&&x&&k&&e.querySelectorAll(`input[type="radio"][name="${x}"]`).forEach((F=>{F!==f&&d(F,rn({text:F.value,isChecked:!k,userTriggered:!1},c))}))}function d(S,f){const y=on.get(S);if(!y||y.text!==f.text||y.isChecked!==f.isChecked){on.set(S,f);const g=n.getId(S);t(Fr(Kt({},f),{id:g}))}}const h=(l.input==="last"?["change"]:["input","change"]).map((S=>K(S,u,e))),p=e.defaultView;if(!p)return()=>{h.forEach((S=>S()))};const m=p.Object.getOwnPropertyDescriptor(p.HTMLInputElement.prototype,"value"),b=[[p.HTMLInputElement.prototype,"value"],[p.HTMLInputElement.prototype,"checked"],[p.HTMLSelectElement.prototype,"value"],[p.HTMLTextAreaElement.prototype,"value"],[p.HTMLSelectElement.prototype,"selectedIndex"],[p.HTMLOptionElement.prototype,"selected"]];return m&&m.set&&h.push(...b.map((S=>Fe(S[0],S[1],{set(){u({target:this})}},!1,p)))),()=>{h.forEach((S=>S()))}}function ze(t){const e=[];function n(r,o){if(Qt&&r.parentRule instanceof CSSGroupingRule||Jt&&r.parentRule instanceof CSSMediaRule||qt&&r.parentRule instanceof CSSSupportsRule||en&&r.parentRule instanceof CSSConditionRule){const a=Array.from(r.parentRule.cssRules).indexOf(r);o.unshift(a)}else if(r.parentStyleSheet){const a=Array.from(r.parentStyleSheet.cssRules).indexOf(r);o.unshift(a)}return o}return n(t,e)}function fe(t,e,n){let r,o;return t?(t.ownerNode?r=e.getId(t.ownerNode):o=n.getId(t),{styleId:o,id:r}):{}}function Br({styleSheetRuleCb:t,mirror:e,stylesheetManager:n},{win:r}){const o=r.CSSStyleSheet.prototype.insertRule;r.CSSStyleSheet.prototype.insertRule=function(u,d){const{id:h,styleId:p}=fe(this,e,n.styleMirror);return(h&&h!==-1||p&&p!==-1)&&t({id:h,styleId:p,adds:[{rule:u,index:d}]}),o.apply(this,[u,d])};const a=r.CSSStyleSheet.prototype.deleteRule;r.CSSStyleSheet.prototype.deleteRule=function(u){const{id:d,styleId:h}=fe(this,e,n.styleMirror);return(d&&d!==-1||h&&h!==-1)&&t({id:d,styleId:h,removes:[{index:u}]}),a.apply(this,[u])};let s;r.CSSStyleSheet.prototype.replace&&(s=r.CSSStyleSheet.prototype.replace,r.CSSStyleSheet.prototype.replace=function(u){const{id:d,styleId:h}=fe(this,e,n.styleMirror);return(d&&d!==-1||h&&h!==-1)&&t({id:d,styleId:h,replace:u}),s.apply(this,[u])});let i;r.CSSStyleSheet.prototype.replaceSync&&(i=r.CSSStyleSheet.prototype.replaceSync,r.CSSStyleSheet.prototype.replaceSync=function(u){const{id:d,styleId:h}=fe(this,e,n.styleMirror);return(d&&d!==-1||h&&h!==-1)&&t({id:d,styleId:h,replaceSync:u}),i.apply(this,[u])});const l={};Qt?l.CSSGroupingRule=r.CSSGroupingRule:(Jt&&(l.CSSMediaRule=r.CSSMediaRule),en&&(l.CSSConditionRule=r.CSSConditionRule),qt&&(l.CSSSupportsRule=r.CSSSupportsRule));const c={};return Object.entries(l).forEach((([u,d])=>{c[u]={insertRule:d.prototype.insertRule,deleteRule:d.prototype.deleteRule},d.prototype.insertRule=function(h,p){const{id:m,styleId:b}=fe(this.parentStyleSheet,e,n.styleMirror);return(m&&m!==-1||b&&b!==-1)&&t({id:m,styleId:b,adds:[{rule:h,index:[...ze(this),p||0]}]}),c[u].insertRule.apply(this,[h,p])},d.prototype.deleteRule=function(h){const{id:p,styleId:m}=fe(this.parentStyleSheet,e,n.styleMirror);return(p&&p!==-1||m&&m!==-1)&&t({id:p,styleId:m,removes:[{index:[...ze(this),h]}]}),c[u].deleteRule.apply(this,[h])}})),()=>{r.CSSStyleSheet.prototype.insertRule=o,r.CSSStyleSheet.prototype.deleteRule=a,s&&(r.CSSStyleSheet.prototype.replace=s),i&&(r.CSSStyleSheet.prototype.replaceSync=i),Object.entries(l).forEach((([u,d])=>{d.prototype.insertRule=c[u].insertRule,d.prototype.deleteRule=c[u].deleteRule}))}}function sn({mirror:t,stylesheetManager:e},n){var r,o,a;let s=null;n.nodeName==="#document"?s=t.getId(n):s=t.getId(n.host);const i=n.nodeName==="#document"?(r=n.defaultView)==null?void 0:r.Document:(a=(o=n.ownerDocument)==null?void 0:o.defaultView)==null?void 0:a.ShadowRoot,l=Object.getOwnPropertyDescriptor(i?.prototype,"adoptedStyleSheets");return s===null||s===-1||!i||!l?()=>{}:(Object.defineProperty(n,"adoptedStyleSheets",{configurable:l.configurable,enumerable:l.enumerable,get(){var c;return(c=l.get)==null?void 0:c.call(this)},set(c){var u;const d=(u=l.set)==null?void 0:u.call(this,c);if(s!==null&&s!==-1)try{e.adoptStyleSheets(c,s)}catch{}return d}}),()=>{Object.defineProperty(n,"adoptedStyleSheets",{configurable:l.configurable,enumerable:l.enumerable,get:l.get,set:l.set})})}function Gr({styleDeclarationCb:t,mirror:e,ignoreCSSAttributes:n,stylesheetManager:r},{win:o}){const a=o.CSSStyleDeclaration.prototype.setProperty;o.CSSStyleDeclaration.prototype.setProperty=function(i,l,c){var u;if(n.has(i))return a.apply(this,[i,l,c]);const{id:d,styleId:h}=fe((u=this.parentRule)==null?void 0:u.parentStyleSheet,e,r.styleMirror);return(d&&d!==-1||h&&h!==-1)&&t({id:d,styleId:h,set:{property:i,value:l,priority:c},index:ze(this.parentRule)}),a.apply(this,[i,l,c])};const s=o.CSSStyleDeclaration.prototype.removeProperty;return o.CSSStyleDeclaration.prototype.removeProperty=function(i){var l;if(n.has(i))return s.apply(this,[i]);const{id:c,styleId:u}=fe((l=this.parentRule)==null?void 0:l.parentStyleSheet,e,r.styleMirror);return(c&&c!==-1||u&&u!==-1)&&t({id:c,styleId:u,remove:{property:i},index:ze(this.parentRule)}),s.apply(this,[i])},()=>{o.CSSStyleDeclaration.prototype.setProperty=a,o.CSSStyleDeclaration.prototype.removeProperty=s}}function jr({mediaInteractionCb:t,blockClass:e,blockSelector:n,mirror:r,sampling:o}){const a=i=>Ce((l=>{const c=Pe(l);if(!c||Q(c,e,n,!0))return;const{currentTime:u,volume:d,muted:h,playbackRate:p}=c;t({type:i,id:r.getId(c),currentTime:u,volume:d,muted:h,playbackRate:p})}),o.media||500),s=[K("play",a(me.Play)),K("pause",a(me.Pause)),K("seeked",a(me.Seeked)),K("volumechange",a(me.VolumeChange)),K("ratechange",a(me.RateChange))];return()=>{s.forEach((i=>i()))}}function zr({fontCb:t,doc:e}){const n=e.defaultView;if(!n)return()=>{};const r=[],o=new WeakMap,a=n.FontFace;n.FontFace=function(i,l,c){const u=new a(i,l,c);return o.set(u,{family:i,buffer:typeof l!="string",descriptors:c,fontSource:typeof l=="string"?l:JSON.stringify(Array.from(new Uint8Array(l)))}),u};const s=ge(e.fonts,"add",(function(i){return function(l){return setTimeout((()=>{const c=o.get(l);c&&(t(c),o.delete(l))}),0),i.apply(this,[l])}}));return r.push((()=>{n.FontFace=a})),r.push(s),()=>{r.forEach((i=>i()))}}function Hr(t){const{doc:e,mirror:n,blockClass:r,blockSelector:o,selectionCb:a}=t;let s=!0;const i=()=>{const l=e.getSelection();if(!l||s&&l?.isCollapsed)return;s=l.isCollapsed||!1;const c=[],u=l.rangeCount||0;for(let d=0;d<u;d++){const h=l.getRangeAt(d),{startContainer:p,startOffset:m,endContainer:b,endOffset:S}=h;Q(p,r,o,!0)||Q(b,r,o,!0)||c.push({start:n.getId(p),startOffset:m,end:n.getId(b),endOffset:S})}a({ranges:c})};return i(),K("selectionchange",i)}function Yr(t,e){const{mutationCb:n,mousemoveCb:r,mouseInteractionCb:o,scrollCb:a,viewportResizeCb:s,inputCb:i,mediaInteractionCb:l,styleSheetRuleCb:c,styleDeclarationCb:u,canvasMutationCb:d,fontCb:h,selectionCb:p}=t;t.mutationCb=(...m)=>{e.mutation&&e.mutation(...m),n(...m)},t.mousemoveCb=(...m)=>{e.mousemove&&e.mousemove(...m),r(...m)},t.mouseInteractionCb=(...m)=>{e.mouseInteraction&&e.mouseInteraction(...m),o(...m)},t.scrollCb=(...m)=>{e.scroll&&e.scroll(...m),a(...m)},t.viewportResizeCb=(...m)=>{e.viewportResize&&e.viewportResize(...m),s(...m)},t.inputCb=(...m)=>{e.input&&e.input(...m),i(...m)},t.mediaInteractionCb=(...m)=>{e.mediaInteaction&&e.mediaInteaction(...m),l(...m)},t.styleSheetRuleCb=(...m)=>{e.styleSheetRule&&e.styleSheetRule(...m),c(...m)},t.styleDeclarationCb=(...m)=>{e.styleDeclaration&&e.styleDeclaration(...m),u(...m)},t.canvasMutationCb=(...m)=>{e.canvasMutation&&e.canvasMutation(...m),d(...m)},t.fontCb=(...m)=>{e.font&&e.font(...m),h(...m)},t.selectionCb=(...m)=>{e.selection&&e.selection(...m),p(...m)}}function Xr(t,e={}){const n=t.doc.defaultView;if(!n)return()=>{};Yr(t,e);const r=tn(t,t.doc),o=Pr(t),a=Wr(t),s=nn(t),i=$r(t),l=Vr(t),c=jr(t),u=Br(t,{win:n}),d=sn(t,t.doc),h=Gr(t,{win:n}),p=t.collectFonts?zr(t):()=>{},m=Hr(t),b=[];for(const S of t.plugins)b.push(S.observer(S.callback,n,S.options));return()=>{Se.forEach((S=>S.reset())),r.disconnect(),o(),a(),s(),i(),l(),c(),u(),d(),h(),p(),m(),b.forEach((S=>S()))}}class an{constructor(e){this.generateIdFn=e,this.iframeIdToRemoteIdMap=new WeakMap,this.iframeRemoteIdToIdMap=new WeakMap}getId(e,n,r,o){const a=r||this.getIdToRemoteIdMap(e),s=o||this.getRemoteIdToIdMap(e);let i=a.get(n);return i||(i=this.generateIdFn(),a.set(n,i),s.set(i,n)),i}getIds(e,n){const r=this.getIdToRemoteIdMap(e),o=this.getRemoteIdToIdMap(e);return n.map((a=>this.getId(e,a,r,o)))}getRemoteId(e,n,r){const o=r||this.getRemoteIdToIdMap(e);return typeof n!="number"?n:o.get(n)||-1}getRemoteIds(e,n){const r=this.getRemoteIdToIdMap(e);return n.map((o=>this.getRemoteId(e,o,r)))}reset(e){if(!e){this.iframeIdToRemoteIdMap=new WeakMap,this.iframeRemoteIdToIdMap=new WeakMap;return}this.iframeIdToRemoteIdMap.delete(e),this.iframeRemoteIdToIdMap.delete(e)}getIdToRemoteIdMap(e){let n=this.iframeIdToRemoteIdMap.get(e);return n||(n=new Map,this.iframeIdToRemoteIdMap.set(e,n)),n}getRemoteIdToIdMap(e){let n=this.iframeRemoteIdToIdMap.get(e);return n||(n=new Map,this.iframeRemoteIdToIdMap.set(e,n)),n}}class Zr{constructor(e){this.iframes=new WeakMap,this.crossOriginIframeMap=new WeakMap,this.crossOriginIframeMirror=new an(Rt),this.mutationCb=e.mutationCb,this.wrappedEmit=e.wrappedEmit,this.stylesheetManager=e.stylesheetManager,this.recordCrossOriginIframes=e.recordCrossOriginIframes,this.crossOriginIframeStyleMirror=new an(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror)),this.mirror=e.mirror,this.recordCrossOriginIframes&&window.addEventListener("message",this.handleMessage.bind(this))}addIframe(e){this.iframes.set(e,!0),e.contentWindow&&this.crossOriginIframeMap.set(e.contentWindow,e)}addLoadListener(e){this.loadListener=e}attachIframe(e,n){var r;this.mutationCb({adds:[{parentId:this.mirror.getId(e),nextId:null,node:n}],removes:[],texts:[],attributes:[],isAttachIframe:!0}),(r=this.loadListener)==null||r.call(this,e),e.contentDocument&&e.contentDocument.adoptedStyleSheets&&e.contentDocument.adoptedStyleSheets.length>0&&this.stylesheetManager.adoptStyleSheets(e.contentDocument.adoptedStyleSheets,this.mirror.getId(e.contentDocument))}handleMessage(e){if(e.data.type==="rrweb"){if(!e.source)return;const n=this.crossOriginIframeMap.get(e.source);if(!n)return;const r=this.transformCrossOriginEvent(n,e.data.event);r&&this.wrappedEmit(r,e.data.isCheckout)}}transformCrossOriginEvent(e,n){var r;switch(n.type){case C.FullSnapshot:return this.crossOriginIframeMirror.reset(e),this.crossOriginIframeStyleMirror.reset(e),this.replaceIdOnNode(n.data.node,e),{timestamp:n.timestamp,type:C.IncrementalSnapshot,data:{source:N.Mutation,adds:[{parentId:this.mirror.getId(e),nextId:null,node:n.data.node}],removes:[],texts:[],attributes:[],isAttachIframe:!0}};case C.Meta:case C.Load:case C.DomContentLoaded:return!1;case C.Plugin:return n;case C.Custom:return this.replaceIds(n.data.payload,e,["id","parentId","previousId","nextId"]),n;case C.IncrementalSnapshot:switch(n.data.source){case N.Mutation:return n.data.adds.forEach((o=>{this.replaceIds(o,e,["parentId","nextId","previousId"]),this.replaceIdOnNode(o.node,e)})),n.data.removes.forEach((o=>{this.replaceIds(o,e,["parentId","id"])})),n.data.attributes.forEach((o=>{this.replaceIds(o,e,["id"])})),n.data.texts.forEach((o=>{this.replaceIds(o,e,["id"])})),n;case N.Drag:case N.TouchMove:case N.MouseMove:return n.data.positions.forEach((o=>{this.replaceIds(o,e,["id"])})),n;case N.ViewportResize:return!1;case N.MediaInteraction:case N.MouseInteraction:case N.Scroll:case N.CanvasMutation:case N.Input:return this.replaceIds(n.data,e,["id"]),n;case N.StyleSheetRule:case N.StyleDeclaration:return this.replaceIds(n.data,e,["id"]),this.replaceStyleIds(n.data,e,["styleId"]),n;case N.Font:return n;case N.Selection:return n.data.ranges.forEach((o=>{this.replaceIds(o,e,["start","end"])})),n;case N.AdoptedStyleSheet:return this.replaceIds(n.data,e,["id"]),this.replaceStyleIds(n.data,e,["styleIds"]),(r=n.data.styles)==null||r.forEach((o=>{this.replaceStyleIds(o,e,["styleId"])})),n}}}replace(e,n,r,o){for(const a of o)!Array.isArray(n[a])&&typeof n[a]!="number"||(Array.isArray(n[a])?n[a]=e.getIds(r,n[a]):n[a]=e.getId(r,n[a]));return n}replaceIds(e,n,r){return this.replace(this.crossOriginIframeMirror,e,n,r)}replaceStyleIds(e,n,r){return this.replace(this.crossOriginIframeStyleMirror,e,n,r)}replaceIdOnNode(e,n){this.replaceIds(e,n,["id"]),"childNodes"in e&&e.childNodes.forEach((r=>{this.replaceIdOnNode(r,n)}))}}var Kr=Object.defineProperty,Qr=Object.defineProperties,Jr=Object.getOwnPropertyDescriptors,ln=Object.getOwnPropertySymbols,qr=Object.prototype.hasOwnProperty,eo=Object.prototype.propertyIsEnumerable,cn=(t,e,n)=>e in t?Kr(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,un=(t,e)=>{for(var n in e||(e={}))qr.call(e,n)&&cn(t,n,e[n]);if(ln)for(var n of ln(e))eo.call(e,n)&&cn(t,n,e[n]);return t},dn=(t,e)=>Qr(t,Jr(e));class to{constructor(e){this.shadowDoms=new WeakSet,this.restorePatches=[],this.mutationCb=e.mutationCb,this.scrollCb=e.scrollCb,this.bypassOptions=e.bypassOptions,this.mirror=e.mirror;const n=this;this.restorePatches.push(ge(Element.prototype,"attachShadow",(function(r){return function(o){const a=r.call(this,o);return this.shadowRoot&&n.addShadowRoot(this.shadowRoot,this.ownerDocument),a}})))}addShadowRoot(e,n){!Le(e)||this.shadowDoms.has(e)||(this.shadowDoms.add(e),tn(dn(un({},this.bypassOptions),{doc:n,mutationCb:this.mutationCb,mirror:this.mirror,shadowDomManager:this}),e),nn(dn(un({},this.bypassOptions),{scrollCb:this.scrollCb,doc:e,mirror:this.mirror})),setTimeout((()=>{e.adoptedStyleSheets&&e.adoptedStyleSheets.length>0&&this.bypassOptions.stylesheetManager.adoptStyleSheets(e.adoptedStyleSheets,this.mirror.getId(e.host)),sn({mirror:this.mirror,stylesheetManager:this.bypassOptions.stylesheetManager},e)}),0))}observeAttachShadow(e){if(e.contentWindow){const n=this;this.restorePatches.push(ge(e.contentWindow.HTMLElement.prototype,"attachShadow",(function(r){return function(o){const a=r.call(this,o);return this.shadowRoot&&n.addShadowRoot(this.shadowRoot,e.contentDocument),a}})))}}reset(){this.restorePatches.forEach((e=>e())),this.shadowDoms=new WeakSet}}for(var Me="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",We=typeof Uint8Array>"u"?[]:new Uint8Array(256),He=0;He<Me.length;He++)We[Me.charCodeAt(He)]=He;var no=function(t){var e=new Uint8Array(t),n,r=e.length,o="";for(n=0;n<r;n+=3)o+=Me[e[n]>>2],o+=Me[(e[n]&3)<<4|e[n+1]>>4],o+=Me[(e[n+1]&15)<<2|e[n+2]>>6],o+=Me[e[n+2]&63];return r%3===2?o=o.substring(0,o.length-1)+"=":r%3===1&&(o=o.substring(0,o.length-2)+"=="),o},ro=function(t){var e=t.length*.75,n=t.length,r,o=0,a,s,i,l;t[t.length-1]==="="&&(e--,t[t.length-2]==="="&&e--);var c=new ArrayBuffer(e),u=new Uint8Array(c);for(r=0;r<n;r+=4)a=We[t.charCodeAt(r)],s=We[t.charCodeAt(r+1)],i=We[t.charCodeAt(r+2)],l=We[t.charCodeAt(r+3)],u[o++]=a<<2|s>>4,u[o++]=(s&15)<<4|i>>2,u[o++]=(i&3)<<6|l&63;return c};const hn=new Map;function oo(t,e){let n=hn.get(t);return n||(n=new Map,hn.set(t,n)),n.has(e)||n.set(e,[]),n.get(e)}const pn=(t,e,n)=>{if(!t||!(fn(t,e)||typeof t=="object"))return;const r=t.constructor.name,o=oo(n,r);let a=o.indexOf(t);return a===-1&&(a=o.length,o.push(t)),a};function Ye(t,e,n){if(t instanceof Array)return t.map((r=>Ye(r,e,n)));if(t===null)return t;if(t instanceof Float32Array||t instanceof Float64Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Uint8Array||t instanceof Uint16Array||t instanceof Int16Array||t instanceof Int8Array||t instanceof Uint8ClampedArray)return{rr_type:t.constructor.name,args:[Object.values(t)]};if(t instanceof ArrayBuffer){const r=t.constructor.name,o=no(t);return{rr_type:r,base64:o}}else{if(t instanceof DataView)return{rr_type:t.constructor.name,args:[Ye(t.buffer,e,n),t.byteOffset,t.byteLength]};if(t instanceof HTMLImageElement){const r=t.constructor.name,{src:o}=t;return{rr_type:r,src:o}}else if(t instanceof HTMLCanvasElement){const r="HTMLImageElement",o=t.toDataURL();return{rr_type:r,src:o}}else{if(t instanceof ImageData)return{rr_type:t.constructor.name,args:[Ye(t.data,e,n),t.width,t.height]};if(fn(t,e)||typeof t=="object"){const r=t.constructor.name,o=pn(t,e,n);return{rr_type:r,index:o}}}}return t}const mn=(t,e,n)=>[...t].map((r=>Ye(r,e,n))),fn=(t,e)=>{const n=["WebGLActiveInfo","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLShader","WebGLShaderPrecisionFormat","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebGLVertexArrayObjectOES"].filter((r=>typeof e[r]=="function"));return Boolean(n.find((r=>t instanceof e[r])))};function so(t,e,n,r){const o=[],a=Object.getOwnPropertyNames(e.CanvasRenderingContext2D.prototype);for(const s of a)try{if(typeof e.CanvasRenderingContext2D.prototype[s]!="function")continue;const i=ge(e.CanvasRenderingContext2D.prototype,s,(function(l){return function(...c){return Q(this.canvas,n,r,!0)||setTimeout((()=>{const u=mn([...c],e,this);t(this.canvas,{type:pe["2D"],property:s,args:u})}),0),l.apply(this,c)}}));o.push(i)}catch{const l=Fe(e.CanvasRenderingContext2D.prototype,s,{set(c){t(this.canvas,{type:pe["2D"],property:s,args:[c],setter:!0})}});o.push(l)}return()=>{o.forEach((s=>s()))}}function yn(t,e,n){const r=[];try{const o=ge(t.HTMLCanvasElement.prototype,"getContext",(function(a){return function(s,...i){return Q(this,e,n,!0)||"__context"in this||(this.__context=s),a.apply(this,[s,...i])}}));r.push(o)}catch{console.error("failed to patch HTMLCanvasElement.prototype.getContext")}return()=>{r.forEach((o=>o()))}}function gn(t,e,n,r,o,a,s){const i=[],l=Object.getOwnPropertyNames(t);for(const c of l)if(!["isContextLost","canvas","drawingBufferWidth","drawingBufferHeight"].includes(c))try{if(typeof t[c]!="function")continue;const u=ge(t,c,(function(d){return function(...h){const p=d.apply(this,h);if(pn(p,s,this),!Q(this.canvas,r,o,!0)){const m=mn([...h],s,this),b={type:e,property:c,args:m};n(this.canvas,b)}return p}}));i.push(u)}catch{const d=Fe(t,c,{set(h){n(this.canvas,{type:e,property:c,args:[h],setter:!0})}});i.push(d)}return i}function io(t,e,n,r,o){const a=[];return a.push(...gn(e.WebGLRenderingContext.prototype,pe.WebGL,t,n,r,o,e)),typeof e.WebGL2RenderingContext<"u"&&a.push(...gn(e.WebGL2RenderingContext.prototype,pe.WebGL2,t,n,r,o,e)),()=>{a.forEach((s=>s()))}}function ao(t,e){var n=atob(t);if(e){for(var r=new Uint8Array(n.length),o=0,a=n.length;o<a;++o)r[o]=n.charCodeAt(o);return String.fromCharCode.apply(null,new Uint16Array(r.buffer))}return n}function lo(t,e,n){var r=e===void 0?null:e,o=n===void 0?!1:n,a=ao(t,o),s=a.indexOf(`\n`,10)+1,i=a.substring(s)+(r?"//# sourceMappingURL="+r:""),l=new Blob([i],{type:"application/javascript"});return URL.createObjectURL(l)}function co(t,e,n){var r;return function(a){return r=r||lo(t,e,n),new Worker(r,a)}}var uo=co("Lyogcm9sbHVwLXBsdWdpbi13ZWItd29ya2VyLWxvYWRlciAqLwooZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7Zm9yKHZhciByPSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvIixwPXR5cGVvZiBVaW50OEFycmF5PiJ1Ij9bXTpuZXcgVWludDhBcnJheSgyNTYpLGY9MDtmPHIubGVuZ3RoO2YrKylwW3IuY2hhckNvZGVBdChmKV09Zjt2YXIgdT1mdW5jdGlvbihzKXt2YXIgZT1uZXcgVWludDhBcnJheShzKSxuLGE9ZS5sZW5ndGgsdD0iIjtmb3Iobj0wO248YTtuKz0zKXQrPXJbZVtuXT4+Ml0sdCs9clsoZVtuXSYzKTw8NHxlW24rMV0+PjRdLHQrPXJbKGVbbisxXSYxNSk8PDJ8ZVtuKzJdPj42XSx0Kz1yW2VbbisyXSY2M107cmV0dXJuIGElMz09PTI/dD10LnN1YnN0cmluZygwLHQubGVuZ3RoLTEpKyI9IjphJTM9PT0xJiYodD10LnN1YnN0cmluZygwLHQubGVuZ3RoLTIpKyI9PSIpLHR9O2NvbnN0IGM9bmV3IE1hcCxsPW5ldyBNYXA7YXN5bmMgZnVuY3Rpb24gdihzLGUsbil7Y29uc3QgYT1gJHtzfS0ke2V9YDtpZigiT2Zmc2NyZWVuQ2FudmFzImluIGdsb2JhbFRoaXMpe2lmKGwuaGFzKGEpKXJldHVybiBsLmdldChhKTtjb25zdCB0PW5ldyBPZmZzY3JlZW5DYW52YXMocyxlKTt0LmdldENvbnRleHQoIjJkIik7Y29uc3QgZz1hd2FpdChhd2FpdCB0LmNvbnZlcnRUb0Jsb2IobikpLmFycmF5QnVmZmVyKCksZD11KGcpO3JldHVybiBsLnNldChhLGQpLGR9ZWxzZSByZXR1cm4iIn1jb25zdCBpPXNlbGY7aS5vbm1lc3NhZ2U9YXN5bmMgZnVuY3Rpb24ocyl7aWYoIk9mZnNjcmVlbkNhbnZhcyJpbiBnbG9iYWxUaGlzKXtjb25zdHtpZDplLGJpdG1hcDpuLHdpZHRoOmEsaGVpZ2h0OnQsZGF0YVVSTE9wdGlvbnM6Z309cy5kYXRhLGQ9dihhLHQsZyksaD1uZXcgT2Zmc2NyZWVuQ2FudmFzKGEsdCk7aC5nZXRDb250ZXh0KCIyZCIpLmRyYXdJbWFnZShuLDAsMCksbi5jbG9zZSgpO2NvbnN0IHc9YXdhaXQgaC5jb252ZXJ0VG9CbG9iKGcpLHk9dy50eXBlLGI9YXdhaXQgdy5hcnJheUJ1ZmZlcigpLG89dShiKTtpZighYy5oYXMoZSkmJmF3YWl0IGQ9PT1vKXJldHVybiBjLnNldChlLG8pLGkucG9zdE1lc3NhZ2Uoe2lkOmV9KTtpZihjLmdldChlKT09PW8pcmV0dXJuIGkucG9zdE1lc3NhZ2Uoe2lkOmV9KTtpLnBvc3RNZXNzYWdlKHtpZDplLHR5cGU6eSxiYXNlNjQ6byx3aWR0aDphLGhlaWdodDp0fSksYy5zZXQoZSxvKX1lbHNlIHJldHVybiBpLnBvc3RNZXNzYWdlKHtpZDpzLmRhdGEuaWR9KX19KSgpOwoK",null,!1),vn=Object.getOwnPropertySymbols,ho=Object.prototype.hasOwnProperty,po=Object.prototype.propertyIsEnumerable,mo=(t,e)=>{var n={};for(var r in t)ho.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&vn)for(var r of vn(t))e.indexOf(r)<0&&po.call(t,r)&&(n[r]=t[r]);return n},fo=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));class yo{constructor(e){this.pendingCanvasMutations=new Map,this.rafStamps={latestId:0,invokeId:null},this.frozen=!1,this.locked=!1,this.processMutation=(l,c)=>{(this.rafStamps.invokeId&&this.rafStamps.latestId!==this.rafStamps.invokeId||!this.rafStamps.invokeId)&&(this.rafStamps.invokeId=this.rafStamps.latestId),this.pendingCanvasMutations.has(l)||this.pendingCanvasMutations.set(l,[]),this.pendingCanvasMutations.get(l).push(c)};const{sampling:n="all",win:r,blockClass:o,blockSelector:a,recordCanvas:s,dataURLOptions:i}=e;this.mutationCb=e.mutationCb,this.mirror=e.mirror,s&&n==="all"&&this.initCanvasMutationObserver(r,o,a),s&&typeof n=="number"&&this.initCanvasFPSObserver(n,r,o,a,{dataURLOptions:i})}reset(){this.pendingCanvasMutations.clear(),this.resetObservers&&this.resetObservers()}freeze(){this.frozen=!0}unfreeze(){this.frozen=!1}lock(){this.locked=!0}unlock(){this.locked=!1}initCanvasFPSObserver(e,n,r,o,a){const s=yn(n,r,o),i=new Map,l=new uo;l.onmessage=m=>{const{id:b}=m.data;if(i.set(b,!1),!("base64"in m.data))return;const{base64:S,type:f,width:y,height:g}=m.data;this.mutationCb({id:b,type:pe["2D"],commands:[{property:"clearRect",args:[0,0,y,g]},{property:"drawImage",args:[{rr_type:"ImageBitmap",args:[{rr_type:"Blob",data:[{rr_type:"ArrayBuffer",base64:S}],type:f}]},0,0]}]})};const c=1e3/e;let u=0,d;const h=()=>{const m=[];return n.document.querySelectorAll("canvas").forEach((b=>{Q(b,r,o,!0)||m.push(b)})),m},p=m=>{if(u&&m-u<c){d=requestAnimationFrame(p);return}u=m,h().forEach((b=>fo(this,null,(function*(){var S;const f=this.mirror.getId(b);if(i.get(f))return;if(i.set(f,!0),["webgl","webgl2"].includes(b.__context)){const g=b.getContext(b.__context);((S=g?.getContextAttributes())==null?void 0:S.preserveDrawingBuffer)===!1&&g?.clear(g.COLOR_BUFFER_BIT)}const y=yield createImageBitmap(b);l.postMessage({id:f,bitmap:y,width:b.width,height:b.height,dataURLOptions:a.dataURLOptions},[y])})))),d=requestAnimationFrame(p)};d=requestAnimationFrame(p),this.resetObservers=()=>{s(),cancelAnimationFrame(d)}}initCanvasMutationObserver(e,n,r){this.startRAFTimestamping(),this.startPendingCanvasMutationFlusher();const o=yn(e,n,r),a=so(this.processMutation.bind(this),e,n,r),s=io(this.processMutation.bind(this),e,n,r,this.mirror);this.resetObservers=()=>{o(),a(),s()}}startPendingCanvasMutationFlusher(){requestAnimationFrame((()=>this.flushPendingCanvasMutations()))}startRAFTimestamping(){const e=n=>{this.rafStamps.latestId=n,requestAnimationFrame(e)};requestAnimationFrame(e)}flushPendingCanvasMutations(){this.pendingCanvasMutations.forEach(((e,n)=>{const r=this.mirror.getId(n);this.flushPendingCanvasMutationFor(n,r)})),requestAnimationFrame((()=>this.flushPendingCanvasMutations()))}flushPendingCanvasMutationFor(e,n){if(this.frozen||this.locked)return;const r=this.pendingCanvasMutations.get(e);if(!r||n===-1)return;const o=r.map((s=>mo(s,["type"]))),{type:a}=r[0];this.mutationCb({id:n,type:a,commands:o}),this.pendingCanvasMutations.delete(e)}}class go{constructor(e){this.trackedLinkElements=new WeakSet,this.styleMirror=new ht,this.mutationCb=e.mutationCb,this.adoptedStyleSheetCb=e.adoptedStyleSheetCb}attachLinkElement(e,n){"_cssText"in n.attributes&&this.mutationCb({adds:[],removes:[],texts:[],attributes:[{id:n.id,attributes:n.attributes}]}),this.trackLinkElement(e)}trackLinkElement(e){this.trackedLinkElements.has(e)||(this.trackedLinkElements.add(e),this.trackStylesheetInLinkElement(e))}adoptStyleSheets(e,n){if(e.length===0)return;const r={id:n,styleIds:[]},o=[];for(const a of e){let s;if(this.styleMirror.has(a))s=this.styleMirror.getId(a);else{s=this.styleMirror.add(a);const i=Array.from(a.rules||CSSRule);o.push({styleId:s,rules:i.map(((l,c)=>({rule:Mt(l),index:c})))})}r.styleIds.push(s)}o.length>0&&(r.styles=o),this.adoptedStyleSheetCb(r)}reset(){this.styleMirror.reset(),this.trackedLinkElements=new WeakSet}trackStylesheetInLinkElement(e){}}var vo=Object.defineProperty,So=Object.defineProperties,bo=Object.getOwnPropertyDescriptors,Sn=Object.getOwnPropertySymbols,wo=Object.prototype.hasOwnProperty,Eo=Object.prototype.propertyIsEnumerable,bn=(t,e,n)=>e in t?vo(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,se=(t,e)=>{for(var n in e||(e={}))wo.call(e,n)&&bn(t,n,e[n]);if(Sn)for(var n of Sn(e))Eo.call(e,n)&&bn(t,n,e[n]);return t},No=(t,e)=>So(t,bo(e));function G(t){return No(se({},t),{timestamp:Date.now()})}let V,Xe,mt,Ze=!1;const le=kt();function be(t={}){const{emit:e,checkoutEveryNms:n,checkoutEveryNth:r,blockClass:o="rr-block",blockSelector:a=null,ignoreClass:s="rr-ignore",maskTextClass:i="rr-mask",maskTextSelector:l=null,inlineStylesheet:c=!0,maskAllInputs:u,maskInputOptions:d,slimDOMOptions:h,maskInputFn:p,maskTextFn:m,hooks:b,packFn:S,sampling:f={},dataURLOptions:y={},mousemoveWait:g,recordCanvas:E=!1,recordCrossOriginIframes:k=!1,userTriggeredOnInput:x=!1,collectFonts:F=!1,inlineImages:_=!1,plugins:J,keepIframeSrcFn:Y=(()=>!1),ignoreCSSAttributes:q=new Set([])}=t,z=k?window.parent===window:!0;let X=!1;if(!z)try{window.parent.document,X=!1}catch{X=!0}if(z&&!e)throw new Error("emit function is required");g!==void 0&&f.mousemove===void 0&&(f.mousemove=g),le.reset();const $=u===!0?{color:!0,date:!0,"datetime-local":!0,email:!0,month:!0,number:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0,textarea:!0,select:!0,password:!0}:d!==void 0?d:{password:!0},Z=h===!0||h==="all"?{script:!0,comment:!0,headFavicon:!0,headWhitespace:!0,headMetaSocial:!0,headMetaRobots:!0,headMetaHttpEquiv:!0,headMetaVerification:!0,headMetaAuthorship:h==="all",headMetaDescKeywords:h==="all"}:h||{};at();let H,L=0;const te=I=>{for(const oe of J||[])oe.eventProcessor&&(I=oe.eventProcessor(I));return S&&(I=S(I)),I};V=(I,oe)=>{var ae;if(((ae=Se[0])==null?void 0:ae.isFrozen())&&I.type!==C.FullSnapshot&&!(I.type===C.IncrementalSnapshot&&I.data.source===N.Mutation)&&Se.forEach((B=>B.unfreeze())),z)e?.(te(I),oe);else if(X){const B={type:"rrweb",event:te(I),isCheckout:oe};window.parent.postMessage(B,"*")}if(I.type===C.FullSnapshot)H=I,L=0;else if(I.type===C.IncrementalSnapshot){if(I.data.source===N.Mutation&&I.data.isAttachIframe)return;L++;const B=r&&L>=r,ue=n&&I.timestamp-H.timestamp>n;(B||ue)&&Xe(!0)}};const w=I=>{V(G({type:C.IncrementalSnapshot,data:se({source:N.Mutation},I)}))},v=I=>V(G({type:C.IncrementalSnapshot,data:se({source:N.Scroll},I)})),M=I=>V(G({type:C.IncrementalSnapshot,data:se({source:N.CanvasMutation},I)})),T=I=>V(G({type:C.IncrementalSnapshot,data:se({source:N.AdoptedStyleSheet},I)})),W=new go({mutationCb:w,adoptedStyleSheetCb:T}),ne=new Zr({mirror:le,mutationCb:w,stylesheetManager:W,recordCrossOriginIframes:k,wrappedEmit:V});for(const I of J||[])I.getMirror&&I.getMirror({nodeMirror:le,crossOriginIframeMirror:ne.crossOriginIframeMirror,crossOriginIframeStyleMirror:ne.crossOriginIframeStyleMirror});mt=new yo({recordCanvas:E,mutationCb:M,win:window,blockClass:o,blockSelector:a,mirror:le,sampling:f.canvas,dataURLOptions:y});const xe=new to({mutationCb:w,scrollCb:v,bypassOptions:{blockClass:o,blockSelector:a,maskTextClass:i,maskTextSelector:l,inlineStylesheet:c,maskInputOptions:$,dataURLOptions:y,maskTextFn:m,maskInputFn:p,recordCanvas:E,inlineImages:_,sampling:f,slimDOMOptions:Z,iframeManager:ne,stylesheetManager:W,canvasManager:mt,keepIframeSrcFn:Y},mirror:le});Xe=(I=!1)=>{var oe,ae,B,ue,A,ie;V(G({type:C.Meta,data:{href:window.location.href,width:ot(),height:rt()}}),I),W.reset(),Se.forEach((re=>re.lock()));const Ue=Sr(document,{mirror:le,blockClass:o,blockSelector:a,maskTextClass:i,maskTextSelector:l,inlineStylesheet:c,maskAllInputs:$,maskTextFn:m,slimDOM:Z,dataURLOptions:y,recordCanvas:E,inlineImages:_,onSerialize:re=>{Ie(re,le)&&ne.addIframe(re),ct(re,le)&&W.trackLinkElement(re),ve(re)&&xe.addShadowRoot(re.shadowRoot,document)},onIframeLoad:(re,It)=>{ne.attachIframe(re,It),xe.observeAttachShadow(re)},onStylesheetLoad:(re,It)=>{W.attachLinkElement(re,It)},keepIframeSrcFn:Y});if(!Ue)return console.warn("Failed to snapshot the document");V(G({type:C.FullSnapshot,data:{node:Ue,initialOffset:{left:window.pageXOffset!==void 0?window.pageXOffset:document?.documentElement.scrollLeft||((ae=(oe=document?.body)==null?void 0:oe.parentElement)==null?void 0:ae.scrollLeft)||((B=document?.body)==null?void 0:B.scrollLeft)||0,top:window.pageYOffset!==void 0?window.pageYOffset:document?.documentElement.scrollTop||((A=(ue=document?.body)==null?void 0:ue.parentElement)==null?void 0:A.scrollTop)||((ie=document?.body)==null?void 0:ie.scrollTop)||0}}})),Se.forEach((re=>re.unlock())),document.adoptedStyleSheets&&document.adoptedStyleSheets.length>0&&W.adoptStyleSheets(document.adoptedStyleSheets,le.getId(document))};try{const I=[];I.push(K("DOMContentLoaded",(()=>{V(G({type:C.DomContentLoaded,data:{}}))})));const oe=B=>{var ue;return Xr({mutationCb:w,mousemoveCb:(A,ie)=>V(G({type:C.IncrementalSnapshot,data:{source:ie,positions:A}})),mouseInteractionCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.MouseInteraction},A)})),scrollCb:v,viewportResizeCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.ViewportResize},A)})),inputCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.Input},A)})),mediaInteractionCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.MediaInteraction},A)})),styleSheetRuleCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.StyleSheetRule},A)})),styleDeclarationCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.StyleDeclaration},A)})),canvasMutationCb:M,fontCb:A=>V(G({type:C.IncrementalSnapshot,data:se({source:N.Font},A)})),selectionCb:A=>{V(G({type:C.IncrementalSnapshot,data:se({source:N.Selection},A)}))},blockClass:o,ignoreClass:s,maskTextClass:i,maskTextSelector:l,maskInputOptions:$,inlineStylesheet:c,sampling:f,recordCanvas:E,inlineImages:_,userTriggeredOnInput:x,collectFonts:F,doc:B,maskInputFn:p,maskTextFn:m,keepIframeSrcFn:Y,blockSelector:a,slimDOMOptions:Z,dataURLOptions:y,mirror:le,iframeManager:ne,stylesheetManager:W,shadowDomManager:xe,canvasManager:mt,ignoreCSSAttributes:q,plugins:((ue=J?.filter((A=>A.observer)))==null?void 0:ue.map((A=>({observer:A.observer,options:A.options,callback:ie=>V(G({type:C.Plugin,data:{plugin:A.name,payload:ie}}))}))))||[]},b)};ne.addLoadListener((B=>{I.push(oe(B.contentDocument))}));const ae=()=>{Xe(),I.push(oe(document)),Ze=!0};return document.readyState==="interactive"||document.readyState==="complete"?ae():I.push(K("load",(()=>{V(G({type:C.Load,data:{}})),ae()}),window)),()=>{I.forEach((B=>B())),Ze=!1}}catch(I){console.warn(I)}}be.addCustomEvent=(t,e)=>{if(!Ze)throw new Error("please add custom event after start recording");V(G({type:C.Custom,data:{tag:t,payload:e}}))},be.freezePage=()=>{Se.forEach((t=>t.freeze()))},be.takeFullSnapshot=t=>{if(!Ze)throw new Error("please take full snapshot after start recording");Xe(t)},be.mirror=le;var R;(function(t){t[t.Document=0]="Document",t[t.DocumentType=1]="DocumentType",t[t.Element=2]="Element",t[t.Text=3]="Text",t[t.CDATA=4]="CDATA",t[t.Comment=5]="Comment"})(R||(R={}));var Co=function(){function t(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}return t.prototype.getId=function(e){var n;if(!e)return-1;var r=(n=this.getMeta(e))===null||n===void 0?void 0:n.id;return r??-1},t.prototype.getNode=function(e){return this.idNodeMap.get(e)||null},t.prototype.getIds=function(){return Array.from(this.idNodeMap.keys())},t.prototype.getMeta=function(e){return this.nodeMetaMap.get(e)||null},t.prototype.removeNodeFromMap=function(e){var n=this,r=this.getId(e);this.idNodeMap.delete(r),e.childNodes&&e.childNodes.forEach((function(o){return n.removeNodeFromMap(o)}))},t.prototype.has=function(e){return this.idNodeMap.has(e)},t.prototype.hasNode=function(e){return this.nodeMetaMap.has(e)},t.prototype.add=function(e,n){var r=n.id;this.idNodeMap.set(r,e),this.nodeMetaMap.set(e,n)},t.prototype.replace=function(e,n){var r=this.getNode(e);if(r){var o=this.nodeMetaMap.get(r);o&&this.nodeMetaMap.set(n,o)}this.idNodeMap.set(e,n)},t.prototype.reset=function(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap},t}();function Io(){return new Co}function To(t){const e={},n=/;(?![^(]*\))/g,r=/:(.+)/,o=/\/\*.*?\*\//g;return t.replace(o,"").split(n).forEach((function(a){if(a){const s=a.split(r);s.length>1&&(e[ft(s[0].trim())]=s[1].trim())}})),e}function wn(t){const e=[];for(const n in t){const r=t[n];if(typeof r!="string")continue;const o=Ro(n);e.push(`${o}: ${r};`)}return e.join(" ")}const Mo=/-([a-z])/g,ko=/^--[a-zA-Z0-9-]+$/,ft=t=>ko.test(t)?t:t.replace(Mo,((e,n)=>n?n.toUpperCase():"")),Do=/\B([A-Z])/g,Ro=t=>t.replace(Do,"-$1").toLowerCase();class ce{constructor(...e){this.childNodes=[],this.parentElement=null,this.parentNode=null,this.ELEMENT_NODE=U.ELEMENT_NODE,this.TEXT_NODE=U.TEXT_NODE}get firstChild(){return this.childNodes[0]||null}get lastChild(){return this.childNodes[this.childNodes.length-1]||null}get nextSibling(){const e=this.parentNode;if(!e)return null;const n=e.childNodes,r=n.indexOf(this);return n[r+1]||null}contains(e){if(e===this)return!0;for(const n of this.childNodes)if(n.contains(e))return!0;return!1}appendChild(e){throw new Error("RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.")}insertBefore(e,n){throw new Error("RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.")}removeChild(e){throw new Error("RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.")}toString(){return"RRNode"}}function xo(t){return class Zn extends t{constructor(){super(...arguments),this.nodeType=U.DOCUMENT_NODE,this.nodeName="#document",this.compatMode="CSS1Compat",this.RRNodeType=R.Document,this.textContent=null}get documentElement(){return this.childNodes.find((n=>n.RRNodeType===R.Element&&n.tagName==="HTML"))||null}get body(){var n;return((n=this.documentElement)===null||n===void 0?void 0:n.childNodes.find((r=>r.RRNodeType===R.Element&&r.tagName==="BODY")))||null}get head(){var n;return((n=this.documentElement)===null||n===void 0?void 0:n.childNodes.find((r=>r.RRNodeType===R.Element&&r.tagName==="HEAD")))||null}get implementation(){return this}get firstElementChild(){return this.documentElement}appendChild(n){const r=n.RRNodeType;if((r===R.Element||r===R.DocumentType)&&this.childNodes.some((o=>o.RRNodeType===r)))throw new Error(`RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${r===R.Element?"RRElement":"RRDoctype"} on RRDocument allowed.`);return n.parentElement=null,n.parentNode=this,this.childNodes.push(n),n}insertBefore(n,r){const o=n.RRNodeType;if((o===R.Element||o===R.DocumentType)&&this.childNodes.some((s=>s.RRNodeType===o)))throw new Error(`RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${o===R.Element?"RRElement":"RRDoctype"} on RRDocument allowed.`);if(r===null)return this.appendChild(n);const a=this.childNodes.indexOf(r);if(a==-1)throw new Error("Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.");return this.childNodes.splice(a,0,n),n.parentElement=null,n.parentNode=this,n}removeChild(n){const r=this.childNodes.indexOf(n);if(r===-1)throw new Error("Failed to execute 'removeChild' on 'RRDocument': The RRNode to be removed is not a child of this RRNode.");return this.childNodes.splice(r,1),n.parentElement=null,n.parentNode=null,n}open(){this.childNodes=[]}close(){}write(n){let r;if(n==='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "">'?r="-//W3C//DTD XHTML 1.0 Transitional//EN":n==='<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "">'&&(r="-//W3C//DTD HTML 4.0 Transitional//EN"),r){const o=this.createDocumentType("html",r,"");this.open(),this.appendChild(o)}}createDocument(n,r,o){return new Zn}createDocumentType(n,r,o){const a=new(En(ce))(n,r,o);return a.ownerDocument=this,a}createElement(n){const r=new(Nn(ce))(n);return r.ownerDocument=this,r}createElementNS(n,r){return this.createElement(r)}createTextNode(n){const r=new(Cn(ce))(n);return r.ownerDocument=this,r}createComment(n){const r=new(In(ce))(n);return r.ownerDocument=this,r}createCDATASection(n){const r=new(Tn(ce))(n);return r.ownerDocument=this,r}toString(){return"RRDocument"}}}function En(t){return class extends t{constructor(e,n,r){super(),this.nodeType=U.DOCUMENT_TYPE_NODE,this.RRNodeType=R.DocumentType,this.textContent=null,this.name=e,this.publicId=n,this.systemId=r,this.nodeName=e}toString(){return"RRDocumentType"}}}function Nn(t){return class extends t{constructor(e){super(),this.nodeType=U.ELEMENT_NODE,this.RRNodeType=R.Element,this.attributes={},this.shadowRoot=null,this.tagName=e.toUpperCase(),this.nodeName=e.toUpperCase()}get textContent(){let e="";return this.childNodes.forEach((n=>e+=n.textContent)),e}set textContent(e){this.childNodes=[this.ownerDocument.createTextNode(e)]}get classList(){return new Lo(this.attributes.class,(e=>{this.attributes.class=e}))}get id(){return this.attributes.id||""}get className(){return this.attributes.class||""}get style(){const e=this.attributes.style?To(this.attributes.style):{},n=/\B([A-Z])/g;return e.setProperty=(r,o,a)=>{if(n.test(r))return;const s=ft(r);o?e[s]=o:delete e[s],a==="important"&&(e[s]+=" !important"),this.attributes.style=wn(e)},e.removeProperty=r=>{if(n.test(r))return"";const o=ft(r),a=e[o]||"";return delete e[o],this.attributes.style=wn(e),a},e}getAttribute(e){return this.attributes[e]||null}setAttribute(e,n){this.attributes[e]=n}setAttributeNS(e,n,r){this.setAttribute(n,r)}removeAttribute(e){delete this.attributes[e]}appendChild(e){return this.childNodes.push(e),e.parentNode=this,e.parentElement=this,e}insertBefore(e,n){if(n===null)return this.appendChild(e);const r=this.childNodes.indexOf(n);if(r==-1)throw new Error("Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.");return this.childNodes.splice(r,0,e),e.parentElement=this,e.parentNode=this,e}removeChild(e){const n=this.childNodes.indexOf(e);if(n===-1)throw new Error("Failed to execute 'removeChild' on 'RRElement': The RRNode to be removed is not a child of this RRNode.");return this.childNodes.splice(n,1),e.parentElement=null,e.parentNode=null,e}attachShadow(e){const n=this.ownerDocument.createElement("SHADOWROOT");return this.shadowRoot=n,n}dispatchEvent(e){return!0}toString(){let e="";for(const n in this.attributes)e+=`${n}="${this.attributes[n]}" `;return`${this.tagName} ${e}`}}}function Oo(t){return class extends t{attachShadow(e){throw new Error("RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow")}play(){this.paused=!1}pause(){this.paused=!0}}}function Cn(t){return class extends t{constructor(e){super(),this.nodeType=U.TEXT_NODE,this.nodeName="#text",this.RRNodeType=R.Text,this.data=e}get textContent(){return this.data}set textContent(e){this.data=e}toString(){return`RRText text=${JSON.stringify(this.data)}`}}}function In(t){return class extends t{constructor(e){super(),this.nodeType=U.COMMENT_NODE,this.nodeName="#comment",this.RRNodeType=R.Comment,this.data=e}get textContent(){return this.data}set textContent(e){this.data=e}toString(){return`RRComment text=${JSON.stringify(this.data)}`}}}function Tn(t){return class extends t{constructor(e){super(),this.nodeName="#cdata-section",this.nodeType=U.CDATA_SECTION_NODE,this.RRNodeType=R.CDATA,this.data=e}get textContent(){return this.data}set textContent(e){this.data=e}toString(){return`RRCDATASection data=${JSON.stringify(this.data)}`}}}class Lo{constructor(e,n){if(this.classes=[],this.add=(...r)=>{for(const o of r){const a=String(o);this.classes.indexOf(a)>=0||this.classes.push(a)}this.onChange&&this.onChange(this.classes.join(" "))},this.remove=(...r)=>{this.classes=this.classes.filter((o=>r.indexOf(o)===-1)),this.onChange&&this.onChange(this.classes.join(" "))},e){const r=e.trim().split(/\s+/);this.classes.push(...r)}this.onChange=n}}var U;(function(t){t[t.PLACEHOLDER=0]="PLACEHOLDER",t[t.ELEMENT_NODE=1]="ELEMENT_NODE",t[t.ATTRIBUTE_NODE=2]="ATTRIBUTE_NODE",t[t.TEXT_NODE=3]="TEXT_NODE",t[t.CDATA_SECTION_NODE=4]="CDATA_SECTION_NODE",t[t.ENTITY_REFERENCE_NODE=5]="ENTITY_REFERENCE_NODE",t[t.ENTITY_NODE=6]="ENTITY_NODE",t[t.PROCESSING_INSTRUCTION_NODE=7]="PROCESSING_INSTRUCTION_NODE",t[t.COMMENT_NODE=8]="COMMENT_NODE",t[t.DOCUMENT_NODE=9]="DOCUMENT_NODE",t[t.DOCUMENT_TYPE_NODE=10]="DOCUMENT_TYPE_NODE",t[t.DOCUMENT_FRAGMENT_NODE=11]="DOCUMENT_FRAGMENT_NODE"})(U||(U={}));const yt={svg:"http://www.w3.org/2000/svg","xlink:href":"http://www.w3.org/1999/xlink",xmlns:"http://www.w3.org/2000/xmlns/"},Ao={altglyph:"altGlyph",altglyphdef:"altGlyphDef",altglyphitem:"altGlyphItem",animatecolor:"animateColor",animatemotion:"animateMotion",animatetransform:"animateTransform",clippath:"clipPath",feblend:"feBlend",fecolormatrix:"feColorMatrix",fecomponenttransfer:"feComponentTransfer",fecomposite:"feComposite",feconvolvematrix:"feConvolveMatrix",fediffuselighting:"feDiffuseLighting",fedisplacementmap:"feDisplacementMap",fedistantlight:"feDistantLight",fedropshadow:"feDropShadow",feflood:"feFlood",fefunca:"feFuncA",fefuncb:"feFuncB",fefuncg:"feFuncG",fefuncr:"feFuncR",fegaussianblur:"feGaussianBlur",feimage:"feImage",femerge:"feMerge",femergenode:"feMergeNode",femorphology:"feMorphology",feoffset:"feOffset",fepointlight:"fePointLight",fespecularlighting:"feSpecularLighting",fespotlight:"feSpotLight",fetile:"feTile",feturbulence:"feTurbulence",foreignobject:"foreignObject",glyphref:"glyphRef",lineargradient:"linearGradient",radialgradient:"radialGradient"};function de(t,e,n,r){const o=t.childNodes,a=e.childNodes;r=r||e.mirror||e.ownerDocument.mirror,(o.length>0||a.length>0)&&Mn(Array.from(o),a,t,n,r);let s=null,i=null;switch(e.RRNodeType){case R.Document:{i=e.scrollData;break}case R.Element:{const l=t,c=e;switch(_o(l,c,r),i=c.scrollData,s=c.inputData,c.tagName){case"AUDIO":case"VIDEO":{const u=t,d=c;d.paused!==void 0&&(d.paused?u.pause():u.play()),d.muted!==void 0&&(u.muted=d.muted),d.volume!==void 0&&(u.volume=d.volume),d.currentTime!==void 0&&(u.currentTime=d.currentTime),d.playbackRate!==void 0&&(u.playbackRate=d.playbackRate);break}case"CANVAS":{const u=e;if(u.rr_dataURL!==null){const d=document.createElement("img");d.onload=()=>{const h=l.getContext("2d");h&&h.drawImage(d,0,0,d.width,d.height)},d.src=u.rr_dataURL}u.canvasMutations.forEach((d=>n.applyCanvas(d.event,d.mutation,t)))}break;case"STYLE":{const u=l.sheet;u&&e.rules.forEach((d=>n.applyStyleSheetMutation(d,u)))}break}if(c.shadowRoot){l.shadowRoot||l.attachShadow({mode:"open"});const u=l.shadowRoot.childNodes,d=c.shadowRoot.childNodes;(u.length>0||d.length>0)&&Mn(Array.from(u),d,l.shadowRoot,n,r)}break}case R.Text:case R.Comment:case R.CDATA:t.textContent!==e.data&&(t.textContent=e.data);break}if(i&&n.applyScroll(i,!0),s&&n.applyInput(s),e.nodeName==="IFRAME"){const l=t.contentDocument,c=e;if(l){const u=r.getMeta(c.contentDocument);u&&n.mirror.add(l,Object.assign({},u)),de(l,c.contentDocument,n,r)}}}function _o(t,e,n){const r=t.attributes,o=e.attributes;for(const a in o){const s=o[a],i=n.getMeta(e);if(i&&"isSVG"in i&&i.isSVG&&yt[a])t.setAttributeNS(yt[a],a,s);else if(e.tagName==="CANVAS"&&a==="rr_dataURL"){const l=document.createElement("img");l.src=s,l.onload=()=>{const c=t.getContext("2d");c&&c.drawImage(l,0,0,l.width,l.height)}}else t.setAttribute(a,s)}for(const{name:a}of Array.from(r))a in o||t.removeAttribute(a);e.scrollLeft&&(t.scrollLeft=e.scrollLeft),e.scrollTop&&(t.scrollTop=e.scrollTop)}function Mn(t,e,n,r,o){var a;let s=0,i=t.length-1,l=0,c=e.length-1,u=t[s],d=t[i],h=e[l],p=e[c],m,b;for(;s<=i&&l<=c;){const S=r.mirror.getId(u),f=r.mirror.getId(d),y=o.getId(h),g=o.getId(p);if(u===void 0)u=t[++s];else if(d===void 0)d=t[--i];else if(S!==-1&&S===y)de(u,h,r,o),u=t[++s],h=e[++l];else if(f!==-1&&f===g)de(d,p,r,o),d=t[--i],p=e[--c];else if(S!==-1&&S===g)n.insertBefore(u,d.nextSibling),de(u,p,r,o),u=t[++s],p=e[--c];else if(f!==-1&&f===y)n.insertBefore(d,u),de(d,h,r,o),d=t[--i],h=e[++l];else{if(!m){m={};for(let E=s;E<=i;E++){const k=t[E];k&&r.mirror.hasNode(k)&&(m[r.mirror.getId(k)]=E)}}if(b=m[o.getId(h)],b){const E=t[b];n.insertBefore(E,u),de(E,h,r,o),t[b]=void 0}else{const E=gt(h,r.mirror,o);n.nodeName==="#document"&&((a=r.mirror.getMeta(E))===null||a===void 0?void 0:a.type)===R.Element&&n.documentElement&&(n.removeChild(n.documentElement),t[s]=void 0,u=void 0),n.insertBefore(E,u||null),de(E,h,r,o)}h=e[++l]}}if(s>i){const S=e[c+1];let f=null;for(S&&n.childNodes.forEach((y=>{r.mirror.getId(y)===o.getId(S)&&(f=y)}));l<=c;++l){const y=gt(e[l],r.mirror,o);n.insertBefore(y,f),de(y,e[l],r,o)}}else if(l>c)for(;s<=i;s++){const S=t[s];S&&(n.removeChild(S),r.mirror.removeNodeFromMap(S))}}function gt(t,e,n){const r=n.getId(t),o=n.getMeta(t);let a=null;if(r>-1&&(a=e.getNode(r)),a!==null)return a;switch(t.RRNodeType){case R.Document:a=new Document;break;case R.DocumentType:a=document.implementation.createDocumentType(t.name,t.publicId,t.systemId);break;case R.Element:{let s=t.tagName.toLowerCase();s=Ao[s]||s,o&&"isSVG"in o&&o?.isSVG?a=document.createElementNS(yt.svg,s):a=document.createElement(t.tagName);break}case R.Text:a=document.createTextNode(t.data);break;case R.Comment:a=document.createComment(t.data);break;case R.CDATA:a=document.createCDATASection(t.data);break}return o&&e.add(a,Object.assign({},o)),a}class ke extends(xo(ce)){constructor(e){super(),this.UNSERIALIZED_STARTING_ID=-2,this._unserializedId=this.UNSERIALIZED_STARTING_ID,this.mirror=Ho(),this.scrollData=null,e&&(this.mirror=e)}get unserializedId(){return this._unserializedId--}createDocument(e,n,r){return new ke}createDocumentType(e,n,r){const o=new Fo(e,n,r);return o.ownerDocument=this,o}createElement(e){const n=e.toUpperCase();let r;switch(n){case"AUDIO":case"VIDEO":r=new Po(n);break;case"IFRAME":r=new Uo(n,this.mirror);break;case"CANVAS":r=new Wo(n);break;case"STYLE":r=new $o(n);break;default:r=new $e(n);break}return r.ownerDocument=this,r}createComment(e){const n=new Bo(e);return n.ownerDocument=this,n}createCDATASection(e){const n=new Go(e);return n.ownerDocument=this,n}createTextNode(e){const n=new Vo(e);return n.ownerDocument=this,n}destroyTree(){this.childNodes=[],this.mirror.reset()}open(){super.open(),this._unserializedId=this.UNSERIALIZED_STARTING_ID}}const Fo=En(ce);class $e extends(Nn(ce)){constructor(){super(...arguments),this.inputData=null,this.scrollData=null}}class Po extends(Oo($e)){}class Wo extends $e{constructor(){super(...arguments),this.rr_dataURL=null,this.canvasMutations=[]}getContext(){return null}}class $o extends $e{constructor(){super(...arguments),this.rules=[]}}class Uo extends $e{constructor(e,n){super(e),this.contentDocument=new ke,this.contentDocument.mirror=n}}const Vo=Cn(ce),Bo=In(ce),Go=Tn(ce);function jo(t){return t instanceof HTMLFormElement?"FORM":t.tagName.toUpperCase()}function kn(t,e,n,r){let o;switch(t.nodeType){case U.DOCUMENT_NODE:r&&r.nodeName==="IFRAME"?o=r.contentDocument:(o=e,o.compatMode=t.compatMode);break;case U.DOCUMENT_TYPE_NODE:{const s=t;o=e.createDocumentType(s.name,s.publicId,s.systemId);break}case U.ELEMENT_NODE:{const s=t,i=jo(s);o=e.createElement(i);const l=o;for(const{name:c,value:u}of Array.from(s.attributes))l.attributes[c]=u;s.scrollLeft&&(l.scrollLeft=s.scrollLeft),s.scrollTop&&(l.scrollTop=s.scrollTop);break}case U.TEXT_NODE:o=e.createTextNode(t.textContent||"");break;case U.CDATA_SECTION_NODE:o=e.createCDATASection(t.data);break;case U.COMMENT_NODE:o=e.createComment(t.textContent||"");break;case U.DOCUMENT_FRAGMENT_NODE:o=r.attachShadow({mode:"open"});break;default:return null}let a=n.getMeta(t);return e instanceof ke&&(a||(a=Dn(o,e.unserializedId),n.add(t,a)),e.mirror.add(o,Object.assign({},a))),o}function zo(t,e=Io(),n=new ke){function r(o,a){const s=kn(o,n,e,a);if(s!==null)if(a?.nodeName!=="IFRAME"&&o.nodeType!==U.DOCUMENT_FRAGMENT_NODE&&(a?.appendChild(s),s.parentNode=a,s.parentElement=a),o.nodeName==="IFRAME"){const i=o.contentDocument;i&&r(i,s)}else(o.nodeType===U.DOCUMENT_NODE||o.nodeType===U.ELEMENT_NODE||o.nodeType===U.DOCUMENT_FRAGMENT_NODE)&&(o.nodeType===U.ELEMENT_NODE&&o.shadowRoot&&r(o.shadowRoot,s),o.childNodes.forEach((i=>r(i,s))))}return r(t,null),n}function Ho(){return new Yo}class Yo{constructor(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}getId(e){var n;if(!e)return-1;const r=(n=this.getMeta(e))===null||n===void 0?void 0:n.id;return r??-1}getNode(e){return this.idNodeMap.get(e)||null}getIds(){return Array.from(this.idNodeMap.keys())}getMeta(e){return this.nodeMetaMap.get(e)||null}removeNodeFromMap(e){const n=this.getId(e);this.idNodeMap.delete(n),e.childNodes&&e.childNodes.forEach((r=>this.removeNodeFromMap(r)))}has(e){return this.idNodeMap.has(e)}hasNode(e){return this.nodeMetaMap.has(e)}add(e,n){const r=n.id;this.idNodeMap.set(r,e),this.nodeMetaMap.set(e,n)}replace(e,n){const r=this.getNode(e);if(r){const o=this.nodeMetaMap.get(r);o&&this.nodeMetaMap.set(n,o)}this.idNodeMap.set(e,n)}reset(){this.idNodeMap=new Map,this.nodeMetaMap=new WeakMap}}function Dn(t,e){switch(t.RRNodeType){case R.Document:return{id:e,type:t.RRNodeType,childNodes:[]};case R.DocumentType:{const n=t;return{id:e,type:t.RRNodeType,name:n.name,publicId:n.publicId,systemId:n.systemId}}case R.Element:return{id:e,type:t.RRNodeType,tagName:t.tagName.toLowerCase(),attributes:{},childNodes:[]};case R.Text:return{id:e,type:t.RRNodeType,textContent:t.textContent||""};case R.Comment:return{id:e,type:t.RRNodeType,textContent:t.textContent||""};case R.CDATA:return{id:e,type:t.RRNodeType,textContent:""}}}function Rn(t){return{all:t=t||new Map,on:function(e,n){var r=t.get(e);r?r.push(n):t.set(e,[n])},off:function(e,n){var r=t.get(e);r&&(n?r.splice(r.indexOf(n)>>>0,1):t.set(e,[]))},emit:function(e,n){var r=t.get(e);r&&r.slice().map((function(o){o(n)})),(r=t.get("*"))&&r.slice().map((function(o){o(e,n)}))}}}var Xo=Object.freeze({__proto__:null,default:Rn});function Zo(t=window,e=document){if("scrollBehavior"in e.documentElement.style&&t.__forceSmoothScrollPolyfill__!==!0)return;const n=t.HTMLElement||t.Element,r=468,o={scroll:t.scroll||t.scrollTo,scrollBy:t.scrollBy,elementScroll:n.prototype.scroll||l,scrollIntoView:n.prototype.scrollIntoView},a=t.performance&&t.performance.now?t.performance.now.bind(t.performance):Date.now;function s(f){const y=["MSIE ","Trident/","Edge/"];return new RegExp(y.join("|")).test(f)}const i=s(t.navigator.userAgent)?1:0;function l(f,y){this.scrollLeft=f,this.scrollTop=y}function c(f){return.5*(1-Math.cos(Math.PI*f))}function u(f){if(f===null||typeof f!="object"||f.behavior===void 0||f.behavior==="auto"||f.behavior==="instant")return!0;if(typeof f=="object"&&f.behavior==="smooth")return!1;throw new TypeError("behavior member of ScrollOptions "+f.behavior+" is not a valid value for enumeration ScrollBehavior.")}function d(f,y){if(y==="Y")return f.clientHeight+i<f.scrollHeight;if(y==="X")return f.clientWidth+i<f.scrollWidth}function h(f,y){const g=t.getComputedStyle(f,null)["overflow"+y];return g==="auto"||g==="scroll"}function p(f){const y=d(f,"Y")&&h(f,"Y"),g=d(f,"X")&&h(f,"X");return y||g}function m(f){for(;f!==e.body&&p(f)===!1;)f=f.parentNode||f.host;return f}function b(f){const y=a();let g,E,k,x=(y-f.startTime)/r;x=x>1?1:x,g=c(x),E=f.startX+(f.x-f.startX)*g,k=f.startY+(f.y-f.startY)*g,f.method.call(f.scrollable,E,k),(E!==f.x||k!==f.y)&&t.requestAnimationFrame(b.bind(t,f))}function S(f,y,g){let E,k,x,F;const _=a();f===e.body?(E=t,k=t.scrollX||t.pageXOffset,x=t.scrollY||t.pageYOffset,F=o.scroll):(E=f,k=f.scrollLeft,x=f.scrollTop,F=l),b({scrollable:E,method:F,startTime:_,startX:k,startY:x,x:y,y:g})}t.scroll=t.scrollTo=function(){if(arguments[0]!==void 0){if(u(arguments[0])===!0){o.scroll.call(t,arguments[0].left!==void 0?arguments[0].left:typeof arguments[0]!="object"?arguments[0]:t.scrollX||t.pageXOffset,arguments[0].top!==void 0?arguments[0].top:arguments[1]!==void 0?arguments[1]:t.scrollY||t.pageYOffset);return}S.call(t,e.body,arguments[0].left!==void 0?~~arguments[0].left:t.scrollX||t.pageXOffset,arguments[0].top!==void 0?~~arguments[0].top:t.scrollY||t.pageYOffset)}},t.scrollBy=function(){if(arguments[0]!==void 0){if(u(arguments[0])){o.scrollBy.call(t,arguments[0].left!==void 0?arguments[0].left:typeof arguments[0]!="object"?arguments[0]:0,arguments[0].top!==void 0?arguments[0].top:arguments[1]!==void 0?arguments[1]:0);return}S.call(t,e.body,~~arguments[0].left+(t.scrollX||t.pageXOffset),~~arguments[0].top+(t.scrollY||t.pageYOffset))}},n.prototype.scroll=n.prototype.scrollTo=function(){if(arguments[0]===void 0)return;if(u(arguments[0])===!0){if(typeof arguments[0]=="number"&&arguments[1]===void 0)throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,arguments[0].left!==void 0?~~arguments[0].left:typeof arguments[0]!="object"?~~arguments[0]:this.scrollLeft,arguments[0].top!==void 0?~~arguments[0].top:arguments[1]!==void 0?~~arguments[1]:this.scrollTop);return}const f=arguments[0].left,y=arguments[0].top;S.call(this,this,typeof f>"u"?this.scrollLeft:~~f,typeof y>"u"?this.scrollTop:~~y)},n.prototype.scrollBy=function(){if(arguments[0]!==void 0){if(u(arguments[0])===!0){o.elementScroll.call(this,arguments[0].left!==void 0?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,arguments[0].top!==void 0?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop);return}this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior})}},n.prototype.scrollIntoView=function(){if(u(arguments[0])===!0){o.scrollIntoView.call(this,arguments[0]===void 0?!0:arguments[0]);return}const f=m(this),y=f.getBoundingClientRect(),g=this.getBoundingClientRect();f!==e.body?(S.call(this,f,f.scrollLeft+g.left-y.left,f.scrollTop+g.top-y.top),t.getComputedStyle(f).position!=="fixed"&&t.scrollBy({left:y.left,top:y.top,behavior:"smooth"})):t.scrollBy({left:g.left,top:g.top,behavior:"smooth"})}}class Ko{constructor(e=[],n){this.timeOffset=0,this.raf=null,this.actions=e,this.speed=n.speed,this.liveMode=n.liveMode}addAction(e){if(!this.actions.length||this.actions[this.actions.length-1].delay<=e.delay){this.actions.push(e);return}const n=this.findActionIndex(e);this.actions.splice(n,0,e)}start(){this.timeOffset=0;let e=performance.now();const n=()=>{const r=performance.now();for(this.timeOffset+=(r-e)*this.speed,e=r;this.actions.length;){const o=this.actions[0];if(this.timeOffset>=o.delay)this.actions.shift(),o.doAction();else break}(this.actions.length>0||this.liveMode)&&(this.raf=requestAnimationFrame(n))};this.raf=requestAnimationFrame(n)}clear(){this.raf&&(cancelAnimationFrame(this.raf),this.raf=null),this.actions.length=0}setSpeed(e){this.speed=e}toggleLiveMode(e){this.liveMode=e}isActive(){return this.raf!==null}findActionIndex(e){let n=0,r=this.actions.length-1;for(;n<=r;){const o=Math.floor((n+r)/2);if(this.actions[o].delay<e.delay)n=o+1;else if(this.actions[o].delay>e.delay)r=o-1;else return o+1}return n}}function xn(t,e){if(t.type===C.IncrementalSnapshot&&t.data.source===N.MouseMove&&t.data.positions&&t.data.positions.length){const n=t.data.positions[0].timeOffset,r=t.timestamp+n;return t.delay=r-e,r-e}return t.delay=t.timestamp-e,t.delay}function On(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var r,o,a=n.call(t),s=[];try{for(;(e===void 0||e-- >0)&&!(r=a.next()).done;)s.push(r.value)}catch(i){o={error:i}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(o)throw o.error}}return s}var De;(function(t){t[t.NotStarted=0]="NotStarted",t[t.Running=1]="Running",t[t.Stopped=2]="Stopped"})(De||(De={}));var Ln={type:"xstate.init"};function vt(t){return t===void 0?[]:[].concat(t)}function Re(t){return{type:"xstate.assign",assignment:t}}function An(t,e){return typeof(t=typeof t=="string"&&e&&e[t]?e[t]:t)=="string"?{type:t}:typeof t=="function"?{type:t.name,exec:t}:t}function Ke(t){return function(e){return t===e}}function _n(t){return typeof t=="string"?{type:t}:t}function Fn(t,e){return{value:t,context:e,actions:[],changed:!1,matches:Ke(t)}}function Pn(t,e,n){var r=e,o=!1;return[t.filter((function(a){if(a.type==="xstate.assign"){o=!0;var s=Object.assign({},r);return typeof a.assignment=="function"?s=a.assignment(r,n):Object.keys(a.assignment).forEach((function(i){s[i]=typeof a.assignment[i]=="function"?a.assignment[i](r,n):a.assignment[i]})),r=s,!1}return!0})),r,o]}function Wn(t,e){e===void 0&&(e={});var n=On(Pn(vt(t.states[t.initial].entry).map((function(s){return An(s,e.actions)})),t.context,Ln),2),r=n[0],o=n[1],a={config:t,_options:e,initialState:{value:t.initial,actions:r,context:o,matches:Ke(t.initial)},transition:function(s,i){var l,c,u=typeof s=="string"?{value:s,context:t.context}:s,d=u.value,h=u.context,p=_n(i),m=t.states[d];if(m.on){var b=vt(m.on[p.type]);try{for(var S=function(L){var te=typeof Symbol=="function"&&Symbol.iterator,w=te&&L[te],v=0;if(w)return w.call(L);if(L&&typeof L.length=="number")return{next:function(){return L&&v>=L.length&&(L=void 0),{value:L&&L[v++],done:!L}}};throw new TypeError(te?"Object is not iterable.":"Symbol.iterator is not defined.")}(b),f=S.next();!f.done;f=S.next()){var y=f.value;if(y===void 0)return Fn(d,h);var g=typeof y=="string"?{target:y}:y,E=g.target,k=g.actions,x=k===void 0?[]:k,F=g.cond,_=F===void 0?function(){return!0}:F,J=E===void 0,Y=E??d,q=t.states[Y];if(_(h,p)){var z=On(Pn((J?vt(x):[].concat(m.exit,x,q.entry).filter((function(L){return L}))).map((function(L){return An(L,a._options.actions)})),h,p),3),X=z[0],$=z[1],Z=z[2],H=E??d;return{value:H,context:$,actions:X,changed:E!==d||X.length>0||Z,matches:Ke(H)}}}}catch(L){l={error:L}}finally{try{f&&!f.done&&(c=S.return)&&c.call(S)}finally{if(l)throw l.error}}}return Fn(d,h)}};return a}var $n=function(t,e){return t.actions.forEach((function(n){var r=n.exec;return r&&r(t.context,e)}))};function Un(t){var e=t.initialState,n=De.NotStarted,r=new Set,o={_machine:t,send:function(a){n===De.Running&&(e=t.transition(e,a),$n(e,_n(a)),r.forEach((function(s){return s(e)})))},subscribe:function(a){return r.add(a),a(e),{unsubscribe:function(){return r.delete(a)}}},start:function(a){if(a){var s=typeof a=="object"?a:{context:t.config.context,value:a};e={value:s.value,actions:[],context:s.context,matches:Ke(s.value)}}return n=De.Running,$n(e,Ln),o},stop:function(){return n=De.Stopped,r.clear(),o},get state(){return e},get status(){return n}};return o}var Qo=Object.defineProperty,Jo=Object.defineProperties,qo=Object.getOwnPropertyDescriptors,Vn=Object.getOwnPropertySymbols,es=Object.prototype.hasOwnProperty,ts=Object.prototype.propertyIsEnumerable,Bn=(t,e,n)=>e in t?Qo(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,St=(t,e)=>{for(var n in e||(e={}))es.call(e,n)&&Bn(t,n,e[n]);if(Vn)for(var n of Vn(e))ts.call(e,n)&&Bn(t,n,e[n]);return t},bt=(t,e)=>Jo(t,qo(e));function ns(t,e){for(let n=t.length-1;n>=0;n--){const r=t[n];if(r.type===C.Meta&&r.timestamp<=e)return t.slice(n)}return t}function rs(t,{getCastFn:e,applyEventsSynchronously:n,emitter:r}){const o=Wn({id:"player",context:t,initial:"paused",states:{playing:{on:{PAUSE:{target:"paused",actions:["pause"]},CAST_EVENT:{target:"playing",actions:"castEvent"},END:{target:"paused",actions:["resetLastPlayedEvent","pause"]},ADD_EVENT:{target:"playing",actions:["addEvent"]}}},paused:{on:{PLAY:{target:"playing",actions:["recordTimeOffset","play"]},CAST_EVENT:{target:"paused",actions:"castEvent"},TO_LIVE:{target:"live",actions:["startLive"]},ADD_EVENT:{target:"paused",actions:["addEvent"]}}},live:{on:{ADD_EVENT:{target:"live",actions:["addEvent"]},CAST_EVENT:{target:"live",actions:["castEvent"]}}}}},{actions:{castEvent:Re({lastPlayedEvent:(a,s)=>s.type==="CAST_EVENT"?s.payload.event:a.lastPlayedEvent}),recordTimeOffset:Re(((a,s)=>{let i=a.timeOffset;return"payload"in s&&"timeOffset"in s.payload&&(i=s.payload.timeOffset),bt(St({},a),{timeOffset:i,baselineTime:a.events[0].timestamp+i})})),play(a){var s;const{timer:i,events:l,baselineTime:c,lastPlayedEvent:u}=a;i.clear();for(const m of l)xn(m,c);const d=ns(l,c);let h=u?.timestamp;u?.type===C.IncrementalSnapshot&&u.data.source===N.MouseMove&&(h=u.timestamp+((s=u.data.positions[0])==null?void 0:s.timeOffset)),c<(h||0)&&r.emit(O.PlayBack);const p=new Array;for(const m of d)if(!(h&&h<c&&(m.timestamp<=h||m===u)))if(m.timestamp<c)p.push(m);else{const b=e(m,!1);i.addAction({doAction:()=>{b()},delay:m.delay})}n(p),r.emit(O.Flush),i.start()},pause(a){a.timer.clear()},resetLastPlayedEvent:Re((a=>bt(St({},a),{lastPlayedEvent:null}))),startLive:Re({baselineTime:(a,s)=>(a.timer.toggleLiveMode(!0),a.timer.start(),s.type==="TO_LIVE"&&s.payload.baselineTime?s.payload.baselineTime:Date.now())}),addEvent:Re(((a,s)=>{const{baselineTime:i,timer:l,events:c}=a;if(s.type==="ADD_EVENT"){const{event:u}=s.payload;xn(u,i);let d=c.length-1;if(!c[d]||c[d].timestamp<=u.timestamp)c.push(u);else{let m=-1,b=0;for(;b<=d;){const S=Math.floor((b+d)/2);c[S].timestamp<=u.timestamp?b=S+1:d=S-1}m===-1&&(m=b),c.splice(m,0,u)}const h=u.timestamp<i,p=e(u,h);h?p():l.isActive()&&l.addAction({doAction:()=>{p()},delay:u.delay})}return bt(St({},a),{events:c})}))}});return Un(o)}function os(t){const e=Wn({id:"speed",context:t,initial:"normal",states:{normal:{on:{FAST_FORWARD:{target:"skipping",actions:["recordSpeed","setSpeed"]},SET_SPEED:{target:"normal",actions:["setSpeed"]}}},skipping:{on:{BACK_TO_NORMAL:{target:"normal",actions:["restoreSpeed"]},SET_SPEED:{target:"normal",actions:["setSpeed"]}}}}},{actions:{setSpeed:(n,r)=>{"payload"in r&&n.timer.setSpeed(r.payload.speed)},recordSpeed:Re({normalSpeed:n=>n.timer.speed}),restoreSpeed:n=>{n.timer.setSpeed(n.normalSpeed)}}});return Un(e)}const ss=t=>[`.${t} { background: currentColor }`,"noscript { display: none !important; }"];var is=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));const Gn=new Map;function jn(t,e){let n=Gn.get(t);return n||(n=new Map,Gn.set(t,n)),n.has(e)||n.set(e,[]),n.get(e)}function ye(t,e,n){return r=>is(this,null,(function*(){if(r&&typeof r=="object"&&"rr_type"in r)if(n&&(n.isUnchanged=!1),r.rr_type==="ImageBitmap"&&"args"in r){const o=yield ye(t,e,n)(r.args);return yield createImageBitmap.apply(null,o)}else if("index"in r){if(n||e===null)return r;const{rr_type:o,index:a}=r;return jn(e,o)[a]}else if("args"in r){const{rr_type:o,args:a}=r,s=window[o];return new s(...yield Promise.all(a.map(ye(t,e,n))))}else{if("base64"in r)return ro(r.base64);if("src"in r){const o=t.get(r.src);if(o)return o;{const a=new Image;return a.src=r.src,t.set(r.src,a),a}}else if("data"in r&&r.rr_type==="Blob"){const o=yield Promise.all(r.data.map(ye(t,e,n)));return new Blob(o,{type:r.type})}}else if(Array.isArray(r))return yield Promise.all(r.map(ye(t,e,n)));return r}))}var as=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));function ls(t,e){try{return e===pe.WebGL?t.getContext("webgl")||t.getContext("experimental-webgl"):t.getContext("webgl2")}catch{return null}}const cs=["WebGLActiveInfo","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLShader","WebGLShaderPrecisionFormat","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject"];function us(t,e){if(!(e!=null&&e.constructor))return;const{name:n}=e.constructor;if(!cs.includes(n))return;const r=jn(t,n);r.includes(e)||r.push(e)}function ds(t){return as(this,arguments,(function*({mutation:e,target:n,type:r,imageMap:o,errorHandler:a}){try{const s=ls(n,r);if(!s)return;if(e.setter){s[e.property]=e.args[0];return}const i=s[e.property],l=yield Promise.all(e.args.map(ye(o,s))),c=i.apply(s,l);us(s,c)}catch(s){a(e,s)}}))}var hs=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));function ps(t){return hs(this,arguments,(function*({event:e,mutation:n,target:r,imageMap:o,errorHandler:a}){try{const s=r.getContext("2d");if(n.setter){s[n.property]=n.args[0];return}const i=s[n.property];if(n.property==="drawImage"&&typeof n.args[0]=="string")o.get(e),i.apply(s,n.args);else{const l=yield Promise.all(n.args.map(ye(o,s)));i.apply(s,l)}}catch(s){a(n,s)}}))}var ms=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));function zn(t){return ms(this,arguments,(function*({event:e,mutation:n,target:r,imageMap:o,canvasEventMap:a,errorHandler:s}){try{const i=a.get(e)||n,l="commands"in i?i.commands:[i];if([pe.WebGL,pe.WebGL2].includes(n.type)){for(let c=0;c<l.length;c++){const u=l[c];yield ds({mutation:u,type:n.type,target:r,imageMap:o,errorHandler:s})}return}for(let c=0;c<l.length;c++){const u=l[c];yield ps({event:e,mutation:u,target:r,imageMap:o,errorHandler:s})}}catch(i){s(n,i)}}))}var fs=Object.defineProperty,ys=Object.defineProperties,gs=Object.getOwnPropertyDescriptors,Hn=Object.getOwnPropertySymbols,vs=Object.prototype.hasOwnProperty,Ss=Object.prototype.propertyIsEnumerable,Yn=(t,e,n)=>e in t?fs(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,Qe=(t,e)=>{for(var n in e||(e={}))vs.call(e,n)&&Yn(t,n,e[n]);if(Hn)for(var n of Hn(e))Ss.call(e,n)&&Yn(t,n,e[n]);return t},wt=(t,e)=>ys(t,gs(e)),Et=(t,e,n)=>new Promise(((r,o)=>{var a=l=>{try{i(n.next(l))}catch(c){o(c)}},s=l=>{try{i(n.throw(l))}catch(c){o(c)}},i=l=>l.done?r(l.value):Promise.resolve(l.value).then(a,s);i((n=n.apply(t,e)).next())}));const bs=10*1e3,ws=5*1e3,Es=Rn||Xo,Nt="[replayer]",Ct={duration:500,lineCap:"round",lineWidth:3,strokeStyle:"red"};function Xn(t){return t.type==C.IncrementalSnapshot&&(t.data.source==N.TouchMove||t.data.source==N.MouseInteraction&&t.data.type==j.TouchStart)}class Ns{constructor(e,n){if(this.usingVirtualDom=!1,this.virtualDom=new ke,this.mouseTail=null,this.tailPositions=[],this.emitter=Es(),this.legacy_missingNodeRetryMap={},this.cache=Wt(),this.imageMap=new Map,this.canvasEventMap=new Map,this.mirror=kt(),this.styleMirror=new ht,this.firstFullSnapshot=null,this.newDocumentQueue=[],this.mousePos=null,this.touchActive=null,this.lastSelectionData=null,this.constructedStyleMutations=[],this.adoptedStyleSheets=[],this.handleResize=i=>{this.iframe.style.display="inherit";for(const l of[this.mouseTail,this.iframe])!l||(l.setAttribute("width",String(i.width)),l.setAttribute("height",String(i.height)))},this.applyEventsSynchronously=i=>{for(const l of i){switch(l.type){case C.DomContentLoaded:case C.Load:case C.Custom:continue;case C.FullSnapshot:case C.Meta:case C.Plugin:case C.IncrementalSnapshot:break}this.getCastFn(l,!0)()}this.touchActive===!0?this.mouse.classList.add("touch-active"):this.touchActive===!1&&this.mouse.classList.remove("touch-active"),this.touchActive=null},this.getCastFn=(i,l=!1)=>{let c;switch(i.type){case C.DomContentLoaded:case C.Load:break;case C.Custom:c=()=>{this.emitter.emit(O.CustomEvent,i)};break;case C.Meta:c=()=>this.emitter.emit(O.Resize,{width:i.data.width,height:i.data.height});break;case C.FullSnapshot:c=()=>{var u;if(this.firstFullSnapshot){if(this.firstFullSnapshot===i){this.firstFullSnapshot=!0;return}}else this.firstFullSnapshot=!0;this.rebuildFullSnapshot(i,l),(u=this.iframe.contentWindow)==null||u.scrollTo(i.data.initialOffset),this.styleMirror.reset()};break;case C.IncrementalSnapshot:c=()=>{if(this.applyIncremental(i,l),!l&&(i===this.nextUserInteractionEvent&&(this.nextUserInteractionEvent=null,this.backToNormal()),this.config.skipInactive&&!this.nextUserInteractionEvent)){for(const u of this.service.state.context.events)if(!(u.timestamp<=i.timestamp)&&this.isUserInteraction(u)){u.delay-i.delay>bs*this.speedService.state.context.timer.speed&&(this.nextUserInteractionEvent=u);break}if(this.nextUserInteractionEvent){const u=this.nextUserInteractionEvent.delay-i.delay,d={speed:Math.min(Math.round(u/ws),this.config.maxSpeed)};this.speedService.send({type:"FAST_FORWARD",payload:d}),this.emitter.emit(O.SkipStart,d)}}};break}return()=>{c&&c();for(const d of this.config.plugins||[])d.handler&&d.handler(i,l,{replayer:this});this.service.send({type:"CAST_EVENT",payload:{event:i}});const u=this.service.state.context.events.length-1;if(i===this.service.state.context.events[u]){const d=()=>{u<this.service.state.context.events.length-1||(this.backToNormal(),this.service.send("END"),this.emitter.emit(O.Finish))};i.type===C.IncrementalSnapshot&&i.data.source===N.MouseMove&&i.data.positions.length?setTimeout((()=>{d()}),Math.max(0,-i.data.positions[0].timeOffset+50)):d()}this.emitter.emit(O.EventCast,i)}},!(n!=null&&n.liveMode)&&e.length<2)throw new Error("Replayer need at least 2 events.");const r={speed:1,maxSpeed:360,root:document.body,loadTimeout:0,skipInactive:!1,showWarning:!0,showDebug:!1,blockClass:"rr-block",liveMode:!1,insertStyleRules:[],triggerFocus:!0,UNSAFE_replayCanvas:!1,pauseAnimation:!0,mouseTail:Ct,useVirtualDom:!0};this.config=Object.assign({},r,n),this.handleResize=this.handleResize.bind(this),this.getCastFn=this.getCastFn.bind(this),this.applyEventsSynchronously=this.applyEventsSynchronously.bind(this),this.emitter.on(O.Resize,this.handleResize),this.setupDom();for(const i of this.config.plugins||[])i.getMirror&&i.getMirror({nodeMirror:this.mirror});this.emitter.on(O.Flush,(()=>{if(this.usingVirtualDom){const i={mirror:this.mirror,applyCanvas:(l,c,u)=>{zn({event:l,mutation:c,target:u,imageMap:this.imageMap,canvasEventMap:this.canvasEventMap,errorHandler:this.warnCanvasMutationFailed.bind(this)})},applyInput:this.applyInput.bind(this),applyScroll:this.applyScroll.bind(this),applyStyleSheetMutation:(l,c)=>{l.source===N.StyleSheetRule?this.applyStyleSheetRule(l,c):l.source===N.StyleDeclaration&&this.applyStyleDeclaration(l,c)}};if(this.iframe.contentDocument&&de(this.iframe.contentDocument,this.virtualDom,i,this.virtualDom.mirror),this.virtualDom.destroyTree(),this.usingVirtualDom=!1,Object.keys(this.legacy_missingNodeRetryMap).length)for(const l in this.legacy_missingNodeRetryMap)try{const c=this.legacy_missingNodeRetryMap[l],u=gt(c.node,this.mirror,this.virtualDom.mirror);de(u,c.node,i,this.virtualDom.mirror),c.node=u}catch(c){this.config.showWarning&&console.warn(c)}this.constructedStyleMutations.forEach((l=>{this.applyStyleSheetMutation(l)})),this.constructedStyleMutations=[],this.adoptedStyleSheets.forEach((l=>{this.applyAdoptedStyleSheet(l)})),this.adoptedStyleSheets=[]}this.mousePos&&(this.moveAndHover(this.mousePos.x,this.mousePos.y,this.mousePos.id,!0,this.mousePos.debugData),this.mousePos=null),this.lastSelectionData&&(this.applySelection(this.lastSelectionData),this.lastSelectionData=null)})),this.emitter.on(O.PlayBack,(()=>{this.firstFullSnapshot=null,this.mirror.reset(),this.styleMirror.reset()}));const o=new Ko([],{speed:this.config.speed,liveMode:this.config.liveMode});this.service=rs({events:e.map((i=>n&&n.unpackFn?n.unpackFn(i):i)).sort(((i,l)=>i.timestamp-l.timestamp)),timer:o,timeOffset:0,baselineTime:0,lastPlayedEvent:null},{getCastFn:this.getCastFn,applyEventsSynchronously:this.applyEventsSynchronously,emitter:this.emitter}),this.service.start(),this.service.subscribe((i=>{this.emitter.emit(O.StateChange,{player:i})})),this.speedService=os({normalSpeed:-1,timer:o}),this.speedService.start(),this.speedService.subscribe((i=>{this.emitter.emit(O.StateChange,{speed:i})}));const a=this.service.state.context.events.find((i=>i.type===C.Meta)),s=this.service.state.context.events.find((i=>i.type===C.FullSnapshot));if(a){const{width:i,height:l}=a.data;setTimeout((()=>{this.emitter.emit(O.Resize,{width:i,height:l})}),0)}s&&setTimeout((()=>{var i;this.firstFullSnapshot||(this.firstFullSnapshot=s,this.rebuildFullSnapshot(s),(i=this.iframe.contentWindow)==null||i.scrollTo(s.data.initialOffset))}),1),this.service.state.context.events.find(Xn)&&this.mouse.classList.add("touch-device")}get timer(){return this.service.state.context.timer}on(e,n){return this.emitter.on(e,n),this}off(e,n){return this.emitter.off(e,n),this}setConfig(e){Object.keys(e).forEach((n=>{e[n],this.config[n]=e[n]})),this.config.skipInactive||this.backToNormal(),typeof e.speed<"u"&&this.speedService.send({type:"SET_SPEED",payload:{speed:e.speed}}),typeof e.mouseTail<"u"&&(e.mouseTail===!1?this.mouseTail&&(this.mouseTail.style.display="none"):(this.mouseTail||(this.mouseTail=document.createElement("canvas"),this.mouseTail.width=Number.parseFloat(this.iframe.width),this.mouseTail.height=Number.parseFloat(this.iframe.height),this.mouseTail.classList.add("replayer-mouse-tail"),this.wrapper.insertBefore(this.mouseTail,this.iframe)),this.mouseTail.style.display="inherit"))}getMetaData(){const e=this.service.state.context.events[0],n=this.service.state.context.events[this.service.state.context.events.length-1];return{startTime:e.timestamp,endTime:n.timestamp,totalTime:n.timestamp-e.timestamp}}getCurrentTime(){return this.timer.timeOffset+this.getTimeOffset()}getTimeOffset(){const{baselineTime:e,events:n}=this.service.state.context;return e-n[0].timestamp}getMirror(){return this.mirror}play(e=0){var n,r;this.service.state.matches("paused")?this.service.send({type:"PLAY",payload:{timeOffset:e}}):(this.service.send({type:"PAUSE"}),this.service.send({type:"PLAY",payload:{timeOffset:e}})),(r=(n=this.iframe.contentDocument)==null?void 0:n.getElementsByTagName("html")[0])==null||r.classList.remove("rrweb-paused"),this.emitter.emit(O.Start)}pause(e){var n,r;e===void 0&&this.service.state.matches("playing")&&this.service.send({type:"PAUSE"}),typeof e=="number"&&(this.play(e),this.service.send({type:"PAUSE"})),(r=(n=this.iframe.contentDocument)==null?void 0:n.getElementsByTagName("html")[0])==null||r.classList.add("rrweb-paused"),this.emitter.emit(O.Pause)}resume(e=0){console.warn("The 'resume' was deprecated in 1.0. Please use 'play' method which has the same interface."),this.play(e),this.emitter.emit(O.Resume)}destroy(){this.pause(),this.config.root.removeChild(this.wrapper),this.emitter.emit(O.Destroy)}startLive(e){this.service.send({type:"TO_LIVE",payload:{baselineTime:e}})}addEvent(e){const n=this.config.unpackFn?this.config.unpackFn(e):e;Xn(n)&&this.mouse.classList.add("touch-device"),Promise.resolve().then((()=>this.service.send({type:"ADD_EVENT",payload:{event:n}})))}enableInteract(){this.iframe.setAttribute("scrolling","auto"),this.iframe.style.pointerEvents="auto"}disableInteract(){this.iframe.setAttribute("scrolling","no"),this.iframe.style.pointerEvents="none"}resetCache(){this.cache=Wt()}setupDom(){this.wrapper=document.createElement("div"),this.wrapper.classList.add("replayer-wrapper"),this.config.root.appendChild(this.wrapper),this.mouse=document.createElement("div"),this.mouse.classList.add("replayer-mouse"),this.wrapper.appendChild(this.mouse),this.config.mouseTail!==!1&&(this.mouseTail=document.createElement("canvas"),this.mouseTail.classList.add("replayer-mouse-tail"),this.mouseTail.style.display="inherit",this.wrapper.appendChild(this.mouseTail)),this.iframe=document.createElement("iframe");const e=["allow-same-origin"];this.config.UNSAFE_replayCanvas&&e.push("allow-scripts"),this.iframe.style.display="none",this.iframe.setAttribute("sandbox",e.join(" ")),this.disableInteract(),this.wrapper.appendChild(this.iframe),this.iframe.contentWindow&&this.iframe.contentDocument&&(Zo(this.iframe.contentWindow,this.iframe.contentDocument),at(this.iframe.contentWindow))}rebuildFullSnapshot(e,n=!1){if(!this.iframe.contentDocument)return console.warn("Looks like your replayer has been destroyed.");Object.keys(this.legacy_missingNodeRetryMap).length&&console.warn("Found unresolved missing node map",this.legacy_missingNodeRetryMap),this.legacy_missingNodeRetryMap={};const r=[],o=(i,l)=>{this.collectIframeAndAttachDocument(r,i);for(const c of this.config.plugins||[])c.onBuild&&c.onBuild(i,{id:l,replayer:this})};Mr(e.data.node,{doc:this.iframe.contentDocument,afterAppend:o,cache:this.cache,mirror:this.mirror}),o(this.iframe.contentDocument,e.data.node.id);for(const{mutationInQueue:i,builtNode:l}of r)this.attachDocumentToIframe(i,l),this.newDocumentQueue=this.newDocumentQueue.filter((c=>c!==i));const{documentElement:a,head:s}=this.iframe.contentDocument;this.insertStyleRules(a,s),this.service.state.matches("playing")||this.iframe.contentDocument.getElementsByTagName("html")[0].classList.add("rrweb-paused"),this.emitter.emit(O.FullsnapshotRebuilded,e),n||this.waitForStylesheetLoad(),this.config.UNSAFE_replayCanvas&&this.preloadAllImages()}insertStyleRules(e,n){var r;const o=ss(this.config.blockClass).concat(this.config.insertStyleRules);if(this.config.pauseAnimation&&o.push("html.rrweb-paused *, html.rrweb-paused *:before, html.rrweb-paused *:after { animation-play-state: paused !important; }"),this.usingVirtualDom){const a=this.virtualDom.createElement("style");this.virtualDom.mirror.add(a,Dn(a,this.virtualDom.unserializedId)),e.insertBefore(a,n),a.rules.push({source:N.StyleSheetRule,adds:o.map(((s,i)=>({rule:s,index:i})))})}else{const a=document.createElement("style");e.insertBefore(a,n);for(let s=0;s<o.length;s++)(r=a.sheet)==null||r.insertRule(o[s],s)}}attachDocumentToIframe(e,n){const r=this.usingVirtualDom?this.virtualDom.mirror:this.mirror,o=[],a=(s,i)=>{this.collectIframeAndAttachDocument(o,s);const l=r.getMeta(s);if(l?.type===D.Element&&l?.tagName.toUpperCase()==="HTML"){const{documentElement:c,head:u}=n.contentDocument;this.insertStyleRules(c,u)}for(const c of this.config.plugins||[])c.onBuild&&c.onBuild(s,{id:i,replayer:this})};_e(e.node,{doc:n.contentDocument,mirror:r,hackCss:!0,skipChild:!1,afterAppend:a,cache:this.cache}),a(n.contentDocument,e.node.id);for(const{mutationInQueue:s,builtNode:i}of o)this.attachDocumentToIframe(s,i),this.newDocumentQueue=this.newDocumentQueue.filter((l=>l!==s))}collectIframeAndAttachDocument(e,n){if(Ie(n,this.mirror)){const r=this.newDocumentQueue.find((o=>o.parentId===this.mirror.getId(n)));r&&e.push({mutationInQueue:r,builtNode:n})}}waitForStylesheetLoad(){var e;const n=(e=this.iframe.contentDocument)==null?void 0:e.head;if(n){const r=new Set;let o,a=this.service.state;const s=()=>{a=this.service.state};this.emitter.on(O.Start,s),this.emitter.on(O.Pause,s);const i=()=>{this.emitter.off(O.Start,s),this.emitter.off(O.Pause,s)};n.querySelectorAll('link[rel="stylesheet"]').forEach((l=>{l.sheet||(r.add(l),l.addEventListener("load",(()=>{r.delete(l),r.size===0&&o!==-1&&(a.matches("playing")&&this.play(this.getCurrentTime()),this.emitter.emit(O.LoadStylesheetEnd),o&&clearTimeout(o),i())})))})),r.size>0&&(this.service.send({type:"PAUSE"}),this.emitter.emit(O.LoadStylesheetStart),o=setTimeout((()=>{a.matches("playing")&&this.play(this.getCurrentTime()),o=-1,i()}),this.config.loadTimeout))}}preloadAllImages(){return Et(this,null,(function*(){this.service.state;const e=()=>{this.service.state};this.emitter.on(O.Start,e),this.emitter.on(O.Pause,e);const n=[];for(const r of this.service.state.context.events)r.type===C.IncrementalSnapshot&&r.data.source===N.CanvasMutation&&(n.push(this.deserializeAndPreloadCanvasEvents(r.data,r)),("commands"in r.data?r.data.commands:[r.data]).forEach((o=>{this.preloadImages(o,r)})));return Promise.all(n)}))}preloadImages(e,n){if(e.property==="drawImage"&&typeof e.args[0]=="string"&&!this.imageMap.has(n)){const r=document.createElement("canvas"),o=r.getContext("2d"),a=o?.createImageData(r.width,r.height);a?.data,JSON.parse(e.args[0]),o?.putImageData(a,0,0)}}deserializeAndPreloadCanvasEvents(e,n){return Et(this,null,(function*(){if(!this.canvasEventMap.has(n)){const r={isUnchanged:!0};if("commands"in e){const o=yield Promise.all(e.commands.map((a=>Et(this,null,(function*(){const s=yield Promise.all(a.args.map(ye(this.imageMap,null,r)));return wt(Qe({},a),{args:s})})))));r.isUnchanged===!1&&this.canvasEventMap.set(n,wt(Qe({},e),{commands:o}))}else{const o=yield Promise.all(e.args.map(ye(this.imageMap,null,r)));r.isUnchanged===!1&&this.canvasEventMap.set(n,wt(Qe({},e),{args:o}))}}}))}applyIncremental(e,n){var r,o,a;const{data:s}=e;switch(s.source){case N.Mutation:{try{this.applyMutation(s,n)}catch(i){this.warn(`Exception in mutation ${i.message||i}`,s)}break}case N.Drag:case N.TouchMove:case N.MouseMove:if(n){const i=s.positions[s.positions.length-1];this.mousePos={x:i.x,y:i.y,id:i.id,debugData:s}}else s.positions.forEach((i=>{const l={doAction:()=>{this.moveAndHover(i.x,i.y,i.id,n,s)},delay:i.timeOffset+e.timestamp-this.service.state.context.baselineTime};this.timer.addAction(l)})),this.timer.addAction({doAction(){},delay:e.delay-((r=s.positions[0])==null?void 0:r.timeOffset)});break;case N.MouseInteraction:{if(s.id===-1||n)break;const i=new Event(j[s.type].toLowerCase()),l=this.mirror.getNode(s.id);if(!l)return this.debugNodeNotFound(s,s.id);this.emitter.emit(O.MouseInteraction,{type:s.type,target:l});const{triggerFocus:c}=this.config;switch(s.type){case j.Blur:"blur"in l&&l.blur();break;case j.Focus:c&&l.focus&&l.focus({preventScroll:!0});break;case j.Click:case j.TouchStart:case j.TouchEnd:n?(s.type===j.TouchStart?this.touchActive=!0:s.type===j.TouchEnd&&(this.touchActive=!1),this.mousePos={x:s.x,y:s.y,id:s.id,debugData:s}):(s.type===j.TouchStart&&(this.tailPositions.length=0),this.moveAndHover(s.x,s.y,s.id,n,s),s.type===j.Click?(this.mouse.classList.remove("active"),this.mouse.offsetWidth,this.mouse.classList.add("active")):s.type===j.TouchStart?(this.mouse.offsetWidth,this.mouse.classList.add("touch-active")):s.type===j.TouchEnd&&this.mouse.classList.remove("touch-active"));break;case j.TouchCancel:n?this.touchActive=!1:this.mouse.classList.remove("touch-active");break;default:l.dispatchEvent(i)}break}case N.Scroll:{if(s.id===-1)break;if(this.usingVirtualDom){const i=this.virtualDom.mirror.getNode(s.id);if(!i)return this.debugNodeNotFound(s,s.id);i.scrollData=s;break}this.applyScroll(s,n);break}case N.ViewportResize:this.emitter.emit(O.Resize,{width:s.width,height:s.height});break;case N.Input:{if(s.id===-1)break;if(this.usingVirtualDom){const i=this.virtualDom.mirror.getNode(s.id);if(!i)return this.debugNodeNotFound(s,s.id);i.inputData=s;break}this.applyInput(s);break}case N.MediaInteraction:{const i=this.usingVirtualDom?this.virtualDom.mirror.getNode(s.id):this.mirror.getNode(s.id);if(!i)return this.debugNodeNotFound(s,s.id);const l=i;try{s.currentTime&&(l.currentTime=s.currentTime),s.volume&&(l.volume=s.volume),s.muted&&(l.muted=s.muted),s.type===me.Pause&&l.pause(),s.type===me.Play&&l.play(),s.type===me.RateChange&&(l.playbackRate=s.playbackRate)}catch(c){this.config.showWarning&&console.warn(`Failed to replay media interactions: ${c.message||c}`)}break}case N.StyleSheetRule:case N.StyleDeclaration:{this.usingVirtualDom?s.styleId?this.constructedStyleMutations.push(s):s.id&&((o=this.virtualDom.mirror.getNode(s.id))==null||o.rules.push(s)):this.applyStyleSheetMutation(s);break}case N.CanvasMutation:{if(!this.config.UNSAFE_replayCanvas)return;if(this.usingVirtualDom){const i=this.virtualDom.mirror.getNode(s.id);if(!i)return this.debugNodeNotFound(s,s.id);i.canvasMutations.push({event:e,mutation:s})}else{const i=this.mirror.getNode(s.id);if(!i)return this.debugNodeNotFound(s,s.id);zn({event:e,mutation:s,target:i,imageMap:this.imageMap,canvasEventMap:this.canvasEventMap,errorHandler:this.warnCanvasMutationFailed.bind(this)})}break}case N.Font:{try{const i=new FontFace(s.family,s.buffer?new Uint8Array(JSON.parse(s.fontSource)):s.fontSource,s.descriptors);(a=this.iframe.contentDocument)==null||a.fonts.add(i)}catch(i){this.config.showWarning&&console.warn(i)}break}case N.Selection:{if(n){this.lastSelectionData=s;break}this.applySelection(s);break}case N.AdoptedStyleSheet:{this.usingVirtualDom?this.adoptedStyleSheets.push(s):this.applyAdoptedStyleSheet(s);break}}}applyMutation(e,n){if(this.config.useVirtualDom&&!this.usingVirtualDom&&n&&(this.usingVirtualDom=!0,zo(this.iframe.contentDocument,this.mirror,this.virtualDom),Object.keys(this.legacy_missingNodeRetryMap).length))for(const c in this.legacy_missingNodeRetryMap)try{const u=this.legacy_missingNodeRetryMap[c],d=kn(u.node,this.virtualDom,this.mirror);d&&(u.node=d)}catch(u){this.config.showWarning&&console.warn(u)}const r=this.usingVirtualDom?this.virtualDom.mirror:this.mirror;e.removes.forEach((c=>{var u;const d=r.getNode(c.id);if(!d)return e.removes.find((p=>p.id===c.parentId))?void 0:this.warnNodeNotFound(e,c.id);let h=r.getNode(c.parentId);if(!h)return this.warnNodeNotFound(e,c.parentId);if(c.isShadow&&ve(h)&&(h=h.shadowRoot),r.removeNodeFromMap(d),h)try{h.removeChild(d),this.usingVirtualDom&&d.nodeName==="#text"&&h.nodeName==="STYLE"&&((u=h.rules)==null?void 0:u.length)>0&&(h.rules=[])}catch(p){if(p instanceof DOMException)this.warn("parent could not remove child in mutation",h,d,e);else throw p}}));const o=Qe({},this.legacy_missingNodeRetryMap),a=[],s=c=>{let u=null;return c.nextId&&(u=r.getNode(c.nextId)),c.nextId!==null&&c.nextId!==void 0&&c.nextId!==-1&&!u},i=c=>{var u;if(!this.iframe.contentDocument)return console.warn("Looks like your replayer has been destroyed.");let d=r.getNode(c.parentId);if(!d)return c.node.type===D.Document?this.newDocumentQueue.push(c):a.push(c);c.node.isShadow&&(ve(d)||d.attachShadow({mode:"open"}),d=d.shadowRoot);let h=null,p=null;if(c.previousId&&(h=r.getNode(c.previousId)),c.nextId&&(p=r.getNode(c.nextId)),s(c))return a.push(c);if(c.node.rootId&&!r.getNode(c.node.rootId))return;const m=c.node.rootId?r.getNode(c.node.rootId):this.usingVirtualDom?this.virtualDom:this.iframe.contentDocument;if(Ie(d,r)){this.attachDocumentToIframe(c,d);return}const b=(y,g)=>{for(const E of this.config.plugins||[])E.onBuild&&E.onBuild(y,{id:g,replayer:this})},S=_e(c.node,{doc:m,mirror:r,skipChild:!0,hackCss:!0,cache:this.cache,afterAppend:b});if(c.previousId===-1||c.nextId===-1){o[c.node.id]={node:S,mutation:c};return}const f=r.getMeta(d);if(f&&f.type===D.Element&&f.tagName==="textarea"&&c.node.type===D.Text){const y=Array.isArray(d.childNodes)?d.childNodes:Array.from(d.childNodes);for(const g of y)g.nodeType===d.TEXT_NODE&&d.removeChild(g)}if(h&&h.nextSibling&&h.nextSibling.parentNode)d.insertBefore(S,h.nextSibling);else if(p&&p.parentNode)d.contains(p)?d.insertBefore(S,p):d.insertBefore(S,null);else{if(d===m)for(;m.firstChild;)m.removeChild(m.firstChild);d.appendChild(S)}if(b(S,c.node.id),this.usingVirtualDom&&S.nodeName==="#text"&&d.nodeName==="STYLE"&&((u=d.rules)==null?void 0:u.length)>0&&(d.rules=[]),Ie(S,this.mirror)){const y=this.mirror.getId(S),g=this.newDocumentQueue.find((E=>E.parentId===y));g&&(this.attachDocumentToIframe(g,S),this.newDocumentQueue=this.newDocumentQueue.filter((E=>E!==g)))}(c.previousId||c.nextId)&&this.legacy_resolveMissingNode(o,d,S,c)};e.adds.forEach((c=>{i(c)}));const l=Date.now();for(;a.length;){const c=Ut(a);if(a.length=0,Date.now()-l>500){this.warn("Timeout in the loop, please check the resolve tree data:",c);break}for(const u of c)r.getNode(u.value.parentId)?lt(u,(d=>{i(d)})):this.debug("Drop resolve tree since there is no parent for the root node.",u)}Object.keys(o).length&&Object.assign(this.legacy_missingNodeRetryMap,o),Vt(e.texts).forEach((c=>{var u;const d=r.getNode(c.id);if(!d)return e.removes.find((h=>h.id===c.id))?void 0:this.warnNodeNotFound(e,c.id);if(d.textContent=c.value,this.usingVirtualDom){const h=d.parentNode;((u=h?.rules)==null?void 0:u.length)>0&&(h.rules=[])}})),e.attributes.forEach((c=>{const u=r.getNode(c.id);if(!u)return e.removes.find((d=>d.id===c.id))?void 0:this.warnNodeNotFound(e,c.id);for(const d in c.attributes)if(typeof d=="string"){const h=c.attributes[d];if(h===null)u.removeAttribute(d);else if(typeof h=="string")try{if(d==="_cssText"&&(u.nodeName==="LINK"||u.nodeName==="STYLE"))try{const p=r.getMeta(u);Object.assign(p.attributes,c.attributes);const m=_e(p,{doc:u.ownerDocument,mirror:r,skipChild:!0,hackCss:!0,cache:this.cache}),b=u.nextSibling,S=u.parentNode;if(m&&S){S.removeChild(u),S.insertBefore(m,b),r.replace(c.id,m);break}}catch{}u.setAttribute(d,h)}catch(p){this.config.showWarning&&console.warn("An error occurred may due to the checkout feature.",p)}else if(d==="style"){const p=h,m=u;for(const b in p)if(p[b]===!1)m.style.removeProperty(b);else if(p[b]instanceof Array){const S=p[b];m.style.setProperty(b,S[0],S[1])}else{const S=p[b];m.style.setProperty(b,S)}}}}))}applyScroll(e,n){var r,o;const a=this.mirror.getNode(e.id);if(!a)return this.debugNodeNotFound(e,e.id);const s=this.mirror.getMeta(a);if(a===this.iframe.contentDocument)(r=this.iframe.contentWindow)==null||r.scrollTo({top:e.y,left:e.x,behavior:n?"auto":"smooth"});else if(s?.type===D.Document)(o=a.defaultView)==null||o.scrollTo({top:e.y,left:e.x,behavior:n?"auto":"smooth"});else try{a.scrollTo({top:e.y,left:e.x,behavior:n?"auto":"smooth"})}catch{}}applyInput(e){const n=this.mirror.getNode(e.id);if(!n)return this.debugNodeNotFound(e,e.id);try{n.checked=e.isChecked,n.value=e.text}catch{}}applySelection(e){try{const n=new Set,r=e.ranges.map((({start:o,startOffset:a,end:s,endOffset:i})=>{const l=this.mirror.getNode(o),c=this.mirror.getNode(s);if(!l||!c)return;const u=new Range;u.setStart(l,a),u.setEnd(c,i);const d=l.ownerDocument,h=d?.getSelection();return h&&n.add(h),{range:u,selection:h}}));n.forEach((o=>o.removeAllRanges())),r.forEach((o=>{var a;return o&&((a=o.selection)==null?void 0:a.addRange(o.range))}))}catch{}}applyStyleSheetMutation(e){var n;let r=null;e.styleId?r=this.styleMirror.getStyle(e.styleId):e.id&&(r=((n=this.mirror.getNode(e.id))==null?void 0:n.sheet)||null),r&&(e.source===N.StyleSheetRule?this.applyStyleSheetRule(e,r):e.source===N.StyleDeclaration&&this.applyStyleDeclaration(e,r))}applyStyleSheetRule(e,n){var r,o,a,s;if((r=e.adds)==null||r.forEach((({rule:i,index:l})=>{try{if(Array.isArray(l)){const{positions:c,index:u}=dt(l);Te(n.cssRules,c).insertRule(i,u)}else{const c=l===void 0?void 0:Math.min(l,n.cssRules.length);n?.insertRule(i,c)}}catch{}})),(o=e.removes)==null||o.forEach((({index:i})=>{try{if(Array.isArray(i)){const{positions:l,index:c}=dt(i);Te(n.cssRules,l).deleteRule(c||0)}else n?.deleteRule(i)}catch{}})),e.replace)try{(a=n.replace)==null||a.call(n,e.replace)}catch{}if(e.replaceSync)try{(s=n.replaceSync)==null||s.call(n,e.replaceSync)}catch{}}applyStyleDeclaration(e,n){e.set&&Te(n.rules,e.index).style.setProperty(e.set.property,e.set.value,e.set.priority),e.remove&&Te(n.rules,e.index).style.removeProperty(e.remove.property)}applyAdoptedStyleSheet(e){var n;const r=this.mirror.getNode(e.id);if(!r)return;(n=e.styles)==null||n.forEach((i=>{var l;let c=null,u=null;if(ve(r)?u=((l=r.ownerDocument)==null?void 0:l.defaultView)||null:r.nodeName==="#document"&&(u=r.defaultView),!!u)try{c=new u.CSSStyleSheet,this.styleMirror.add(c,i.styleId),this.applyStyleSheetRule({source:N.StyleSheetRule,adds:i.rules},c)}catch{}}));const o=10;let a=0;const s=(i,l)=>{const c=l.map((u=>this.styleMirror.getStyle(u))).filter((u=>u!==null));ve(i)?i.shadowRoot.adoptedStyleSheets=c:i.nodeName==="#document"&&(i.adoptedStyleSheets=c),c.length!==l.length&&a<o&&(setTimeout((()=>s(i,l)),0+100*a),a++)};s(r,e.styleIds)}legacy_resolveMissingNode(e,n,r,o){const{previousId:a,nextId:s}=o,i=a&&e[a],l=s&&e[s];if(i){const{node:c,mutation:u}=i;n.insertBefore(c,r),delete e[u.node.id],delete this.legacy_missingNodeRetryMap[u.node.id],(u.previousId||u.nextId)&&this.legacy_resolveMissingNode(e,n,c,u)}if(l){const{node:c,mutation:u}=l;n.insertBefore(c,r.nextSibling),delete e[u.node.id],delete this.legacy_missingNodeRetryMap[u.node.id],(u.previousId||u.nextId)&&this.legacy_resolveMissingNode(e,n,c,u)}}moveAndHover(e,n,r,o,a){const s=this.mirror.getNode(r);if(!s)return this.debugNodeNotFound(a,r);const i=ut(s,this.iframe),l=e*i.absoluteScale+i.x,c=n*i.absoluteScale+i.y;this.mouse.style.left=`${l}px`,this.mouse.style.top=`${c}px`,o||this.drawMouseTail({x:l,y:c}),this.hoverElements(s)}drawMouseTail(e){if(!this.mouseTail)return;const{lineCap:n,lineWidth:r,strokeStyle:o,duration:a}=this.config.mouseTail===!0?Ct:Object.assign({},Ct,this.config.mouseTail),s=()=>{if(!this.mouseTail)return;const i=this.mouseTail.getContext("2d");!i||!this.tailPositions.length||(i.clearRect(0,0,this.mouseTail.width,this.mouseTail.height),i.beginPath(),i.lineWidth=r,i.lineCap=n,i.strokeStyle=o,i.moveTo(this.tailPositions[0].x,this.tailPositions[0].y),this.tailPositions.forEach((l=>i.lineTo(l.x,l.y))),i.stroke())};this.tailPositions.push(e),s(),setTimeout((()=>{this.tailPositions=this.tailPositions.filter((i=>i!==e)),s()}),a/this.speedService.state.context.timer.speed)}hoverElements(e){var n;(n=this.iframe.contentDocument)==null||n.querySelectorAll(".\\:hover").forEach((o=>{o.classList.remove(":hover")}));let r=e;for(;r;)r.classList&&r.classList.add(":hover"),r=r.parentElement}isUserInteraction(e){return e.type!==C.IncrementalSnapshot?!1:e.data.source>N.Mutation&&e.data.source<=N.Input}backToNormal(){this.nextUserInteractionEvent=null,!this.speedService.state.matches("normal")&&(this.speedService.send({type:"BACK_TO_NORMAL"}),this.emitter.emit(O.SkipEnd,{speed:this.speedService.state.context.normalSpeed}))}warnNodeNotFound(e,n){this.warn(`Node with id '${n}' not found. `,e)}warnCanvasMutationFailed(e,n){this.warn("Has error on canvas update",n,"canvas mutation:",e)}debugNodeNotFound(e,n){this.debug(Nt,`Node with id '${n}' not found. `,e)}warn(...e){!this.config.showWarning||console.warn(Nt,...e)}debug(...e){!this.config.showDebug||console.log(Nt,...e)}}const{addCustomEvent:Cs}=be,{freezePage:Is}=be;return ee.EventType=C,ee.IncrementalSource=N,ee.MouseInteractions=j,ee.Replayer=Ns,ee.ReplayerEvents=O,ee.addCustomEvent=Cs,ee.freezePage=Is,ee.record=be,ee.utils=kr,Object.defineProperty(ee,"__esModule",{value:!0}),ee}({});var initSessionRecording=function initSessionRecording({target:target,origin:origin,session_id:session_id,accountKey:accountKey,provider:provider}){let events=[];rrweb.record({emit(event){events.push(event)}});setInterval((()=>{if(events.length>0){const resource={attributes:[{key:"origin",value:{stringValue:origin}},{key:"mw.client_origin",value:{stringValue:origin}},{key:"mw.account_key",value:{stringValue:accountKey}},{key:"rum_origin",value:{stringValue:origin}},{key:"session_id",value:{stringValue:session_id}}],droppedAttributesCount:0};const scopeMetric={};scopeMetric["scope"]={};const metrics=[];events.forEach((event=>{const metric={name:"rum_event",gauge:{dataPoints:[{attributes:[{key:"type",value:{stringValue:String(event.type)}},{key:"timestamp",value:{stringValue:String(event.timestamp)}},{key:"data",value:{stringValue:JSON.stringify(event.data)}}],timeUnixNano:String(event.timestamp*1e6),asDouble:0}]}};metrics.push(metric)}));scopeMetric["metrics"]=metrics;const data={resourceMetrics:[{resource:resource,scopeMetrics:[scopeMetric]}]};const c=JSON.stringify(data);events=[];fetch(`${target}/v1/metrics`,{method:"POST",headers:{"Content-Type":"application/json",MW_API_KEY:accountKey},body:c})}}),10*1e3)};exports.initSessionRecording=initSessionRecording},{}],686:[function(require,module,exports){class CustomAttributeSpanProcessor{constructor(attributeName,attributeValue){this.attributeName=attributeName;this.attributeValue=attributeValue}onStart(span){}onEnd(span){const updatedAttributes=span.attributes;updatedAttributes[this.attributeName]=this.attributeValue;span.setAttributes(updatedAttributes)}shutdown(){}}const{maybeErrorToObject:maybeErrorToObject}=require("../packages/logs-instrumentation");const{B3Propagator:B3Propagator,B3InjectEncoding:B3InjectEncoding}=require("@opentelemetry/propagator-b3");const{initSessionRecording:initSessionRecording}=require("./recording");const{RandomIdGenerator:RandomIdGenerator}=require("@opentelemetry/sdk-trace-base");const{CompositePropagator:CompositePropagator,W3CTraceContextPropagator:W3CTraceContextPropagator}=require("@opentelemetry/core");const SESSION_ID_ATTRIBUTE="session.id";const COOKIE_NAME="mwRumSessionId";const COOKIE_VALUE_SEPARATOR="-";const MAX_INACTIVITY_MS=1e3*60*240;const REFRESH_ACTIVITY_TIME_AFTER_MS=1e3*30;const idGenerator=new RandomIdGenerator;let defaultAttributes={};function getCookieValue(){let cookie=document.cookie.split("; ").find((function(item){return item.startsWith("".concat(COOKIE_NAME,"="))}));if(!cookie)return;let _a=cookie.split("=")[1].split(COOKIE_VALUE_SEPARATOR),sessionId=_a[0],lastActivityTimestamp=_a[1];return{sessionId:sessionId,lastActivityTimestamp:parseInt(lastActivityTimestamp,10)}}function getOS(){let userAgent=window.navigator.userAgent,platform=window.navigator.platform,macosPlatforms=["Macintosh","MacIntel","MacPPC","Mac68K"],windowsPlatforms=["Win32","Win64","Windows","WinCE"],iosPlatforms=["iPhone","iPad","iPod"],os=null;if(macosPlatforms.indexOf(platform)!==-1){os="Mac OS"}else if(iosPlatforms.indexOf(platform)!==-1){os="iOS"}else if(windowsPlatforms.indexOf(platform)!==-1){os="Windows"}else if(/Android/.test(userAgent)){os="Android"}else if(!os&&/Linux/.test(platform)){os="Linux"}return os}function getBrowserName(){let userAgent=navigator.userAgent;let browserName;if(userAgent.match(/chrome|chromium|crios/i)){browserName="Chrome"}else if(userAgent.match(/firefox|fxios/i)){browserName="Firefox"}else if(userAgent.match(/safari/i)){browserName="Safari"}else if(userAgent.match(/opr\//i)){browserName="Opera"}else if(userAgent.match(/edg/i)){browserName="Edge"}else{browserName="No browser detection"}return browserName}function getCurrentSessionId(){let now=Date.now();if(cookie){let inactivityDuration=now-cookie.lastActivityTimestamp;if(inactivityDuration>MAX_INACTIVITY_MS){cookie=undefined}else if(inactivityDuration>REFRESH_ACTIVITY_TIME_AFTER_MS){cookie.lastActivityTimestamp=now;setCookieValue(cookie)}}if(!cookie){cookie={sessionId:idGenerator.generateTraceId(),lastActivityTimestamp:now};setCookieValue(cookie)}return cookie.sessionId}function setCookieValue(cookie){document.cookie="".concat(COOKIE_NAME,"=").concat(cookie.sessionId).concat(COOKIE_VALUE_SEPARATOR).concat(cookie.lastActivityTimestamp,"; path=/")}let provider,logsExporter;let cookie=getCookieValue();module.exports.init=config=>{const opentelemetry=require("@opentelemetry/api");const{trace:trace,context:context,propagation:propagation}=require("@opentelemetry/api");const{WebTracerProvider:WebTracerProvider}=require("@opentelemetry/sdk-trace-web");const{BatchSpanProcessor:BatchSpanProcessor}=require("@opentelemetry/sdk-trace-base");const{OTLPTraceExporter:OTLPTraceExporter}=require("@opentelemetry/exporter-trace-otlp-http");const{ZoneContextManager:ZoneContextManager}=require("@opentelemetry/context-zone");const{registerInstrumentations:registerInstrumentations}=require("@opentelemetry/instrumentation");const{Resource:Resource}=require("@opentelemetry/resources");const{SemanticResourceAttributes:SemanticResourceAttributes}=require("@opentelemetry/semantic-conventions");const{LogsExporter:LogsExporter}=require("../packages/logs-exporter");const{LogsInstrumentation:LogsInstrumentation}=require("../packages/logs-instrumentation");const{DocumentLoadInstrumentation:DocumentLoadInstrumentation}=require("instrumentation-document-load");const{XMLHttpRequestInstrumentation:XMLHttpRequestInstrumentation}=require("middleware.io-instrumentation-xml-http-request");const{FetchInstrumentation:FetchInstrumentation}=require("@opentelemetry/instrumentation-fetch");const{MeterProvider:MeterProvider,PeriodicExportingMetricReader:PeriodicExportingMetricReader}=require("@opentelemetry/sdk-metrics");const{OTLPMetricExporter:OTLPMetricExporter}=require("@opentelemetry/exporter-metrics-otlp-http");const{INSTRUMENTED_EVENT_NAMES:INSTRUMENTED_EVENT_NAMES,DEFAULT_USER_INTERACTION_ELEMENT_NAME_LIMIT:DEFAULT_USER_INTERACTION_ELEMENT_NAME_LIMIT}=require("./constants");const{getUserInteractionSpanName:getUserInteractionSpanName}=require("./util");const BUFFER_TIMEOUT=2e3;const BUFFER_MAX_SPANS=2048;const session_id=getCurrentSessionId();let resources=new Resource({[SemanticResourceAttributes.SERVICE_NAME]:config.serviceName,["mw_agent"]:true,["project.name"]:config.projectName,["mw.account_key"]:config.accountKey,["env"]:config.env,["browser.trace"]:true,["type"]:"rum",["origin"]:window.location.origin,["rum_origin"]:window.location.origin,[SESSION_ID_ATTRIBUTE]:session_id});provider=new WebTracerProvider({resource:resources});trace.setGlobalTracerProvider(provider);if(config.tracePropagationFormat==="w3c"){provider.register({propagator:new W3CTraceContextPropagator})}else if(config.tracePropagationTargets==="b3"){provider.register({propagator:new CompositePropagator({propagators:[new B3Propagator,new B3Propagator({injectEncoding:B3InjectEncoding.MULTI_HEADER})]})})}else{provider.register({propagator:new CompositePropagator({propagators:[new W3CTraceContextPropagator,new B3Propagator,new B3Propagator({injectEncoding:B3InjectEncoding.MULTI_HEADER})]})})}const headers={};propagation.inject(context.active(),headers);const os=getOS();const browserName=getBrowserName();provider.addSpanProcessor(new BatchSpanProcessor(new OTLPTraceExporter({url:`${config.target}/v1/traces`,headers:{"Content-Type":"application/json","Access-Control-Allow-Headers":"*"},concurrencyLimit:10,exportTimeoutMillis:1e4})));provider.addSpanProcessor(new CustomAttributeSpanProcessor(SESSION_ID_ATTRIBUTE,session_id));provider.addSpanProcessor(new CustomAttributeSpanProcessor("os",os));provider.addSpanProcessor(new CustomAttributeSpanProcessor("browser.name",browserName));provider.addSpanProcessor(new CustomAttributeSpanProcessor("navigator.userAgent",navigator.userAgent.toString()));provider.addSpanProcessor(new CustomAttributeSpanProcessor("env",config.env));provider.addSpanProcessor(new CustomAttributeSpanProcessor("root.url",window.location.pathname));provider.addSpanProcessor(new CustomAttributeSpanProcessor("recording.available",config.recording=="1"?"true":"false"));defaultAttributes={...defaultAttributes,...config.defaultAttributes};for(const key in defaultAttributes){provider.addSpanProcessor(new CustomAttributeSpanProcessor(key,defaultAttributes[key]))}provider.register({contextManager:new ZoneContextManager});logsExporter=new LogsExporter({resource:resources,collectorUrl:`${config.target}/v1/logs`,maxQueueSize:BUFFER_MAX_SPANS,scheduledDelayMillis:BUFFER_TIMEOUT,projectName:config.projectName,serviceName:config.serviceName});const logsInstrumentation=new LogsInstrumentation({exporter:logsExporter});logsInstrumentation.enable();document.addEventListener("click",(event=>{const _eventNames=new Set(["click"]);const target=event.target;if(!(target instanceof HTMLElement)){return undefined}if(!target.getAttribute){return undefined}if(target.hasAttribute("disabled")){return undefined}if(!_eventNames.has(event.type)){return undefined}let tracer=opentelemetry.trace.getTracer("user-interaction");const newName=getUserInteractionSpanName(event.type,target,DEFAULT_USER_INTERACTION_ELEMENT_NAME_LIMIT);let span=tracer.startSpan(newName);event.target.dataset.spanId=span.spanContext().spanId;span.setAttribute("event.type",event.type);span.setAttribute("component","user-interaction");span.setAttribute("target_element",target.tagName);span.setAttribute("target_xpath","xpath");span.setAttribute("http.url",window.location.href);span.setAttribute("http.user_agent",navigator.userAgent);span.end()}));registerInstrumentations({instrumentations:[new DocumentLoadInstrumentation,new XMLHttpRequestInstrumentation({enabled:false,ignoreUrls:config.ignoreUrls,propagateTraceHeaderCorsUrls:config.tracePropagationTargets}),new FetchInstrumentation({enabled:false,ignoreUrls:config.ignoreUrls,propagateTraceHeaderCorsUrls:config.tracePropagationTargets,clearTimingResources:true})]});const collectorOptions={url:`${config.target}/v1/metrics`,headers:{"Content-Type":"application/json","Access-Control-Allow-Headers":"*"},concurrencyLimit:1};const metricExporter=new OTLPMetricExporter(collectorOptions);let meterProvider=new MeterProvider({resource:resources});meterProvider.addMetricReader(new PeriodicExportingMetricReader({exporter:metricExporter,exportIntervalMillis:2e4}));const attributes={};attributes[SESSION_ID_ATTRIBUTE]=session_id;attributes["os"]=os;attributes["browser.name"]=browserName;attributes["navigator.userAgent"]=navigator.userAgent.toString();attributes["env"]=config.env;attributes["root.url"]=window.location.pathname;attributes["type"]="rum";const observer=new PerformanceObserver((entryList=>{const entries=entryList.getEntries();entries.forEach((entry=>{switch(entry.entryType){case"paint":if(entry.name==="first-paint"){if(entry.startTime){let fp=meterProvider.getMeter("mw-counter").createCounter("first-paint",{description:"Time to first paint",unit:"ms",valueType:1});fp.add(entry.startTime,attributes)}}else if(entry.name==="first-contentful-paint"){if(entry.startTime){let counter=meterProvider.getMeter("mw-counter").createCounter("first-contentful-paint",{description:"Time to first contentful paint",unit:"ms",valueType:1});counter.add(entry.startTime,attributes)}}break;case"layout-shift":if(entry.value){let c=meterProvider.getMeter("mw-counter").createCounter("layout-shift",{description:"Layout shift score",unit:"",valueType:1});c.add(entry.value,attributes)}break;case"first-input":let t=entry.processingStart-entry.startTime;if(t&&t>=0){let fi=meterProvider.getMeter("mw-counter").createCounter("first-input-delay",{description:"First input delay",unit:"ms",valueType:1});fi.add(t,attributes)}break;case"largest-contentful-paint":let Ltime=entry.renderTime-entry.loadTime;if(Ltime&&Ltime>=0){let lcp=meterProvider.getMeter("mw-counter").createCounter("largest-contentful-paint",{description:"Largest Contentful Paint",unit:"ms",valueType:1});lcp.add(Ltime,attributes)}break;case"longtask":if(entry.duration){let lt=meterProvider.getMeter("mw-counter").createCounter("longtask",{description:"Long task duration",unit:"ms",valueType:1});lt.add(entry.duration,attributes)}break;default:break}}))}));observer.observe({entryTypes:["longtask","largest-contentful-paint","navigation","paint","resource","layout-shift","first-input"]});let userStatusMetric=meterProvider.getMeter("mw-counter").createCounter("user.status",{description:"User Status ",unit:"",valueType:1});userStatusMetric.add(1,attributes);if(config.recording=="1"){const data={target:config.target,origin:window.location.origin,session_id:session_id,accountKey:config.accountKey,provider:provider};initSessionRecording(data)}};module.exports.setAttributes=(newAttributes={})=>{defaultAttributes={...defaultAttributes,...newAttributes};for(const key in defaultAttributes){provider.addSpanProcessor(new CustomAttributeSpanProcessor(key,defaultAttributes[key]))}};module.exports.recordLog=(type,error)=>{logsExporter.recordLog({type:type,message:error instanceof Error?error.message:String(error),error:error instanceof Error?maybeErrorToObject(error):maybeErrorToObject(new Error(String(error)))})}},{"../packages/logs-exporter":683,"../packages/logs-instrumentation":684,"./constants":681,"./recording":685,"./util":687,"@opentelemetry/api":19,"@opentelemetry/context-zone":52,"@opentelemetry/core":63,"@opentelemetry/exporter-metrics-otlp-http":95,"@opentelemetry/exporter-trace-otlp-http":160,"@opentelemetry/instrumentation":232,"@opentelemetry/instrumentation-fetch":222,"@opentelemetry/propagator-b3":244,"@opentelemetry/resources":298,"@opentelemetry/sdk-metrics":323,"@opentelemetry/sdk-trace-base":429,"@opentelemetry/sdk-trace-web":442,"@opentelemetry/semantic-conventions":540,"instrumentation-document-load":547,"middleware.io-instrumentation-xml-http-request":562}],687:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getCollectionSourceUrl=exports.tryNumber=exports.getUserInteractionSpanName=void 0;var constants_1=require("./constants");var getUserInteractionSpanName=function(eventType,element,userInteractionElementNameLimit){var _a;var id="";var scanElement=element;while(scanElement&&!id){id=scanElement.getAttribute("aria-label")||scanElement.id||scanElement.textContent||scanElement.value||"";id=id.trim();scanElement=scanElement.parentElement}if(id){return"".concat(eventType," on '").concat(id,"'")}};exports.getUserInteractionSpanName=getUserInteractionSpanName;var tryNumber=function(input){if(typeof input==="number"){return input}return input!=null&&Number.isFinite(+input)?+input:undefined};exports.tryNumber=tryNumber;var getCollectionSourceUrl=function(sourceUrl){var url=new URL(sourceUrl);url.pathname=url.pathname.replace(/\/v1\/(traces|metrics|logs)\/?$/,"");if(!url.pathname.endsWith("/")){url.pathname+="/"}return url.href};exports.getCollectionSourceUrl=getCollectionSourceUrl},{"./constants":681}]},{},[1]);